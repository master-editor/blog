{"id":5617,"date":"2020-08-10T16:34:47","date_gmt":"2020-08-10T11:04:47","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=5617"},"modified":"2022-06-19T11:19:42","modified_gmt":"2022-06-19T05:49:42","slug":"aws-route53-ansible","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/","title":{"rendered":"Ansible Route53 Examples &#8211; read add remove update DNS records"},"content":{"rendered":"<p>In this post, we are going to see how to add and remove records in AWS route53 DNS using ansible.<\/p>\n<p>If you are an AWS architect or a developer\/devops executive managing your infrastructure hosted in AWS. you might have used the AWS route53 DNS web service. with route53 you can create <strong>private<\/strong> and <strong>public<\/strong> domain name services.<\/p>\n<p>For example, If you want to have your entire infrastructure servers to have their internally available domain names like <code>server1.gritfy.infra<\/code> , <code>server2.gritfy.infra<\/code> and you can also use route53 as your DNS server for your publically available sites like <code>gritfy.com<\/code> and <code>devopsjunction.com<\/code><\/p>\n<p>we use AWS management console for these tasks usually. But using the AWS management console often is not a secure and efficient way. Here comes ansible an efficient automation tool to take care of your provisioning and configuration management tasks.<\/p>\n<h2>Configure <span style=\"color: #e82c7e;\">Ansible<\/span> to work with AWS modules<\/h2>\n<p>For ansible to connect amazon web services infrastructure you need to enable programmatic access first and get your AWS access key and secret key<\/p>\n<p>Refer the following article to get your Key and Secret ready.\u00a0 Besides that,\u00a0 you would also need to check if you have the right version python installed in your control machine with boto packages. As ansible uses boto package to connect to the aws.<\/p>\n<ol>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-aws-example-ec2\/#Setup_Programmatic_Access\">How to create Programmatic access &#8211; Key and Secret<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#Environment_Setup_for_Ansible_to_work_with_AWS_EC2_module\">How to setup Boto python module for Ansible aws module<\/a><\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h2>Ansible <span style=\"color: #e82c7e;\">Route53 examples<\/span> to read add remove update DNS records<\/h2>\n<p>let us see the examples on how to use the route53 ansible module to read add remove and update the DNS records.\u00a0 Simply put we are going to see how to perform the CRUD (Create Read Update Delete) tasks.<\/p>\n<p>Before proceeding further, I presume that you are well aware of the DNS records and its types. Ansible supports all the <a href=\"https:\/\/www.cloudflare.com\/learning\/dns\/dns-records\/\">DNS record types<\/a> such as<\/p>\n<ul>\n<li>A<\/li>\n<li>CNAME<\/li>\n<li>MX<\/li>\n<li>AAAA<\/li>\n<li>TXT<\/li>\n<li>PTR<\/li>\n<li>SRV<\/li>\n<li>SPF<\/li>\n<li>CAA<\/li>\n<li>NS<\/li>\n<li>SOA<\/li>\n<\/ul>\n<p>with no further ado let us go the practical implementation of adding, removing, retrieving and deleting DNS records of various types mentioned above.<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3>How to <span style=\"color: #e82c7e;\">READ\/RETRIEVE<\/span> the DNS records from AWS route53 &#8211; Ansible<\/h3>\n<p>In this section we are going to see, How to read or retrieve the DNS records from AWS route53 DNS service using the ansible route53 module.<\/p>\n<p>Create an ansible playbook with the following content<\/p>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff none repeat scroll 0% 0%; padding: 0.5em; color: #333333; overflow-x: auto;\"><span class=\"hljs-meta\" style=\"color: #969896;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\"> - hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">   tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> Route <span class=\"hljs-number\">53<\/span> A Record addition\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      route53:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        state:<\/span> get\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        private_zone:<\/span> <span class=\"hljs-literal\" style=\"color: #0086b3;\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        zone:<\/span> gritfy.infra\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        record:<\/span> server01.ffx.infra\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        type:<\/span> A\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      register:<\/span> record\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> display the record\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      debug:<\/span> var=record<\/pre>\n<p>In this playbook, we are trying to get the A record <code>server01.ffx.infra<\/code> since this is a private zone we are using the parameter <code>private_zone: yes<\/code> which is otherwise by default stays <code>no<\/code><\/p>\n<p>If it is a public zone like <code>gritfy.com<\/code> the playbook would be exactly the same except there would not any private_zone parameter.<\/p>\n<p>This playbook is designed to get the CNAME record of <code>www.grtify.com<\/code> from the zone <code>gritfy.com<\/code><\/p>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff none repeat scroll 0% 0%; padding: 0.5em; color: #333333; overflow-x: auto;\"><span class=\"hljs-meta\" style=\"color: #969896;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\"> - hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">   tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> Retrieve the Record\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      route53:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        state:<\/span> get\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        zone:<\/span> gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        record:<\/span> www.gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        type:<\/span> CNAME\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      register:<\/span> record\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> display the record\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      debug:<\/span> var=record<\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>Here is the sample result you can expect while retrieving the DNS records using the route53 module.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/AnsibleRoute53.png\"><img class=\"alignnone size-full wp-image-5622\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/AnsibleRoute53.png\" alt=\"\" width=\"2156\" height=\"1696\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/AnsibleRoute53.png 2156w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/AnsibleRoute53-300x236.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/AnsibleRoute53-768x604.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/AnsibleRoute53-1024x806.png 1024w\" sizes=\"(max-width: 2156px) 100vw, 2156px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>How to <span style=\"color: #e82c7e;\">ADD\/CREATE<\/span> DNS records to AWS route53 using Ansible<\/h3>\n<p>In this section, we are going to see how to add a DNS record to route53 DNS service using the ansible route53 module.<\/p>\n<p>Here is the playbook to add the DNS records<\/p>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff none repeat scroll 0% 0%; padding: 0.5em; color: #333333; overflow-x: auto;\"><span class=\"hljs-meta\" style=\"color: #969896;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\"> - hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">   tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> Route <span class=\"hljs-number\">53<\/span> A Record addition\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      route53:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        state:<\/span> present\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        zone:<\/span> gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        record:<\/span> testrecord.gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        type:<\/span> A\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        ttl:<\/span> <span class=\"hljs-number\">300<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        value:<\/span> <span class=\"hljs-number\">172.99<\/span><span class=\"hljs-number\">.1<\/span><span class=\"hljs-number\">.82<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        wait:<\/span> <span class=\"hljs-literal\" style=\"color: #0086b3;\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      register:<\/span> result\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> display records\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      debug:<\/span> var=result<\/pre>\n<p>Execution result of this playbook would look something like this<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-10.06.46-AM.png\"><img class=\"alignnone size-full wp-image-5623\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-10.06.46-AM.png\" alt=\"Ansible Route53\" width=\"2112\" height=\"862\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-10.06.46-AM.png 2112w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-10.06.46-AM-300x122.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-10.06.46-AM-768x313.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-10.06.46-AM-1024x418.png 1024w\" sizes=\"(max-width: 2112px) 100vw, 2112px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>A quick look at the parameters used along with the route53 module.<\/p>\n<p><code>state<\/code> &#8211; to tell ansible to create or remove the records. we are creating here so the value is present<\/p>\n<p><code>zone<\/code> &#8211; domain name \/ zone name in the aws infrastructure.<\/p>\n<p><code>record<\/code> &#8211; the DNS record we are trying to work with<\/p>\n<p><code>type<\/code> &#8211; type of the record<\/p>\n<p><code>ttl<\/code> &#8211; time to live value of the domain name record. AWS supports creating records with very low values like 300 seconds<\/p>\n<p><code>value<\/code> &#8211; the IP address or the record value for the type of record we have chosen<\/p>\n<p><code>wait<\/code> &#8211; wait for the record to be created before exiting the playbook.\u00a0 With this parameter set playbook would continue to run until the route53 record gets created or failed.<\/p>\n<p>&nbsp;<\/p>\n<h3>How to <span style=\"color: #e82c7e;\">UPDATE<\/span> DNS records in AWS route53 using Ansible<\/h3>\n<p>In this section, we are going to see how to update the DNS records we have already created and overwrite.\u00a0 Let us take the same DNS record we have added in the last section <code>testrecord.gritfy.com<\/code> earlier it was pointing to the IP <code>172.99.1.82<\/code> Now let us change the IP to something else.<\/p>\n<p>here is the playbook to update the DNS records and overwrite the existing the record information like ip, ttl value etc.<\/p>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff none repeat scroll 0% 0%; padding: 0.5em; color: #333333; overflow-x: auto;\"><span class=\"hljs-meta\" style=\"color: #969896;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\"> - hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">   tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> Route <span class=\"hljs-number\">53<\/span> A Record Update\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      route53:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        state:<\/span> present\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        zone:<\/span> gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        record:<\/span> testrecord.gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        type:<\/span> A\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        ttl:<\/span> <span class=\"hljs-number\">300<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        value:<\/span> <span class=\"hljs-number\">172.99<\/span><span class=\"hljs-number\">.2<\/span><span class=\"hljs-number\">.211<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        wait:<\/span> <span class=\"hljs-literal\" style=\"color: #0086b3;\">yes<\/span>\r\n<span style=\"color: #993300;\"><span class=\"hljs-attr\">        overwrite:<\/span> <span class=\"hljs-literal\">yes<\/span><\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      register:<\/span> result\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> display records\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      debug:<\/span> var=result<\/pre>\n<p>Since we have already covered the route53 parameters already in the previous section, let us check what is newly added in this playbook.<\/p>\n<p><code>overwrite<\/code> &#8211; this tells ansible to overwrite the already existing record. it enables the in-place update possible<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>How to <span style=\"color: #e82c7e;\">DELETE<\/span> DNS records in AWS route53 using Ansible<\/h3>\n<p>To delete existing records in the AWS route53 using ansible route53 module. we can use the same playbook we have used to create the DNS record except that you have to change the value of state parameter to <code>absent<\/code><\/p>\n<p>Here is the playbook to delete the DNS records in AWS route 53 using Ansible<\/p>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff none repeat scroll 0% 0%; padding: 0.5em; color: #333333; overflow-x: auto;\"><span class=\"hljs-meta\" style=\"color: #969896;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\"> - hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">   tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> Route <span class=\"hljs-number\">53<\/span> A Record addition\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      route53:<\/span>\r\n<span style=\"color: #993300;\"><span class=\"hljs-attr\">        state:<\/span> absent<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        zone:<\/span> gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        record:<\/span> testrecord.gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        type:<\/span> A\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        ttl:<\/span> <span class=\"hljs-number\">300<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        value:<\/span> <span class=\"hljs-number\">172.99<\/span><span class=\"hljs-number\">.1<\/span><span class=\"hljs-number\">.211<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        wait:<\/span> <span class=\"hljs-literal\" style=\"color: #0086b3;\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      register:<\/span> result\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> display records\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      debug:<\/span> var=result<\/pre>\n<p>The problem with this playbook is that you have to enter all the fields manually.\u00a0 If the values specified are incorrect than the values available on the AWS route 53 you would get an error like this<\/p>\n<pre>fatal: [localhost]: FAILED! =&gt; \r\n{\"changed\": false, \"msg\": \"[Tried to delete resource record set \r\n[name='testrecord.gritfy.com.', type='A'] \r\nbut the values provided do not match the current values]\"}<\/pre>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p><strong>The right approach to READ and DELETE the records<\/strong><\/p>\n<p>Rather filling all the values manually, which often result in some human typo or error.\u00a0 we can first read the DNS record and store the values in the register variable and use those values during the delete operation, in this way we avoid having to remember the values and filling it manually.<\/p>\n<pre class=\"hljs\" style=\"display: block; background: #ffffff none repeat scroll 0% 0%; padding: 0.5em; color: #333333; overflow-x: auto;\"><span class=\"hljs-meta\" style=\"color: #969896;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\"> - hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">   tasks:<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> Retrieve the Records First\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      route53:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        state:<\/span> get\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        zone:<\/span> gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        record:<\/span> testrecord.gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        type:<\/span> A\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      register:<\/span> rec\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> display the record\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      debug:<\/span> var=rec\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> Route <span class=\"hljs-number\">53<\/span> Delete Records\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      route53:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        state:<\/span> absent\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        zone:<\/span> gritfy.com\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        record:<\/span> <span class=\"hljs-string\" style=\"color: #df5000;\">\"<span class=\"hljs-template-variable\" style=\"color: #df5000;\">{{ rec.set.record }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        type:<\/span> <span class=\"hljs-string\" style=\"color: #df5000;\">\"<span class=\"hljs-template-variable\" style=\"color: #df5000;\">{{ rec.set.type }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        ttl:<\/span> <span class=\"hljs-string\" style=\"color: #df5000;\">\"<span class=\"hljs-template-variable\" style=\"color: #df5000;\">{{ rec.set.ttl }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        value:<\/span> <span class=\"hljs-string\" style=\"color: #df5000;\">\"<span class=\"hljs-template-variable\" style=\"color: #df5000;\">{{ rec.set.value }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">        wait:<\/span> <span class=\"hljs-literal\" style=\"color: #0086b3;\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      register:<\/span> result\r\n\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">    - name:<\/span> display results\r\n<span class=\"hljs-attr\" style=\"color: #795da3;\">      debug:<\/span> var=result\r\n<\/pre>\n<p>In this playbook, we are reading the DNS record first and storing in a register variable named <code>rec<\/code> and using the variable in the next task to delete the record.<\/p>\n<p>We have a debug task after\u00a0 READ and DELETE operation to show more details on this job<\/p>\n<p>here is the execution result of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.11.53-PM-1.png\"><img class=\"alignnone size-full wp-image-5626\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.11.53-PM-1.png\" alt=\"ansible route53\" width=\"2250\" height=\"1868\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.11.53-PM-1.png 2250w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.11.53-PM-1-300x249.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.11.53-PM-1-768x638.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.11.53-PM-1-1024x850.png 1024w\" sizes=\"(max-width: 2250px) 100vw, 2250px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>with Ansible route 53 module you can create, delete, update and read all types of DNS records and work with it.\u00a0\u00a0 In this article, we have covered all CRUD tasks with ansible route53 module.\u00a0 If you have any questions or comments let me know on the comments section<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578326\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"5617\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578326\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578326\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to see how to add and remove records in AWS route53 DNS using ansible. If you are an AWS architect or a developer\/devops executive managing your infrastructure hosted in AWS. you might have used the AWS route53 DNS web service. with route53 you can[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":5629,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible Route53 Examples - read add remove update DNS records<\/title>\n<meta name=\"description\" content=\"Ansible Route53 How to Read DNS records from AWS route53 using ansible. ADD dns records in AWS route53 using ansible, Delete DNS records with ansible route53, Update DNS records using Ansible route53 module. Ansible Route53 examples. Ansible AWS Route53 examples and how to work with Ansible route53 module.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible Route53 Examples - read add remove update DNS records\" \/>\n<meta property=\"og:description\" content=\"Ansible Route53 How to Read DNS records from AWS route53 using ansible. ADD dns records in AWS route53 using ansible, Delete DNS records with ansible route53, Update DNS records using Ansible route53 module. Ansible Route53 examples. Ansible AWS Route53 examples and how to work with Ansible route53 module.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2020-08-10T11:04:47+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T05:49:42+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.33.36-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"3228\" \/>\n\t<meta property=\"og:image:height\" content=\"1686\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/08\/Screenshot-2020-08-10-at-4.33.36-PM.png\",\"width\":3228,\"height\":1686},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/\",\"name\":\"Ansible Route53 Examples - read add remove update DNS records\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#primaryimage\"},\"datePublished\":\"2020-08-10T11:04:47+00:00\",\"dateModified\":\"2022-06-19T05:49:42+00:00\",\"description\":\"Ansible Route53 How to Read DNS records from AWS route53 using ansible. ADD dns records in AWS route53 using ansible, Delete DNS records with ansible route53, Update DNS records using Ansible route53 module. Ansible Route53 examples. Ansible AWS Route53 examples and how to work with Ansible route53 module.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible Route53 Examples &#8211; read add remove update DNS records\",\"datePublished\":\"2020-08-10T11:04:47+00:00\",\"dateModified\":\"2022-06-19T05:49:42+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-route53-ansible\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5617"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=5617"}],"version-history":[{"count":6,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5617\/revisions"}],"predecessor-version":[{"id":5637,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5617\/revisions\/5637"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/5629"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=5617"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=5617"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=5617"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}