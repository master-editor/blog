{"id":9260,"date":"2022-11-09T14:41:47","date_gmt":"2022-11-09T09:11:47","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=9260"},"modified":"2022-11-09T14:48:47","modified_gmt":"2022-11-09T09:18:47","slug":"ansible-wait-for-url","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/","title":{"rendered":"Ansible Wait for URL to respond or Retry &#8211; WEB and API  | Devops Junction"},"content":{"rendered":"<p>Ansible is used for various types of Automations and use cases. Web Automation, Web Scraping and API Automation are some of them<\/p>\n<p>when it comes to Web or API automation there are a lot of URLs and endpoints<\/p>\n<p>Sometimes they respond immediately the first time, and sometimes you have to retry a few times or wait for them to return a specific status code or content<\/p>\n<p>For example, when you are waiting for the\u00a0 health check URL to return a message <code>OK<\/code><\/p>\n<p>Or waiting for your Autosys Job be completed and return <code>Completed<\/code> Message<\/p>\n<p>Or simply waiting for any application to come up and return a specific HTTP status code like <code>200<\/code> or <code>201<\/code> or <code>302<\/code> or any other<\/p>\n<p>All of these use cases can be done and automated in Ansible. There are multiple ways to do it and let us explore some in this article<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for.jpg\"><img class=\"post-img alignnone wp-image-9280 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for.jpg\" alt=\"ansible uri retry\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for.jpg 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for-300x213.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for-1024x726.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for-768x545.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for-1536x1090.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for-400x284.jpg 400w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for-1080x766.jpg 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for-90x65.jpg 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<h2>Ansible Wait for the URL to return status 200 status code<\/h2>\n<p>This is one of the most sought-after use cases in web automation.<\/p>\n<p>As we all know the status 200 means the website is up and online and not just 200 we can look for any specific status code<\/p>\n<p>here is the playbook that connects to the URL and waits for it to return status 200<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Playbook for Web automation \r\n  hosts: localhost\r\n  tasks:\r\n  - name: Check if devopsjunction.com is available and returning status 200\r\n    uri:\r\n      url: https:\/\/devopsjunction.com\r\n    register: result\r\n    until: \"result.status == 200\"\r\n    retries: 5\r\n    delay: 10<\/pre>\n<p>In this playbook, we have one play and one task with the module <code>uri<\/code><\/p>\n<p>We are connecting to the url <code>https:\/\/devopsjunction.com<\/code>\u00a0 and waiting for the response to be 200,<\/p>\n<p>This is done using ansible <code>retry until<\/code> feature. I wrote an exclusive article on <a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-retry-examples\/\" target=\"_blank\" rel=\"noopener noreferrer\">until<\/a> you can check<\/p>\n<p>If at the first time it does not respond with status 200 it keeps trying until it gets 200 as a response for the number of times defined in <code>retries<\/code> with the interval defined in <code>delay<\/code> in seconds.<\/p>\n<p>In our case, we try <strong>5 times<\/strong> with a delay of <strong>10 seconds<\/strong> before it returns a failure<\/p>\n<p>Here is the execution output of this playbook, I have added <code>-vv<\/code> more little extra verbose output<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM.png\"><img class=\"alignnone size-full wp-image-9261\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM.png\" alt=\"ansible wait for url to respond\" width=\"2020\" height=\"1466\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM.png 2020w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM-300x218.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM-1024x743.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM-768x557.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM-1536x1115.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM-1080x784.png 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-5.16.36-PM-90x65.png 90w\" sizes=\"(max-width: 2020px) 100vw, 2020px\" \/><\/a><\/p>\n<p>You can modify the playbook to any other status code too, as per your requirement<\/p>\n<p>All you have to do is to update the <code>until<\/code> condition, in our case, our condition is to check if the <code>result.status<\/code> variable is equal to <code>200<\/code> ( string comparison)<\/p>\n<pre>until: \"result.status == 200\"<\/pre>\n<p>here is one more example where we are looking for status code 201 for the API endpoint<\/p>\n<p>&nbsp;<\/p>\n<h2>Ansible wait for POST call to return 201 status code &#8211; API<\/h2>\n<p>For this example, I am using the publically available test API platform https:\/\/reqres.in\/<\/p>\n<p>In this example, we are going to send a payload to the API endpoint over the HTTP POST method and wait for it to return the 201 status code<\/p>\n<p>Here is the playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Playbook for Web automation \r\n  hosts: localhost\r\n  tasks:\r\n  - name: Wait for API endpoint to return 201 created\r\n    uri:\r\n      url: https:\/\/reqres.in\/api\/users\r\n      method: POST\r\n      body: |-\r\n        {\r\n          \"name\": \"Sarav\",\r\n          \"job\": \"leader\"\r\n        }\r\n      return_content: yes\r\n      status_code: 201\r\n    register: result\r\n    until: \"result.status == 201\"\r\n    retries: 5\r\n    delay: 10\r\n\r\n  - debug: var=result.content<\/pre>\n<p>You can try this playbook as it is, as this is a publically available API<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM.png\"><img class=\"alignnone size-full wp-image-9263\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM.png\" alt=\"ansible url check status code\" width=\"2164\" height=\"1142\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM.png 2164w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM-300x158.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM-1024x540.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM-768x405.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM-1536x811.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM-2048x1081.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-06-at-7.08.48-PM-1080x570.png 1080w\" sizes=\"(max-width: 2164px) 100vw, 2164px\" \/><\/a><\/p>\n<p>You can see that we are making an HTTP POST request with a Payload in <code>body<\/code>\u00a0 to the API endpoint and waiting for the status code 201.<\/p>\n<p>This endpoint creates a new user and returns a JSON of the newly created user<\/p>\n<p>We have updated our <code>until<\/code> condition to look for <code>201<\/code> text in the result variable. if not it would retry the specified no of times before failing<\/p>\n<pre>until: \"result.status == 201\"<\/pre>\n<p>&nbsp;<\/p>\n<h2>Ansible wait for a message or specific string in response<\/h2>\n<p>Unlike the last two examples where we looked for the HTTP status code of our request, in this example, we are going to see how to wait for a specific string or message in the response<\/p>\n<p>We are going to use the same <code>reqres.in<\/code> API we have used earlier but different endpoint or URL<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/devopsjunction-content.png\"><img class=\"alignnone size-full wp-image-9269\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/devopsjunction-content.png\" alt=\"ansible wait for url\" width=\"1024\" height=\"768\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/devopsjunction-content.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/devopsjunction-content-300x225.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/devopsjunction-content-768x576.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/devopsjunction-content-510x382.png 510w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/a><\/p>\n<p>For the login API to work you need to pass the username and password as JSON over HTTP POST to the remote URL `https:\/\/reqres.in\/api\/login`<\/p>\n<p>Now here is the playbook where we pass the JSON data of\u00a0 email and password to the login API<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Playbook for Web automation \r\n  hosts: localhost\r\n  tasks:\r\n  - name: Wait for API endpoint to return a specific message response\r\n    uri:\r\n      url: https:\/\/reqres.in\/api\/login\r\n      method: POST\r\n      body_format: json\r\n      body: |-\r\n        {\r\n          \"email\": \"eve.holt@reqres.in\",\r\n          \"password\": \"cityslicka\"\r\n        }\r\n      return_content: yes\r\n    register: result\r\n    until: \"'token' in result.content\"\r\n    retries: 2\r\n    delay: 10\r\n\r\n  - debug: var=result.content<\/pre>\n<p>&nbsp;<\/p>\n<p>As per the API documentation, only the following email and password combination would let you log in or Succeed. Let us first try it and see the response.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">{ \r\n  \"email\": \"eve.holt@reqres.in\",\r\n  \"password\": \"cityslicka\"\r\n}<\/pre>\n<p>Since our credentials are valid we should get a token and ansible looking for the <code>token<\/code> string\/text in the response would also succeed<\/p>\n<p>Here is the execution and the response with the correct user credentials.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM.png\"><img class=\"post-img alignnone wp-image-9271 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM.png\" alt=\"ansible wait for url\" width=\"3730\" height=\"1364\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM.png 3730w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM-300x110.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM-1024x374.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM-768x281.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM-1536x562.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM-2048x749.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-1.17.43-PM-1080x395.png 1080w\" sizes=\"(max-width: 3730px) 100vw, 3730px\" \/><\/a><\/p>\n<p>In the preceding screenshot, You can see the response has the <code>token<\/code> on the ansible-playbook output shown on the right<\/p>\n<p>&nbsp;<\/p>\n<p>Let us modify the email ID to something else and try to log in, it should fail or not allow us to login<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM.png\"><img class=\"post-img alignnone wp-image-9272 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM.png\" alt=\"ansible url\" width=\"3718\" height=\"1382\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM.png 3718w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM-300x112.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM-1024x381.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM-768x285.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM-1536x571.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM-2048x761.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-09-at-2.12.53-PM-1080x401.png 1080w\" sizes=\"(max-width: 3718px) 100vw, 3718px\" \/><\/a><\/p>\n<p>As shown in the preceding image,\u00a0 you can see that we have updated the username to <code>test@test.com<\/code> when retried, it threw an error <code>user not found<\/code>\u00a0 after two retries<\/p>\n<blockquote><p>Remember in ideal scenarios we do not retry if the login fails with some credentials, Your account would be locked, this example is just to show you how message\/text validation works with ansible url retry<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<h2>Where to go from here<\/h2>\n<p>we have seen how to connect to a URL or API endpoint and validate the response status code or content and retry until the requirement is met.<\/p>\n<p>We have used the following modules and features of Ansible to get this done.<\/p>\n<ul>\n<li>URI module &#8211; For connecting to API and WEB URLs<\/li>\n<li>retry until &#8211; to validate and retry until a condition is met<\/li>\n<\/ul>\n<p>we have an exclusive article on these subjects for you to read<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"V2FvZHuK7e\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-retry-examples\/\">Ansible Retry Examples &#8211; Retry a task until condition met |  DevopsJunction<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Ansible Retry Examples &#8211; Retry a task until condition met |  DevopsJunction&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-retry-examples\/embed\/#?secret=V2FvZHuK7e\" data-secret=\"V2FvZHuK7e\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>There is one more way to connect to the remote URL to make sure that it works.\u00a0 it is done using <code>wait_for<\/code> module<\/p>\n<p>You can find more on the wait_for module here<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"esoishNHKH\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait_for-examples\/\">Ansible wait_for module examples &#8211; How to | Devops Junction<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Ansible wait_for module examples &#8211; How to | Devops Junction&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait_for-examples\/embed\/#?secret=esoishNHKH\" data-secret=\"esoishNHKH\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n<p>Hope this helps, Let me know if you have any questions on the comments section<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577149\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"9260\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577149\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577149\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Ansible is used for various types of Automations and use cases. Web Automation, Web Scraping and API Automation are some of them when it comes to Web or API automation there are a lot of URLs and endpoints Sometimes they respond immediately the first time, and sometimes you have to[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":9280,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible Wait for URL to respond or Retry - WEB and API | Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible Wait for URL to respond a status code or a message . Ansible URL retry until 200. Ansible API and WEB Url validate response and retry. Ansible HTTP example\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible Wait for URL to respond or Retry - WEB and API | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible Wait for URL to respond a status code or a message . Ansible URL retry until 200. Ansible API and WEB Url validate response and retry. Ansible HTTP example\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2022-11-09T09:11:47+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-11-09T09:18:47+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-url-wait-for.jpg\",\"width\":1748,\"height\":1240,\"caption\":\"ansible uri retry\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/\",\"name\":\"Ansible Wait for URL to respond or Retry - WEB and API | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#primaryimage\"},\"datePublished\":\"2022-11-09T09:11:47+00:00\",\"dateModified\":\"2022-11-09T09:18:47+00:00\",\"description\":\"Ansible Wait for URL to respond a status code or a message . Ansible URL retry until 200. Ansible API and WEB Url validate response and retry. Ansible HTTP example\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible Wait for URL to respond or Retry &#8211; WEB and API | Devops Junction\",\"datePublished\":\"2022-11-09T09:11:47+00:00\",\"dateModified\":\"2022-11-09T09:18:47+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/9260"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=9260"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/9260\/revisions"}],"predecessor-version":[{"id":9282,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/9260\/revisions\/9282"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/9280"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=9260"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=9260"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=9260"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}