{"id":4226,"date":"2019-10-05T17:03:11","date_gmt":"2019-10-05T11:33:11","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=4226"},"modified":"2022-01-19T19:01:20","modified_gmt":"2022-01-19T13:31:20","slug":"ansible-git-example","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/","title":{"rendered":"Ansible Git Example &#8211; Checkout code from Git Repo Securely"},"content":{"rendered":"<h2>Introduction<\/h2>\n<p>Ansible works seamlessly with Git and you might have had a requirement to download your source code or software directly from the Github, Bitbucket, Gitlab etc.<\/p>\n<p>In this post, we are going to explore various tits and bits of Ansible Git module and how to use it in real-time with an example.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.04.13-PM.png\"><img class=\"alignnone size-full wp-image-4241\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.04.13-PM.png\" alt=\"Ansible Git Example\" width=\"775\" height=\"605\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.04.13-PM.png 775w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.04.13-PM-300x234.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.04.13-PM-768x600.png 768w\" sizes=\"(max-width: 775px) 100vw, 775px\" \/><\/a><\/p>\n<h2>Ansible Git Module<\/h2>\n<p>Ansible Git module can be used only to check out a Source code from the Git repository and deploy it on the server.<\/p>\n<p>Consider that you have your Node JS web application hosted on the Git hub Repository and you would like to get it deployed during the server provisioning.<\/p>\n<p>Ansible can do everything here, right from installing the necessary tools and software and installing the package dependencies and starting the NodeJS server etc.<\/p>\n<p>As a summary, the Ansible GIT module can be used for the following purposes<\/p>\n<ol>\n<li>To Checkout or to download the code from the Git repository<\/li>\n<li>Create a Git archive from Git repo<\/li>\n<li>Fetch all pull requests<\/li>\n<li>Clone a Git repository<\/li>\n<\/ol>\n<p>Once you have downloaded or checked out the code with the ansible git command, you can use the regular git commands for all other requirements like <code>Push<\/code>\u00a0and <code>pull<\/code><\/p>\n<p>&nbsp;<\/p>\n<h2>Our Requirement and Prerequisites<\/h2>\n<p>Our requirement is to download a NodeJS code from the <strong>Github<\/strong> <strong>private<\/strong> repository and install the necessary packages using <code>npm install<\/code>\u00a0and start the NodeJS Development\u00a0 server using the\u00a0<code>node<\/code>\u00a0command<\/p>\n<p>Since we are going to download the code from the private repository. we need to find a way to login to the Github repository from the Git CLI.<\/p>\n<blockquote><p>Note*: Though, we are taking only GITHUB here.\u00a0 you can use this article as a reference for other SCM&#8217;s like Gitlab, Bitbucket, BeanStalkApp etc. As all these repositories are having the similar authentication features.<\/p><\/blockquote>\n<h3>Step1: Configuring Git login<\/h3>\n<p>To login to GITHUB or to any SCM tools [ bit bucket, gitlab] they usually provide different methods and some popular methods are given below.<\/p>\n<ol>\n<li><a href=\"https:\/\/help.github.com\/en\/enterprise\/2.15\/user\/articles\/adding-a-new-ssh-key-to-your-github-account\">Using the SSH key\u00a0<\/a><\/li>\n<li>Using the username and password on the URL\n<ul>\n<li><code><code>https:\/\/<\/code><\/code><strong>user:pass<\/strong><code>@github.com\/path<\/code><\/li>\n<\/ul>\n<\/li>\n<li><a href=\"https:\/\/help.github.com\/en\/articles\/creating-a-personal-access-token-for-the-command-line\">Using the username and security token on the URL<\/a>\n<ul>\n<li><code><code>https:\/\/<\/code><\/code><strong>user:token<\/strong><code>@github.com\/path<\/code><\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<p>While the SSH Key-based authentication is the most secure and recommended one. Just to explore. I am going to use the third method here which is simple and easy.<\/p>\n<p>I chose this method as I also want to use the <strong>Ansible vault\u00a0<\/strong>feature to securely store and retrieve the username and security token.<\/p>\n<p>Here I presume that you are ready with your Username and Security token (or) username. ( if you want to follow along and use the Ansible vault)<\/p>\n<p>Let&#8217;s walk further.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Step2:\u00a0 Creating Ansible vault to Store the Git username and token<\/h3>\n<p>Look at the following Screen recording to know how to create and encrypt the secrets with Ansible vault<\/p>\n<p><script id=\"asciicast-6XjsxINtCTyJFqmsJ4XBvSDsp\" src=\"https:\/\/asciinema.org\/a\/6XjsxINtCTyJFqmsJ4XBvSDsp.js\" async><\/script><br \/>\nI presume that you have taken a look at the screen recording and noticed that we have created a new ansible-vault named <code>secrets.yaml<\/code> and saved the GitHub <code>username<\/code> and <code>token<\/code>\u00a0in a key value format.<\/p>\n<p>this can be used inside the ansible-playbook as a <code>variables<\/code> file and the username and token can be used as a variable using <strong>Jinja2<\/strong> templates syntax\u00a0<code>{{ gituser}}:{{gitpass}}<\/code><\/p>\n<blockquote><p>The username and password used in this video would be deleted for security purposes but you can use this same methodology to store your username and password before proceeding further<\/p><\/blockquote>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Step3:\u00a0 The Ansible Git Example Playbook<\/h3>\n<p>Here is the playbook I have written to download the NODE JS code available in my private repository to install the necessary tools start the Node server finally and launch the application.<\/p>\n<p>Make sure you replace the repository URL in the following playbook to your own private repository before trying it out.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; background: #002451; color: #ffffff; padding: 0.5em;\"><span class=\"hljs-meta\" style=\"color: #ffc58f;\">---<\/span>\r\n<span class=\"hljs-attr\">  - name:<\/span> Install and Launch the Simple NodeJS Application\r\n<span class=\"hljs-attr\">    hosts:<\/span> nodeserver\r\n<span class=\"hljs-attr\">    vars_files:<\/span>\r\n<span style=\"color: #ffff00;\"><span class=\"hljs-bullet\">       -<\/span> secrets.yml<\/span>\r\n<span class=\"hljs-attr\">    vars:<\/span>\r\n<span class=\"hljs-attr\">       - destdir:<\/span> \/apps\/SampleNodeApp\r\n<span class=\"hljs-attr\">    tasks:<\/span>\r\n\r\n<span class=\"hljs-bullet\" style=\"color: #d1f1a9;\">       -<\/span> name : install Node and NPM\r\n<span class=\"hljs-attr\">         become:<\/span> <span class=\"hljs-literal\" style=\"color: #ffc58f;\">yes<\/span>\r\n<span class=\"hljs-attr\">         register:<\/span> ymrepo\r\n<span class=\"hljs-attr\">         yum:<\/span>\r\n<span class=\"hljs-attr\">           name:<\/span> nodejs\r\n<span class=\"hljs-attr\">           state:<\/span> latest\r\n\r\n<span class=\"hljs-bullet\" style=\"color: #d1f1a9;\">       -<\/span> name : validate the nodejs installation\r\n<span class=\"hljs-attr\">         debug:<\/span> msg=<span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"Installation of node is Successfull\"<\/span>\r\n<span class=\"hljs-attr\">         when:<\/span> ymrepo is changed\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Version of Node and NPM\r\n<span class=\"hljs-attr\">         shell:<\/span>\r\n            <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"npm -v &amp;&amp; node -v\"<\/span>\r\n<span class=\"hljs-attr\">         register:<\/span> versioninfo\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Version Info\r\n<span class=\"hljs-attr\">         debug:<\/span>\r\n<span class=\"hljs-attr\">           msg:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"Version info <span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{ versioninfo.stdout_lines }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\">         when:<\/span> versioninfo is changed\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Download the NodeJS code from the GitRepo\r\n<span class=\"hljs-attr\">         become:<\/span> <span class=\"hljs-literal\" style=\"color: #ffc58f;\">yes<\/span>\r\n<span class=\"hljs-attr\">         git:<\/span>\r\n<span class=\"hljs-attr\">            repo:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">'https:\/\/<span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{gituser}}<\/span>:<span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{gitpass}}<\/span>@github.com\/AKSarav\/SampleNodeApp.git'<\/span>\r\n<span class=\"hljs-attr\">            dest:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"<span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{ destdir }}<\/span>\"<\/span>\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Change the ownership of the directory\r\n<span class=\"hljs-attr\">         become:<\/span> <span class=\"hljs-literal\" style=\"color: #ffc58f;\">yes<\/span>\r\n<span class=\"hljs-attr\">         file:<\/span>\r\n<span class=\"hljs-attr\">           path:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"<span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{destdir}}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\">           owner:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"vagrant\"<\/span>\r\n<span class=\"hljs-attr\">         register:<\/span> chgrpout\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Install Dependencies with NPM install command\r\n<span class=\"hljs-attr\">         shell:<\/span>\r\n            <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"npm install\"<\/span>\r\n<span class=\"hljs-attr\">         args:<\/span>\r\n<span class=\"hljs-attr\">            chdir:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"<span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{ destdir }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\">         register:<\/span> npminstlout\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Debug npm install command\r\n<span class=\"hljs-attr\">         debug:<\/span> msg=<span class=\"hljs-string\" style=\"color: #d1f1a9;\">'<span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{npminstlout.stdout_lines}}<\/span>'<\/span>\r\n\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Start the App\r\n<span class=\"hljs-attr\">         async:<\/span> <span class=\"hljs-number\" style=\"color: #ffc58f;\">10<\/span>\r\n<span class=\"hljs-attr\">         poll:<\/span> <span class=\"hljs-number\" style=\"color: #ffc58f;\">0<\/span>\r\n<span class=\"hljs-attr\">         shell:<\/span>\r\n            <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"(node index.js &gt; nodesrv.log 2&gt;&amp;1 &amp;)\"<\/span>\r\n<span class=\"hljs-attr\">         args:<\/span>\r\n<span class=\"hljs-attr\">           chdir:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"<span class=\"hljs-template-variable\" style=\"color: #ff9da4;\">{{ destdir }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\">         register:<\/span> appstart\r\n\r\n<span class=\"hljs-attr\">       - name:<\/span> Validating the port is open\r\n<span class=\"hljs-attr\">         tags:<\/span> nodevalidate\r\n<span class=\"hljs-attr\">         wait_for:<\/span>\r\n<span class=\"hljs-attr\">           host:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"localhost\"<\/span>\r\n<span class=\"hljs-attr\">           port:<\/span> <span class=\"hljs-number\" style=\"color: #ffc58f;\">5000<\/span>\r\n<span class=\"hljs-attr\">           delay:<\/span> <span class=\"hljs-number\" style=\"color: #ffc58f;\">10<\/span>\r\n<span class=\"hljs-attr\">           timeout:<\/span> <span class=\"hljs-number\" style=\"color: #ffc58f;\">30<\/span>\r\n<span class=\"hljs-attr\">           state:<\/span> started\r\n<span class=\"hljs-attr\">           msg:<\/span> <span class=\"hljs-string\" style=\"color: #d1f1a9;\">\"NodeJS server is not running\"<\/span><\/pre>\n<p>In the preceding playbook, you need to re-look a few things to understand it better.<\/p>\n<p>First is the URL, You can see we have used the Jinja2 templates {{gituser}} and {{gitpass}} in the URL. During the runtime, these would be replaced with actual values.<\/p>\n<pre><span class=\"hljs-string\" style=\"color: #c41a16;\">'https:\/\/<span class=\"hljs-template-variable\" style=\"color: #666600;\">{{gituser}}<\/span>:<span class=\"hljs-template-variable\" style=\"color: #666600;\">{{gitpass}}<\/span>@github.com\/AKSarav\/SampleNodeApp.git'<\/span><\/pre>\n<p>and the second one you need to check is the variable file we have mentioned at the top with <code>vars_files<\/code>\u00a0directive.<\/p>\n<pre><span class=\"hljs-attr\" style=\"color: #5c2699;\">vars_files:<\/span>\u00a0\u00a0<span class=\"hljs-bullet\" style=\"color: #1c00cf;\">-<\/span> secrets.yml<\/pre>\n<p>You can see that we used <code>secrets.yml<\/code>\u00a0file as our variable file.\u00a0 Rest all are usual syntaxes only<\/p>\n<p>At the last, we have also use <code>wait_for<\/code>\u00a0module to make sure that the NODEJS server is started and running by monitoring the port <code>5000<\/code><\/p>\n<p>Now, you might think. the <code>secrets.yml<\/code> file is encrypted by ansible vault and how can we use it as a variable file in the playbook. We will discuss this next<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h3>Step4:\u00a0 Launch the Playbook with Ansible Git<\/h3>\n<p>Now you can launch the playbook with <code>ansible-playbook<\/code> command but there is a little chance that you have to add one more argument\/flag while starting the playbook.<\/p>\n<pre>ansible-playbook gitexample.yml <span style=\"color: #e00d6c;\">--ask-vault-pass<\/span><\/pre>\n<p>As you have guessed,\u00a0 the additional parameter we have added is to make <code>ansible-playbook<\/code> get the password of the <code>ansible-vault<\/code> from the user as it needs the password to decrypt the <code>secrets.yml<\/code> file used inside the playbook.<\/p>\n<p>Refer to the following screen recording clip to see how the playbook is running on real-time and to see the output<\/p>\n<p><script id=\"asciicast-vRVodUxZYswFA6x9PN8f3y8qd\" src=\"https:\/\/asciinema.org\/a\/vRVodUxZYswFA6x9PN8f3y8qd.js\" async><\/script><\/p>\n<p>If you want more info on the Git hash information. you can use <code>-vv<\/code>\u00a0 while you are invoking the playbook<\/p>\n<pre>ansible-playbook gitexample.yml <span style=\"color: #e00d6c;\">--ask-vault-pass &#8211; vv<\/span><\/pre>\n<p>It would show the Git commit hash details along with <strong>before<\/strong> and <strong>after<\/strong>\u00a0GIT information<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-4.29.43-PM.png\"><img class=\"alignnone size-full wp-image-4230\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-4.29.43-PM.png\" alt=\"\" width=\"1439\" height=\"724\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-4.29.43-PM.png 1439w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-4.29.43-PM-300x151.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-4.29.43-PM-768x386.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-4.29.43-PM-1024x515.png 1024w\" sizes=\"(max-width: 1439px) 100vw, 1439px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Step5: Validate the Deployment<\/h3>\n<p>Hope your Ansible Playbook has run successfully and now it is the time for validation.\u00a0 You might have figured out that my remote server name is <code>mwiapp01<\/code>\u00a0as it is displayed on the preceding snapshot.<\/p>\n<p>Now let us access the URL <code>http:\/\/mwiapp01:5000<\/code>\u00a0and test it<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.31.56-PM.png\"><img class=\"alignnone size-full wp-image-4244\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.31.56-PM.png\" alt=\"Ansible Git Example\" width=\"672\" height=\"559\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.31.56-PM.png 672w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.31.56-PM-300x250.png 300w\" sizes=\"(max-width: 672px) 100vw, 672px\" \/><\/a><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2><\/h2>\n<h2>Using Git token instead of username and Password<\/h2>\n<p>In the previous playbook, you can see that we have used the username and the password which is not a secure solution.<\/p>\n<p>Github now supports user access tokens in place of username and password for authentication<\/p>\n<p><a href=\"https:\/\/docs.github.com\/en\/authentication\/keeping-your-account-and-data-secure\/creating-a-personal-access-token\">Refer to this article to know how to create personal access token in GitHub<\/a><\/p>\n<p>Once you have the token with you can simply replace the GIT URL from<\/p>\n<pre><span class=\"hljs-string\" style=\"color: #c41a16;\">'https:\/\/<span class=\"hljs-template-variable\" style=\"color: #666600;\">{{gituser}}<\/span>:<span class=\"hljs-template-variable\" style=\"color: #666600;\">{{gitpass}}<\/span>@github.com\/AKSarav\/SampleNodeApp.git'<\/span><\/pre>\n<p>to this<\/p>\n<pre><span class=\"hljs-string\" style=\"color: #c41a16;\">'https:\/\/<span class=\"hljs-template-variable\" style=\"color: #666600;\">{{gittoken}}<\/span>@github.com\/AKSarav\/SampleNodeApp.git'<\/span><\/pre>\n<p>&nbsp;<\/p>\n<p>Here is the complete example playbook you can refer to, in this upgraded playbook\u00a0 we have used additional modules and features like<\/p>\n<ul>\n<li>Ansible Assert<\/li>\n<li>pre_task<\/li>\n<li>post_task<\/li>\n<li>slack notification etc<\/li>\n<\/ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n  - name: Install and Launch the Simple NodeJS Application\r\n    hosts: testserver\r\n    vars_files:\r\n       - gitsecrets.yml\r\n    vars:\r\n       - destdir: \/apps\/sampleapp\r\n    pre_tasks:\r\n      - name : install dependencies before starting\r\n        become: yes\r\n        register: aptinstall\r\n        apt:\r\n           name: \r\n            - nodejs\r\n            - npm\r\n            - git\r\n           state: latest\r\n           update_cache: yes\r\n      \r\n      - name : validate the nodejs installation\r\n        debug: msg=\"Installation of node is Successfull\"\r\n        when: aptinstall is changed\r\n    \r\n    tasks:\r\n       - name: Version of Node and NPM\r\n         shell:\r\n            \"npm -v &amp;&amp; nodejs -v\"\r\n         register: versioninfo\r\n       - name: Validate if the installation is intact\r\n         assert:\r\n          that: \"versioninfo is changed\"\r\n      \r\n       - name: Create Dest Directory if not exists\r\n         become: yes\r\n         file: \r\n          path: \"{{ destdir }}\"\r\n          state: directory\r\n          owner: vagrant\r\n          group: vagrant\r\n          mode: 0755\r\n       - name: Download the NodeJS code from the GitRepo\r\n         become: yes\r\n         git:\r\n            repo: 'https:\/\/{{gittoken}}@github.com\/AKSarav\/SampleNodeApp.git'\r\n            dest: \"{{ destdir }}\"\r\n       - name: Change the ownership of the directory\r\n         become: yes\r\n         file:\r\n           path: \"{{destdir}}\"\r\n           owner: \"vagrant\"\r\n         register: chgrpout\r\n       - name: Install Dependencies with NPM install command\r\n         shell:\r\n            \"npm install\"\r\n         args:\r\n            chdir: \"{{ destdir }}\"\r\n         register: npminstlout\r\n       - name: Debug npm install command\r\n         debug: msg='{{npminstlout.stdout_lines}}'\r\n       - name: Start the App\r\n         async: 10\r\n         poll: 0\r\n         shell:\r\n            \"(node index.js &gt; nodesrv.log 2&gt;&amp;1 &amp;)\"\r\n         args:\r\n           chdir: \"{{ destdir }}\"\r\n         register: appstart\r\n       - name: Validating the port is open\r\n         tags: nodevalidate\r\n         wait_for:\r\n           host: \"localhost\"\r\n           port: 5000\r\n           delay: 10\r\n           timeout: 30\r\n           state: started\r\n           msg: \"NodeJS server is not running\"\r\n    post_tasks:\r\n        - name: notify Slack that the servers have been updated \r\n          tags: slack\r\n          community.general.slack:\r\n            token: T026******PF\/B02U*****N\/WOa7r**********Ao0jnWn\r\n            msg: |\r\n                ### StatusUpdate ###\r\n                &#8211; ------------------------------------\r\n                ``\r\n                `Server`: {{ansible_host}}\r\n                `Status`: NodeJS Sample Application installed successfully\r\n                &#8211; ------------------------------------\r\n            channel: '#ansible'\r\n            color: good\r\n            username: 'Ansible on {{ inventory_hostname }}'\r\n            link_names: 0\r\n            parse: 'none'\r\n          delegate_to: localhost<\/pre>\n<p>If you are using this playbook, make sure you are updating your <code>secrets<\/code> file too, with new variable <code>gittoken<\/code> with your token value.<\/p>\n<p>This playbook is covered in detail in the following article.<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"8mNkwUi7TG\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-pre-tasks-and-post-tasks-example\/\">Ansible Pre Tasks and Post Tasks Example | Devops Junction<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Ansible Pre Tasks and Post Tasks Example | Devops Junction&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-pre-tasks-and-post-tasks-example\/embed\/#?secret=8mNkwUi7TG\" data-secret=\"8mNkwUi7TG\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<h2><\/h2>\n<h2>Conclusion<\/h2>\n<p>Hope you find this article helping. this article was primarily designed to give an overview of how the Ansible Git module can be used to deploy the code from the remote.<\/p>\n<p>There are other few things you can do with the Ansible git module which I find it not interesting. Though I like the Ansible Git module,<strong> It would have been great if they would have given the other necessary features of Git such as Pull, Push, Fetch, Merge etc.<\/strong><\/p>\n<p>I hope it would be added in the future, I will update this article as and when I am finding more options available with this module.<\/p>\n<p>I will also write an article for Ansible and Git CLI in near future with all Git core comands. Till then Cheers.<\/p>\n<p>Rate this article [ratings]<\/p>\n<p>&nbsp;<\/p>\n<p>Thanks<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670576946\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"4226\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670576946\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670576946\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Introduction Ansible works seamlessly with Git and you might have had a requirement to download your source code or software directly from the Github, Bitbucket, Gitlab etc. In this post, we are going to explore various tits and bits of Ansible Git module and how to use it in real-time[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":4241,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[327,332,328,329,333,330,331],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible Git Example - Checkout code from Git Repo Securely<\/title>\n<meta name=\"description\" content=\"Ansible Git Example, How to checkout or pull the code from Github, Bitbucket, Gitlab, Beanstalk app Git repositories using ansible git module. how to deploy the code from the git repository to the server using ansible. How to securely login to Git repo using ansible vault and ansible git modules.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible Git Example - Checkout code from Git Repo Securely\" \/>\n<meta property=\"og:description\" content=\"Ansible Git Example, How to checkout or pull the code from Github, Bitbucket, Gitlab, Beanstalk app Git repositories using ansible git module. how to deploy the code from the git repository to the server using ansible. How to securely login to Git repo using ansible vault and ansible git modules.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-10-05T11:33:11+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-19T13:31:20+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.04.13-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"775\" \/>\n\t<meta property=\"og:image:height\" content=\"605\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/10\/Screenshot-2019-10-05-at-5.04.13-PM.png\",\"width\":775,\"height\":605,\"caption\":\"Ansible Git Example\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/\",\"name\":\"Ansible Git Example - Checkout code from Git Repo Securely\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#primaryimage\"},\"datePublished\":\"2019-10-05T11:33:11+00:00\",\"dateModified\":\"2022-01-19T13:31:20+00:00\",\"description\":\"Ansible Git Example, How to checkout or pull the code from Github, Bitbucket, Gitlab, Beanstalk app Git repositories using ansible git module. how to deploy the code from the git repository to the server using ansible. How to securely login to Git repo using ansible vault and ansible git modules.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible Git Example &#8211; Checkout code from Git Repo Securely\",\"datePublished\":\"2019-10-05T11:33:11+00:00\",\"dateModified\":\"2022-01-19T13:31:20+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#primaryimage\"},\"keywords\":\"Ansible Git Example,Ansible Git example playbook,Ansible Git private repo,Ansible login to Github,ansible playbook with Git,Ansible Vault example,Ansible Vault with Github Example\",\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-git-example\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4226"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=4226"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4226\/revisions"}],"predecessor-version":[{"id":4242,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4226\/revisions\/4242"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/4241"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=4226"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=4226"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=4226"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}