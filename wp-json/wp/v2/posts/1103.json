{"id":1103,"date":"2018-05-22T14:42:45","date_gmt":"2018-05-22T09:12:45","guid":{"rendered":"http:\/\/www.mwinventory.in\/?p=1103"},"modified":"2018-07-21T01:05:30","modified_gmt":"2018-07-20T19:35:30","slug":"active-mq-installation-and-security-setup-and-hardening-step-by-step","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/","title":{"rendered":"Active MQ Installation, Security Setup and Hardening &#8211; How to"},"content":{"rendered":"<h4><span style=\"color: #0d6b85;\">theOverview<\/span><\/h4>\n<p>ActiveMQ is a Message Oriented Middleware (MOM) also knows as\u00a0 Message Broker (or) JMS provider with Enterprise features fully loaded. Apache ActiveMQ is one of the best Message broker in the enterprise market, because of it&#8217;s usability and being robust. Comes from the Apache Software Foundation.<\/p>\n<p>In this post, we are going to discuss the following topics<\/p>\n<ul>\n<li>How to install ActiveMQ and perform Security Hardening practices<\/li>\n<li>How to\u00a0configure Broker Authentication?<\/li>\n<li>How to configure Broker Authorization (or)\u00a0 role-based access for the Queues and Topics?<\/li>\n<li>How to secure the web console?<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>Let us get started.<\/p>\n<p>&nbsp;<\/p>\n<h4><span style=\"color: #0d6b85;\">Infrastructure Setup<\/span><\/h4>\n<ol>\n<li>Download ActiveMQ Zip distribution from\u00a0<a href=\"http:\/\/activemq.apache.org\/activemq-5153-release.html\"> http:\/\/activemq.apache.org\/activemq-5153-release.html<\/a>\u00a0( This is the version used in this post)<\/li>\n<li>Extract the zip and goto <strong>bin <\/strong>directory and\u00a0 start your ActiveMQ server <em>.\/activemq start\u00a0<\/em> ( Note: In linux\u00a0OS its <em>shell<\/em> and for windows it\u00a0<em>batch<\/em> )<\/li>\n<\/ol>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/apps\/activemq\/apache-activemq-5.15.3\/bin$ .\/activemq start\r\nINFO: Loading '\/apps\/activemq\/apache-activemq-5.15.3\/\/bin\/env'\r\nINFO: Using java '\/usr\/bin\/java'\r\nINFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details\r\nINFO: pidfile created : '\/apps\/activemq\/apache-activemq-5.15.3\/\/data\/activemq.pid' (pid '2047')\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h4><span style=\"color: #0d6b85;\">Verify your setup<\/span><\/h4>\n<p>If you have not made any changes in the configuration and started the activeMQ as it was retrieved.<\/p>\n<p>You can go ahead and hit the\u00a0 URL<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">http:\/\/127.0.0.1:8161\/admin\/<\/pre>\n<p>The default username and password to access the console is <strong>admin\/admin<\/strong><\/p>\n<p>&nbsp;<\/p>\n<h4><span style=\"color: #0d6b85;\">Secure your ActiveMQ Broker and Web Console<\/span><\/h4>\n<p>Note*: All the configurations files mentioned here\u00a0assumed to be available at default\u00a0<strong>activemq\/conf\/\u00a0<\/strong>directory<\/p>\n<p>ActiveMQ\u00a0can have two Authentication providers they are <strong>JAAS Authentication Provider<\/strong> and <strong>Simple Authentication Provider<\/strong><\/p>\n<p>These providers are applied in the configuration using plugin elements<\/p>\n<ol>\n<li><strong>\u00a0JAAS Authentication Plugin<\/strong><\/li>\n<li><strong>\u00a0Simple Authentication Plugin<\/strong><\/li>\n<\/ol>\n<p>We will be discussing how to implement both security\u00a0providers in ActiveMQ<\/p>\n<p>Before you proceed, Broker username and password and Authentication and the\u00a0 Web console username and password and authentication is different.<\/p>\n<p>So we have\u00a0divided this article into three smaller units<\/p>\n<ul>\n<li>Broker Security using JAAS Plugin &#8211; With No Password Encryption<\/li>\n<li>Broker Security using Simple Authentication Plugin &#8211; With Password Encryption<\/li>\n<li>Web console Security &#8211; With Password Encryption<\/li>\n<\/ul>\n<h5><\/h5>\n<h4>Broker Security using JAAS Plugin (Non-Encrypted Password)<\/h4>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #000000;\"><strong>Step1:<\/strong> Update ActiveMQ.xml with JAASAuthentication Plugin configuration<\/span><\/p>\n<p>Add the following line beneath the <code><strong>&lt;broker&gt;<\/strong><\/code> element in <strong>activemq.xml<\/strong><\/p>\n<p><script src=\"https:\/\/gist.github.com\/AKSarav\/7201584e9091ac909db75c42e8bed349.js\"><\/script><\/p>\n<p><span style=\"color: #000000;\"><strong>Step2:\u00a0<\/strong> Validate <strong>Login.config<\/strong> and Configure JAAS configuration and its properties<\/span><\/p>\n<p><strong>In Step1<\/strong> we have used <strong>activemq<\/strong> as the value for configuration <em>(configuration=&#8221;activemq&#8221;).\u00a0<\/em>This actually refers to the configuration available at\u00a0<strong>login.config. <\/strong>Open the login.config file and see what user and group properties file names are. By Default, they are<strong> users.properties <\/strong>and<strong> groups. properties\u00a0<\/strong><\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\r\nactivemq {\r\n    org.apache.activemq.jaas.PropertiesLoginModule required\r\n        org.apache.activemq.jaas.properties.user=&amp;quot;users.properties&amp;quot;\r\n        org.apache.activemq.jaas.properties.group=&amp;quot;groups.properties&amp;quot;;\r\n};\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p><strong>Step3:\u00a0<\/strong> Open the users. properties and change the default password and add new users<\/p>\n<ul>\n<li>Add a new user named <em>&#8220;testuser&#8221; <\/em>into <strong><em>users<\/em><\/strong>.<em><strong>properties<\/strong><\/em> and add the<em> &#8220;testuser&#8221; <\/em>into\u00a0<strong>users<\/strong> group in<strong><em> groups.properties\u00a0<\/em><\/strong><\/li>\n<li>Add a new user named\u00a0<em>&#8220;testguest&#8221;\u00a0<\/em>into\u00a0<strong><em>users<\/em><\/strong>.<em><strong>properties<\/strong><\/em>\u00a0and add the<em>\u00a0&#8220;testguest&#8221;\u00a0<\/em>into\u00a0<strong>guests<\/strong> group in<strong><em>\u00a0groups.properties\u00a0<\/em><\/strong><\/li>\n<\/ul>\n<p>these <strong>testuser<\/strong> and <strong>testguest<\/strong> accounts will be used to test the role-based authentication later<\/p>\n<pre class=\"brush: java; title: users.properties; notranslate\" title=\"users.properties\">\r\nadmin=c0mp!ex@01\r\ntestuser=S3CURe!\r\ntestguest=S3CURe!\r\n<\/pre>\n<pre class=\"brush: java; title: groups.properties; notranslate\" title=\"groups.properties\">\r\nadmins=admin\r\nusers=testuser\r\nguests=testguest\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p><strong>Step4:<\/strong> Setup role based Authorization for the Queues and Topics<\/p>\n<p>In ActiveMQ.xml, Inside the\u00a0<code>plugins<\/code> tag.\u00a0 Paste the following content<\/p>\n<div>\n<p><script src=\"https:\/\/gist.github.com\/AKSarav\/e11f16627a937108112a6132f106a37f.js\"><\/script><\/p>\n<\/div>\n<p>&nbsp;<\/p>\n<p>here <code><em>queue=\"&gt;\"<\/em><\/code>indicate all the Queues (\u00a0here <code>&gt;<\/code> used as a wildcard )<\/p>\n<p><code><em>USERS.&gt;<\/em><\/code> indicates the Queues starts with <em>USERS.\u00a0<\/em> in the name (<code> i,e:\u00a0<\/code><strong><em><code>USERS.TestQueue<\/code> )\u00a0<\/em><\/strong>Same applies to GUEST as well.<\/p>\n<p>&nbsp;<\/p>\n<p class=\"p1\"><strong>Step5:<\/strong> Configure the ActiveMQ web console to use the right credentials while browsing the Queues\/Topics<\/p>\n<p>Open the\u00a0<strong>credentials.properties<\/strong>. This file is used to let the Activemq web console know the username and password it should use while trying to access the broker resources like Queue and Topic<\/p>\n<p>by default, the file might\u00a0contain values like\u00a0given below.<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\r\n\r\nactivemq.username=system\r\nactivemq.password=manager\r\nguest.password=password\r\n\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>Replace the <em>activemq.username<\/em> and <em>activemq.password<\/em> values with the correct values. in my case, I am going to use the admin account, discussed in the previous step<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\r\nactivemq.username=admin\r\nactivemq.password=c0mp!ex@01\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p><strong>Step6:<\/strong>\u00a0Start\/Restart ActiveMQ\u00a0 for the changes to reflect<\/p>\n<p>The Complete configuration file (activemq.xml) with all aforementioned configurations can be downloaded from\u00a0\u00a0<a href=\"https:\/\/gist.github.com\/AKSarav\/4b165d4dec592190401e01a1a1b57a36\">here<\/a><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h4>Broker Security using\u00a0Simple Authentication Plugin ( Encrypted Password)<\/h4>\n<p>&nbsp;<\/p>\n<p><b>Step1:\u00a0<\/b> Add the following elements in <strong>conf\/activemq.xml <\/strong>to setup Encryption method, Encryption Key, and Properties file<\/p>\n<p><script src=\"https:\/\/gist.github.com\/AKSarav\/affc52f7e334be6d3aff28bc230c6e03.js\"><\/script><\/p>\n<p>In the preceding command snippet, you could notice the <em>configurationEncryptor\u00a0<\/em> is pointing to <strong><em>credentials-enc.properties<\/em><\/strong><\/p>\n<p>This file\u00a0should be used to\u00a0pass the encrypted username and password\u00a0to the ActiveMQ broker configuration. The entries in this file could be referenced into the activemq configuration file <strong>activemq.xml<\/strong><\/p>\n<p>We need to pass the Secret key which is used to encrypt the password as an environment variable.\u00a0 We will do that in Step 5.<\/p>\n<p>Next Step is to encrypt the passwords.<\/p>\n<p>&nbsp;<\/p>\n<p><strong>Step2:\u00a0<\/strong> To add the password into <strong><em>credentials-enc.properties\u00a0<\/em><\/strong>file, we must encrypt the password using ActiveMQ <strong><em>encrypt<\/em><\/strong> command.<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\r\n.\/activemq encrypt &#8211; password mysecretkey &#8211; input c0mp!ex@01\r\n<\/pre>\n<p>where <code class=\"varname\">password<\/code>is a secret used by the encryptor and\u00a0<code class=\"varname\">input<\/code>\u00a0is the password you want to encrypt.<\/p>\n<p>&nbsp;<\/p>\n<p>While encrypting the password, you are going to issue the password as clear text in terminal.<\/p>\n<p>I would not recommend it.\u00a0 \u00a0Use the following script instead, which does the same thing except it reads your password secretly and not showing on the terminal<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\n#!\/bin\/bash\r\necho &amp;quot;Enter the password to encrypt: &amp;quot;\r\nread -s pass\r\n.\/activemq encrypt &#8211; password mysecretkey &#8211; input $pass\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>Here is Sample output\u00a0 taken as it runs<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/apps\/amq\/apache-activemq-5.15.3\/bin$ .\/encrypt.sh \r\nEnter the password to encrypt: \r\nINFO: Loading '\/apps\/amq\/apache-activemq-5.15.3\/\/bin\/env'\r\nINFO: Using java '\/usr\/bin\/java'\r\nJava Runtime: Oracle Corporation 1.8.0_152 \/Library\/Java\/JavaVirtualMachines\/jdk1.8.0_152.jdk\/Contents\/Home\/jre\r\n  Heap sizes: current=62976k  free=61658k  max=932352k\r\n    JVM args: -Xms64M -Xmx1G -Djava.util.logging.config.file=logging.properties -Djava.security.auth.login.config=\/apps\/amq\/apache-activemq-5.15.3\/\/conf\/login.config -Dactivemq.classpath=\/apps\/amq\/apache-activemq-5.15.3\/\/conf:\/apps\/amq\/apache-activemq-5.15.3\/\/..\/lib\/: -Dactivemq.home=\/apps\/amq\/apache-activemq-5.15.3\/ -Dactivemq.base=\/apps\/amq\/apache-activemq-5.15.3\/ -Dactivemq.conf=\/apps\/amq\/apache-activemq-5.15.3\/\/conf -Dactivemq.data=\/apps\/amq\/apache-activemq-5.15.3\/\/data\r\nExtensions classpath:\r\n  [\/apps\/amq\/apache-activemq-5.15.3\/lib,\/apps\/amq\/apache-activemq-5.15.3\/lib\/camel,\/apps\/amq\/apache-activemq-5.15.3\/lib\/optional,\/apps\/amq\/apache-activemq-5.15.3\/lib\/web,\/apps\/amq\/apache-activemq-5.15.3\/lib\/extra]\r\nACTIVEMQ_HOME: \/apps\/amq\/apache-activemq-5.15.3\r\nACTIVEMQ_BASE: \/apps\/amq\/apache-activemq-5.15.3\r\nACTIVEMQ_CONF: \/apps\/amq\/apache-activemq-5.15.3\/conf\r\nACTIVEMQ_DATA: \/apps\/amq\/apache-activemq-5.15.3\/data\r\nEncrypted text: qf\/gz6Vde5woFY9vx0Z2ocD77M0Wzf3o\r\n<\/pre>\n<p>The last line contains the Encrypted Text and that&#8217;s your encrypted password.<\/p>\n<p>Note*: You must also encrypt the password of activemq default account&#8217;s [<code>system<\/code>] password. The default password for the <code>system<\/code>user account is <code>manager<\/code><\/p>\n<p>After encrypting all the passwords, you need to add it to the <code>credentials-enc.properties<\/code> file<\/p>\n<p><strong>Step3:\u00a0\u00a0<\/strong>Add the encrypted passwords into <em>credentials-enc.properties<\/em> file.<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\r\nactivemq.username=system\r\nactivemq.password=ENC(akuvjz1mFoau15BJwE5Mpg==)\r\nadmin.username=admin\r\nadmin.password=ENC(psJMVHGCcYjyZ+HvZFkBpOzIwnbcZygn)\r\ntestuser.username=testuser\r\ntestuser.password=ENC(Ci5pGj\/RNaP85ZWnwT0zdA==)\r\ntestguest.username=testguest\r\ntestguest.password=EN(Ci5pGj\/RNaP85ZWnwT0zdA==)\r\n<\/pre>\n<p>Here we have\u00a0 configured four\u00a0usernames and its passwords<\/p>\n<ol>\n<li><code>activemq.username<\/code> and <code>activemq.password<\/code> for default system account ( this account is used by the web console to access the broker resources )<\/li>\n<li><code>admin.username<\/code> and <code>admin.password<\/code> is for admin\u00a0privileged account<\/li>\n<li><code>testuser.username<\/code> and <code>testuser.password<\/code> is for user privileged account<\/li>\n<li><code>testguest.username<\/code> and <code>testguest.password<\/code> is for guest privileged account<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<p class=\"p1\"><strong>Step4:\u00a0<\/strong>Add the following Simple authentication plugin into <strong>activemq.xml<\/strong> file right after the <strong>&lt;broker&gt;<\/strong> tag starts<\/p>\n<p><script src=\"https:\/\/gist.github.com\/AKSarav\/a8c3a88906fab2ea7a9f695a25ee3ffd.js\"><\/script><\/p>\n<p class=\"p1\"><strong>Step5:\u00a0<\/strong>In order to setup Authorization, we must also add the Authorization plugin. Add the following entry, into <strong>&lt;plugins&gt;&lt;\/plugins&gt;<\/strong> element<\/p>\n<p><script src=\"https:\/\/gist.github.com\/AKSarav\/e11f16627a937108112a6132f106a37f.js\"><\/script><\/p>\n<p class=\"p1\"><strong>Step6:\u00a0<\/strong>Run Active-MQ using Encrypted Passwords<\/p>\n<p class=\"p1\">To run the Active-MQ broker with encrypted password configuration, follow the following steps:<\/p>\n<ol class=\"ol1\">\n<li class=\"li1\">Set environment variable for encryption\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">$ export ACTIVEMQ_ENCRYPTION_PASSWORD=mysecretkey<\/pre>\n<\/li>\n<li class=\"li1\">Set the AMQ broker\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">$ bin\/activemq start <\/pre>\n<\/li>\n<li class=\"li1\">Reset the environment variable for encryption\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">$ unset ACTIVEMQ_ENCRYPTION_PASSWORD<\/pre>\n<p>Resetting the environment is important to avoid saving passwords on your system.<\/li>\n<\/ol>\n<p><strong>Step7: <\/strong>Start\/Restart the ActiveMQ<\/p>\n<p>The Complete configuration file (activemq.xml) with all aforementioned configurations can be downloaded from\u00a0\u00a0<a href=\"https:\/\/gist.github.com\/AKSarav\/91e9b301b7c8ce0d5c7d3276d7eb0a7d\">here<\/a><\/p>\n<h4>Secure the console by encrypting the web-console username and password<\/h4>\n<p>&nbsp;<\/p>\n<p>By default, web console user credentials are stored in <strong>jetty-realm.properties<\/strong><\/p>\n<p>It will have a clear text username and password as shown below<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">\r\n\r\n# Defines users that can access the web (console, demo, etc.)\r\n# username: password [,rolename ...]\r\nadmin: admin, admin\r\nuser: user, user\r\n\r\n<\/pre>\n<p>Now we need to encrypt this password for better security. This is how you need to do that<\/p>\n<ol>\n<li>\u00a0Download Jetty from<a href=\"https:\/\/www.eclipse.org\/jetty\/download.html\">\u00a0https:\/\/www.eclipse.org\/jetty\/download.html<\/a><\/li>\n<li>\u00a0Unzip and Untar the downloaded package into the desired location on your server. Finally, you will get a directory like this\n<p class=\"p1\"><span class=\"s1\"><strong>jetty-distribution-9.4.10.v20180503\u00a0<\/strong> ( Version might change )<\/span><\/p>\n<\/li>\n<li><strong>cd<\/strong> to that directory and you need to execute the encryption command<\/li>\n<\/ol>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/apps\/amq\/jetty-distribution-9.4.10.v20180503$ java -cp lib\/jetty-util-9.4.10.v20180503.jar org.eclipse.jetty.util.security.Password adminuser admin\r\n2018-05-22 02:48:41.398:INFO::main: Logging initialized @179ms to org.eclipse.jetty.util.log.StdErrLog\r\nadmin\r\nOBF:1u2a1toa1w8v1tok1u30\r\nMD5:21232f297a57a5a743894a0e4a801fc3\r\nCRYPT:adpexzg3FUZAk\r\n<\/pre>\n<p>Here <code>adminuser<\/code> is the salt which is used to encrypt the password not the actual username and\u00a0<code>admin<\/code> is the password<\/p>\n<p>The last line\u00a0contains our encrypted password<\/p>\n<pre>CRYPT:adpexzg3FUZAk<\/pre>\n<p>Now, Copy this password to <strong>jetty-realm.properties<\/strong> and replace the clear text password<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\"># Defines users that can access the web (console, demo, etc.)\r\n# username: password [,rolename ...]\r\nadmin: CRYPT:adpexzg3FUZAk, admin\r\nuser: user, user<\/pre>\n<p>Start\/Restart your ActiveMQ instance<\/p>\n<p>&nbsp;<\/p>\n<h4>Test the Broker Authorization and Authentication<\/h4>\n<p>&nbsp;<\/p>\n<p>To Test the Broker Authentication and Authorization is working as expected.\u00a0 We need a JMS Client which could connect to the broker and do some task like sending (or) receiving messages from the queue.<\/p>\n<p>You can use the following JMS Client we have designed. <a href=\"https:\/\/github.com\/AKSarav\/ActiveMQ-QueueCLI\/blob\/master\/AMQ-QUEUE-CLI.jar\"><strong>AMQ-QUEUE-CLI.jar<\/strong><\/a><\/p>\n<p><strong>How to use it<\/strong><\/p>\n<ol>\n<li>Download the ZIP file from <strong><a href=\"https:\/\/github.com\/AKSarav\/ActiveMQ-QueueCLI\/blob\/master\/AMQ-QUEUE-CLI.zip\">here<\/a>\u00a0<\/strong>and extract the files<\/li>\n<li>AMQ-QUEUE-CLI.jar support both send\/publish and receive\/consume operation<\/li>\n<\/ol>\n<p>To Send a message to the Queue use the following QueueSender CLI<\/p>\n<pre class=\"brush: plain; title: ; notranslate\" title=\"\">java -cp AMQ-QUEUE-CLI.jar QueueSender<\/pre>\n<p>Execution Result<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/users\/aksarav\/tools$ java -cp AMQ-QUEUE-CLI.jar QueueSender\r\n-------------------------------\r\nACTIVEMQ - QUEUE SENDER - CLI\r\n-------------------------------\r\n\r\nEnter the Queue Name you wanna send this message to  (or) &amp;quot;quit&amp;quot; to exit : TestQueue\r\n\r\nEnter the details to Connect to ActiveMQ\r\nEnter the UserName : admin\r\nEnter the Password : c0mp!ex@01\r\nEnter the ConnectionURL : tcp:\/\/localhost:61616\r\n\r\nEnter the message to send: \r\nTest Message One\r\n INFO | sent message with text='Test Message One'\r\n\r\nEnter the Queue Name you wanna send this message to  (or) &amp;quot;quit&amp;quot; to exit : TestQueue\r\n INFO | Taking Already Entered Username,Password and ActiveMQ URL\r\n\r\nEnter the message to send: \r\nTest Message Two\r\n INFO | sent message with text='Test Message Two'\r\n\r\nEnter the Queue Name you wanna send this message to  (or) &amp;quot;quit&amp;quot; to exit : TestQueue\r\n INFO | Taking Already Entered Username,Password and ActiveMQ URL\r\n\r\nEnter the message to send: \r\nTest Message Three\r\n INFO | sent message with text='Test Message Three'\r\n\r\nEnter the Queue Name you wanna send this message to  (or) &amp;quot;quit&amp;quot; to exit : quit\r\nYou have entered Quit, We are not sure if that's Queue Name.\r\n\r\nPlease Clarify? \r\n1) Press One to Exit \r\n2) Press 2 to Reset\/Continue \r\n3) Quit is my Queue Name\r\n\r\nYour Option :1\r\n<\/pre>\n<p>To Receive a Single Message from the Queue use the QueueReceiver CLI with Single<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/users\/aksarav\/tools$ java -cp AMQ-QUEUE-CLI.jar QueueReceiver onebyone\r\n-------------------------------\r\nACTIVEMQ - QUEUE RECEIVER- CLI\r\n-------------------------------\r\n\r\nEnter the Queue Name (or) quit\/Quit to Exit : TestQueue\r\n\r\nEnter the details to Connect to ActiveMQ\r\nEnter the UserName : admin\r\nEnter the Password : c0mp!ex@01\r\nEnter the ConnectionURL : tcp:\/\/localhost:61616\r\n INFO | \r\nreceived message with text='Test Message One'\r\n INFO | message acknowledged\r\n INFO | Test Message One\r\n\r\nEnter the Queue Name (or) quit\/Quit to Exit : quit\r\nYou have entered Quit, We are not sure if that's Queue Name.\r\n\r\nPlease Clarify? \r\n1) Press One to Exit \r\n2) Press 2 Continue \r\n3) Quit is my Queue Name\r\n\r\n Your Option :1\r\n<\/pre>\n<p>To Receive all the Messages from the Queue use the following command<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/users\/aksarav\/tools$ java -cp AMQ-QUEUE-CLI.jar QueueReceiver allatonce\r\n-------------------------------\r\nACTIVEMQ - QUEUE RECEIVER- CLI\r\n-------------------------------\r\n\r\nEnter the Queue Name (or) quit\/Quit to Exit : TestQueue\r\n\r\nEnter the details to Connect to ActiveMQ\r\nEnter the UserName : admin\r\nEnter the Password : c0mp!ex@01\r\nEnter the ConnectionURL : tcp:\/\/localhost:61616\r\n INFO | \r\nreceived message with text='Test Message Two'\r\n INFO | message acknowledged\r\n INFO | Test Message Two\r\n INFO | \r\nreceived message with text='Test Message Three'\r\n INFO | message acknowledged\r\n INFO | Test Message Three\r\n INFO | no more messages to read from the queue\r\n\r\nEnter the Queue Name (or) quit\/Quit to Exit : quit\r\nYou have entered Quit, We are not sure if that's Queue Name.\r\n\r\nPlease Clarify? \r\n1) Press One to Exit \r\n2) Press 2 Continue \r\n3) Quit is my Queue Name\r\n\r\n Your Option :1\r\n\r\n\r\n<\/pre>\n<h5><script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script><\/h5>\n<h4><strong>Testing the <\/strong>Authorization<strong>\/ <\/strong>Role-based<strong> Access<\/strong><\/h4>\n<p>Try this <a href=\"https:\/\/github.com\/AKSarav\/ActiveMQ-QueueCLI\"><strong>AMQ-QUEUE-CLI.jar<\/strong><\/a> with different\u00a0accounts like admin,testuser,testguest to see how the authorization is working as per the configuration we have made.<\/p>\n<p>Try to send a message to the &#8220;<strong>TestQueue<\/strong>&#8221;\u00a0 using the <strong>testuser<\/strong> (or) <strong>testguest<\/strong> we have already created.<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/users\/aksarav\/tools$ java -cp AMQ-QUEUE-CLI.jar QueueSender\r\n-------------------------------\r\nACTIVEMQ - QUEUE SENDER - CLI\r\n-------------------------------\r\n\r\nEnter the Queue Name you wanna send this message to  (or) &amp;quot;quit&amp;quot; to exit : TestQueue\r\n\r\nEnter the details to Connect to ActiveMQ\r\nEnter the UserName : testuser\r\nEnter the Password : S3CURe!\r\nEnter the ConnectionURL : tcp:\/\/localhost:61616\r\nMay 22, 2018 2:21:50 PM QueueSender main\r\nSEVERE: null\r\njavax.jms.JMSSecurityException: User testuser is not authorized to write to: queue:\/\/TestQueue\r\n\tat org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:52)\r\n\tat org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1399)\r\n\tat org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1428)\r\n\tat org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:2086)\r\n\tat org.apache.activemq.ActiveMQMessageProducer.&amp;lt;init&amp;gt;(ActiveMQMessageProducer.java:124)\r\n\tat org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:1117)\r\n\tat QueueSender.init(QueueSender.java:72)\r\n\tat QueueSender.main(QueueSender.java:154)\r\nCaused by: java.lang.SecurityException: User testuser is not authorized to write to: queue:\/\/TestQueue\r\n\tat org.apache.activemq.security.AuthorizationBroker.addProducer(AuthorizationBroker.java:199)\r\n\tat org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:109)\r\n\tat org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:644)\r\n\tat org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)\r\n\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:330)\r\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:194)\r\n\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\r\n\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)\r\n\tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)\r\n\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)\r\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n<\/pre>\n<p>As expected the user has been denied access to write message to the TestQueue. As per the Authorization configuration, we have made, testuser would only be able to write\/read messages from the queues which start with the <code>USERS.<\/code> string in its name<\/p>\n<p>Now Let us try creating a new Queue named <code>\"USERS.TestQueue\"<\/code> and try to do write\/read the messages onto that queue.<\/p>\n<p><b>Sending the Message to the USERS.TestQueue<\/b> [ Queue will be auto created as its not already availalble]<\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/users\/aksarav\/tools$ java -cp AMQ-QUEUE-CLI.jar QueueSender\r\n-------------------------------\r\nACTIVEMQ - QUEUE SENDER - CLI\r\n-------------------------------\r\n\r\nEnter the Queue Name you wanna send this message to  (or) &amp;quot;quit&amp;quot; to exit : USERS.TestQueue\r\n\r\nEnter the details to Connect to ActiveMQ\r\nEnter the UserName : testuser\r\nEnter the Password : S3CURe!\r\nEnter the ConnectionURL : tcp:\/\/localhost:61616\r\n\r\nEnter the message to send: \r\nHello There\r\n INFO | sent message with text='Hello There'\r\n\r\nEnter the Queue Name you wanna send this message to  (or) &amp;quot;quit&amp;quot; to exit : quit\r\nYou have entered Quit, We are not sure if that's Queue Name.\r\n\r\nPlease Clarify? \r\n1 =&amp;gt; Press One to Exit \r\n2 =&amp;gt;  Press 2 to Reset\/Continue \r\n3 =&amp;gt; Quit is my Queue Name\r\n\r\nYour Option :1\r\n<\/pre>\n<p><b>Reading the message from the USERS.TestQueue<\/b><\/p>\n<pre class=\"brush: bash; title: ; notranslate\" title=\"\">\r\naksarav@mwinventory.in:\/users\/aksarav\/tools$ java -cp AMQ-QUEUE-CLI.jar QueueReceiver allatonce\r\n-------------------------------\r\nACTIVEMQ - QUEUE RECEIVER- CLI\r\n-------------------------------\r\n\r\nEnter the Queue Name (or) quit\/Quit to Exit : USERS.TestQueue\r\n\r\nEnter the details to Connect to ActiveMQ\r\nEnter the UserName : testuser\r\nEnter the Password : S3CURe!\r\nEnter the ConnectionURL : tcp:\/\/localhost:61616\r\n INFO | \r\nreceived message with text='Hello There'\r\n INFO | message acknowledged\r\n INFO | Hello There\r\n INFO | no more messages to read from the queue\r\n\r\nEnter the Queue Name (or) quit\/Quit to Exit : quit\r\nYou have entered Quit, We are not sure if that's Queue Name.\r\n\r\nPlease Clarify? \r\n1 =&amp;gt; Press One to Exit \r\n2 =&amp;gt;  Press 2 Continue \r\n3 =&amp;gt; Quit is my Queue Name\r\n\r\n Your Option :1\r\n<\/pre>\n<p>From the above test runs, we can conclude the Authorization (or) role-based access is working fine.<\/p>\n<p>Hope this article helps. For any questions feel free to write to me \/ comment here.<\/p>\n<p>If you like mwinventory,\u00a0<strong>Subscribe<\/strong>\u00a0for latest posts and stay connected. Leave your name and email in the below form<\/p>\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577122\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"0\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"1103\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577122\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577122\"><\/span>\n\t\t<\/div>\n\n\t\t\n<p>We promise! we never SPAM.<\/p>\n<p>&nbsp;<\/p>\n<p>Cheers,<\/p>\n<p>A K S A R A V<\/p>\n<p>Write to us at\u00a0<a href=\"mailto:aksarav@mwinventory.in\">aksarav@mwinventory.in<\/a><\/p>\n<p>Follow us on\u00a0<i class=\"fa fa-facebook\">\u00a0<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a>\u00a0|\u00a0\u00a0<i class=\"fa fa-twitter\">\u00a0<a href=\"https:\/\/twitter.com\/mwinventory\">Twitter<\/a><\/i><\/i><\/p>\n<p><i class=\"fa fa-whatsapp\"><\/i>To Join our\u00a0Community in\u00a0<a href=\"https:\/\/chat.whatsapp.com\/7Wn9PyXGw7GI3MMmFux6kU\">Whatsapp \u2013 Click here\u00a0<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>theOverview ActiveMQ is a Message Oriented Middleware (MOM) also knows as\u00a0 Message Broker (or) JMS provider with Enterprise features fully loaded. Apache ActiveMQ is one of the best Message broker in the enterprise market, because of it&#8217;s usability and being robust. Comes from the Apache Software Foundation. In this post,[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":1214,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[61],"tags":[83,87,82,81,80,84,85,86],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Active MQ Installation, Security Setup and Hardening - How to<\/title>\n<meta name=\"description\" content=\"ActiveMQ Security Hardening, Active MQ JAAS Authentication Plugin, Active MQ Simple Authentication Plugin, How to use an Encrypted password for ActiveMQ broker and web console. How to set up user role-based authorization. Active MQ JMS Client (Java Program) to send and receive messages to the Queue.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Active MQ Installation, Security Setup and Hardening - How to\" \/>\n<meta property=\"og:description\" content=\"ActiveMQ Security Hardening, Active MQ JAAS Authentication Plugin, Active MQ Simple Authentication Plugin, How to use an Encrypted password for ActiveMQ broker and web console. How to set up user role-based authorization. Active MQ JMS Client (Java Program) to send and receive messages to the Queue.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2018-05-22T09:12:45+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2018-07-20T19:35:30+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/05\/ActiveMQ-Authorization.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1122\" \/>\n\t<meta property=\"og:image:height\" content=\"659\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/05\/ActiveMQ-Authorization.png\",\"width\":1122,\"height\":659},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/\",\"name\":\"Active MQ Installation, Security Setup and Hardening - How to\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#primaryimage\"},\"datePublished\":\"2018-05-22T09:12:45+00:00\",\"dateModified\":\"2018-07-20T19:35:30+00:00\",\"description\":\"ActiveMQ Security Hardening, Active MQ JAAS Authentication Plugin, Active MQ Simple Authentication Plugin, How to use an Encrypted password for ActiveMQ broker and web console. How to set up user role-based authorization. Active MQ JMS Client (Java Program) to send and receive messages to the Queue.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Active MQ Installation, Security Setup and Hardening &#8211; How to\",\"datePublished\":\"2018-05-22T09:12:45+00:00\",\"dateModified\":\"2018-07-20T19:35:30+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#primaryimage\"},\"keywords\":\"ActiveMQ JMS Client to send\/receive messages,ActiveMQ role based access setup,ActiveMQ Security Hardening,How to install and Secure the ActiveMQ,How to Secure ActiveMQ,How to use Encrypted password in ActiveMQ,JAAS Authentication Plugin,Simple Authentication Plugin\",\"articleSection\":\"ActiveMQ\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/active-mq-installation-and-security-setup-and-hardening-step-by-step\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/1103"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=1103"}],"version-history":[{"count":73,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/1103\/revisions"}],"predecessor-version":[{"id":1256,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/1103\/revisions\/1256"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/1214"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=1103"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=1103"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=1103"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}