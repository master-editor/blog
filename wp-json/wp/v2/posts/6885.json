{"id":6885,"date":"2021-04-25T12:57:18","date_gmt":"2021-04-25T07:27:18","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=6885"},"modified":"2022-01-12T01:57:32","modified_gmt":"2022-01-11T20:27:32","slug":"ansible-firewalld","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/","title":{"rendered":"Ansible FirewallD Example &#8211; Managing Firewall Rules"},"content":{"rendered":"<p>Managing firewall rules are a tedious task but indispensable for a secure infrastructure.\u00a0 While all the cloud providers are having their own ACL and firewall rule offerings to protect your cloud resources.<\/p>\n<p>Some of us are still using the <code>firewall-d<\/code> for instance\/server-level security.<\/p>\n<p>While <code>firewall-cmd<\/code> is really efficient to manage the firewall rules. Ansible can do the same thing a little better and clean.<\/p>\n<p>In this article, we are going to see. How to manage your CentOS or Linux firewall <code>firewall-d<\/code> rules with Ansible <strong>firewallD<\/strong> module<\/p>\n<p>&nbsp;<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM.jpg\"><img class=\"alignnone size-full wp-image-6902\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM.jpg\" alt=\"Ansible FirewallD\" width=\"1440\" height=\"812\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM.jpg 1440w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM-300x169.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM-1024x577.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM-768x433.jpg 768w\" sizes=\"(max-width: 1440px) 100vw, 1440px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Ansible FirewallD Examples<\/h2>\n<p>Here we list few examples of the Ansible FirewallD module to manage the services and ports.<\/p>\n<p>Validate if the HTTP\/HTTPS service is Open or blocked<\/p>\n<p>You can use a command\u00a0 <code>nmap<\/code> to see if the port is blocked or open, If you see the state as <code>closed<\/code> which means it is blocked by <code>firewalld<\/code><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/nmap-test.png\"><img class=\"alignnone size-full wp-image-6892\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/nmap-test.png\" alt=\"\" width=\"962\" height=\"289\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/nmap-test.png 962w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/nmap-test-300x90.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/nmap-test-768x231.png 768w\" sizes=\"(max-width: 962px) 100vw, 962px\" \/><\/a><\/p>\n<p>Now let us enable <code>HTTP<\/code> and <code>HTTPS<\/code> services that would open the port <code>80<\/code> and <code>443<\/code><\/p>\n<p>&nbsp;<\/p>\n<h3>Enabling HTTP and HTTPS Service<\/h3>\n<p>Here is the Ansible playbook with firewallD module to enable HTTP and HTTPS service that inturns open up port <code>80<\/code> and <code>443<\/code><\/p>\n<blockquote><p>\u00a0This playbook is designed to run on the localhost and can be chagned to run remote by removing the <code>connection: local<\/code> and updating <code>hosts<\/code> parameter<\/p><\/blockquote>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n - name: FirewallD\r\n   hosts: localhost\r\n   connection: local\r\n   tasks:\r\n    - name: FirewallD rules\r\n      firewalld:\r\n        permanent: yes\r\n        immediate: yes\r\n        service: \"{{ item }}\"\r\n        state: enabled\r\n      with_items:\r\n       - http\r\n       - https\r\n<\/pre>\n<p>In this playbook, we are using <code>with_items<\/code> for loop processing and enabling multiple services in a single task.<\/p>\n<p><code>immediate: yes<\/code>\u00a0 flag would make sure that the firewall rules are implemented immediately.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p><strong>Execution Output<\/strong><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">[root@MWINODE01 vagrant]# ansible-playbook firewalld.yml\r\n[WARNING]: provided hosts list is empty, only localhost is available. Note that\r\nthe implicit localhost does not match 'all'\r\n\r\nPLAY [FirewallD] ***************************************************************\r\n\r\nTASK [Gathering Facts] *********************************************************\r\nok: [localhost]\r\n\r\nTASK [FirewallD rules] *********************************************************\r\nchanged: [localhost] =&gt; (item=http)\r\nchanged: [localhost] =&gt; (item=https)\r\n\r\nPLAY RECAP *********************************************************************\r\nlocalhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0<\/pre>\n<p>Let us Validate if the HTTP\/HTTPS services are Open<strong><br \/>\n<\/strong><\/p>\n<p>Now you can rerun the <code>nmap<\/code> and <code>curl<\/code> command to validate if the HTTP\/HTTPS services are open and enabled.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-9.33.58-AM.png\"><img class=\"alignnone size-full wp-image-6893\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-9.33.58-AM.png\" alt=\"Ansible FirewallD\" width=\"924\" height=\"484\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-9.33.58-AM.png 924w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-9.33.58-AM-300x157.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-9.33.58-AM-768x402.png 768w\" sizes=\"(max-width: 924px) 100vw, 924px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Enabling &amp; Disabling Multiple Ports on different Zones<\/h3>\n<p>Here is the Generic playbook which can help you enable and disable, various different ports on different zones.<\/p>\n<p>This simple playbook can be used for managing entire host firewall rules at once.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n - name: FirewallD\r\n   hosts: localhost\r\n   connection: local\r\n   tasks:\r\n    - name: FirewallD rules\r\n      firewalld:\r\n        permanent: yes\r\n        immediate: yes\r\n        port: \"{{item.port}}\/{{item.proto}}\"\r\n        state: \"{{item.state}}\"\r\n        zone: \"{{item.zone}}\"\r\n      with_items:\r\n       - {port: \"8080\", proto: \"tcp\", state: \"disabled\", zone: \"public\" }\r\n       - {port: \"161-162\", proto: \"udp\", state: \"disabled\", zone: \"internal\" }\r\n       - {port: \"9001\", proto: \"tcp\", state: \"enabled\", zone: \"public\" }<\/pre>\n<p>Playbook result<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-10.46.14-AM.png\"><img class=\"alignnone size-full wp-image-6896\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-10.46.14-AM.png\" alt=\"Ansible FirewallD\" width=\"1203\" height=\"449\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-10.46.14-AM.png 1203w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-10.46.14-AM-300x112.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-10.46.14-AM-1024x382.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-10.46.14-AM-768x287.png 768w\" sizes=\"(max-width: 1203px) 100vw, 1203px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Using Rich Rule with Ansible FirewallD<\/h3>\n<p>You can use Rich rules with the Ansible FirewallD module.<\/p>\n<p>Here is the Example playbook with the Rich rule to accept <code>ftp<\/code> and drop <code>http<\/code> for one minute along with the audit log<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n - name: FirewallD\r\n   hosts: localhost\r\n   connection: local\r\n   tasks:\r\n    - name: FirewallD rules\r\n      firewalld:\r\n        permanent: yes\r\n        immediate: yes\r\n        rich_rule: \"{{ item }}\"\r\n        state: enabled\r\n      with_items:\r\n       - 'rule service name=\"ftp\" audit limit value=\"1\/m\" accept'\r\n       - 'rule service name=\"http\" audit limit value=\"1\/m\" drop'\r\n<\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>Execution Result<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">[root@MWINODE01 vagrant]# ansible-playbook firewalld.yml\r\n[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match\r\n'all'\r\n\r\nPLAY [FirewallD] *****************************************************************************************************\r\n\r\nTASK [Gathering Facts] ***********************************************************************************************\r\nok: [localhost]\r\n\r\nTASK [FirewallD rules] ***********************************************************************************************\r\nchanged: [localhost] =&gt; (item=rule service name=\"ftp\" audit limit value=\"1\/m\" accept)\r\nchanged: [localhost] =&gt; (item=rule service name=\"http\" audit limit value=\"1\/m\" drop)\r\n\r\nPLAY RECAP ***********************************************************************************************************\r\nlocalhost                  : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\r\n<\/pre>\n<p>&nbsp;<\/p>\n<h3>Creating Port Redirection using Ansible Firewall Rich Rule<\/h3>\n<p>Here is the ansible-playbook example to setup\u00a0 Port Forwarding or Port redirection with Ansible FirewallD module<\/p>\n<p>In this task, we are going to set up a port forwarding from port <code>8080<\/code> to port <code>80<\/code> and serve the static page from Nginx<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n - name: FirewallD\r\n   hosts: localhost\r\n   connection: local\r\n   tasks:\r\n    - name: FirewallD rules\r\n      firewalld:\r\n        permanent: yes\r\n        immediate: yes\r\n        rich_rule: \"{{ item }}\"\r\n        state: enabled\r\n      with_items:\r\n       - 'rule forward-port port=8080 protocol=tcp to-port=80 family=ipv4'<\/pre>\n<p>&nbsp;<\/p>\n<p>Here is the execution result<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.20.41-PM.png\"><img class=\"alignnone size-full wp-image-6898\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.20.41-PM.png\" alt=\"Ansible FirewallD\" width=\"1181\" height=\"404\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.20.41-PM.png 1181w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.20.41-PM-300x103.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.20.41-PM-1024x350.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.20.41-PM-768x263.png 768w\" sizes=\"(max-width: 1181px) 100vw, 1181px\" \/><\/a><\/p>\n<p>Let us quickly validate the port forwarding by accessing the website on port 8080 and 80<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.27.19-PM.png\"><img class=\"alignnone size-full wp-image-6899\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.27.19-PM.png\" alt=\"\" width=\"797\" height=\"515\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.27.19-PM.png 797w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.27.19-PM-300x194.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.27.19-PM-768x496.png 768w\" sizes=\"(max-width: 797px) 100vw, 797px\" \/><\/a><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Conclusion<\/h2>\n<p>Ansible FirewallD module can help you efficiently manage your firewall rules with more control and idempotent.<\/p>\n<p>Rich rules are better executed and managed with Ansible FirewallD module.\u00a0 The only key feature I find it missing was listing and reading the already available rules.<\/p>\n<p>For which we have to still rely on the <code>firewall-cmd<\/code> command line.<\/p>\n<p>Hope this article helps and if you have any better examples. please let us know on the comments section<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578056\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"6885\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578056\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578056\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Managing firewall rules are a tedious task but indispensable for a secure infrastructure.\u00a0 While all the cloud providers are having their own ACL and firewall rule offerings to protect your cloud resources. Some of us are still using the firewall-d for instance\/server-level security. While firewall-cmd is really efficient to manage[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":6902,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible FirewallD Example - Managing Firewall Rules | Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible FirewallD Example. Firewall Rules management with Ansible and FirewallD module. Enable or Disable Services, Ports with Ansible Firewall module\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible FirewallD Example - Managing Firewall Rules | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible FirewallD Example. Firewall Rules management with Ansible and FirewallD module. Enable or Disable Services, Ports with Ansible Firewall module\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2021-04-25T07:27:18+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-11T20:27:32+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1440\" \/>\n\t<meta property=\"og:image:height\" content=\"812\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/04\/Screenshot-2021-04-25-at-12.54.58-PM.jpg\",\"width\":1440,\"height\":812,\"caption\":\"Ansible FirewallD\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/\",\"name\":\"Ansible FirewallD Example - Managing Firewall Rules | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#primaryimage\"},\"datePublished\":\"2021-04-25T07:27:18+00:00\",\"dateModified\":\"2022-01-11T20:27:32+00:00\",\"description\":\"Ansible FirewallD Example. Firewall Rules management with Ansible and FirewallD module. Enable or Disable Services, Ports with Ansible Firewall module\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible FirewallD Example &#8211; Managing Firewall Rules\",\"datePublished\":\"2021-04-25T07:27:18+00:00\",\"dateModified\":\"2022-01-11T20:27:32+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-firewalld\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6885"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=6885"}],"version-history":[{"count":8,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6885\/revisions"}],"predecessor-version":[{"id":6912,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6885\/revisions\/6912"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/6902"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=6885"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=6885"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=6885"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}