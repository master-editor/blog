{"id":2259,"date":"2018-10-25T07:20:44","date_gmt":"2018-10-25T01:50:44","guid":{"rendered":"http:\/\/www.middlewareinventory.com\/?p=2259"},"modified":"2022-06-19T11:32:39","modified_gmt":"2022-06-19T06:02:39","slug":"deploy-docker-image-to-kubernetes","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/","title":{"rendered":"How to Deploy docker image to Kubernetes"},"content":{"rendered":"<p>In this post, we are going to see the Steps to create a Docker Image and Deploy to Kubernetes in 8 easy steps.\u00a0 This post is about the title of this post which is &#8220;How to Deploy docker image to kubernetes&#8221;<\/p>\n<p>For this post, we have used minikube cluster and taken a Mac Desktop. Minikube\u00a0can be installed in your Home PC and you can try all these steps as you are reading it.<\/p>\n<h2><span style=\"color: #003366;\">Steps to Deploy Docker Image to <span style=\"color: #c91255;\">Kubernetes<\/span>.<\/span><\/h2>\n<ol>\n<li>Creating a Dockerfile<\/li>\n<li>Building an Image from Dockerfile<\/li>\n<li>Validate if the Image is created and Listed<\/li>\n<li>Optionally upload to docker Hub to share with the world<\/li>\n<li>Start the Container from Image<\/li>\n<li>Create Manifest file for kubernetes<\/li>\n<li>Build and Create a POD from Manifest file<\/li>\n<li>Validate and Monitor the POD creation<\/li>\n<li>Check the newly created POD in Kubernetes DashBoard<\/li>\n<\/ol>\n<h3><a id=\"user-content-step1\" class=\"anchor\" href=\"https:\/\/github.com\/AKSarav\/Docker-Image-and-Kubernates-Pod-Creation\/blob\/master\/README.md#step1\" aria-hidden=\"true\"><\/a>Step1: Creating Dockerfile<\/h3>\n<p><em>Creating of Dockerfile. The file is designed to run redis in-memory database in an alpine base OS<\/em><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #aaaaaa; font-style: italic;\"># Use existing docker image as a base<\/span>\r\nFROM alpine\r\n\r\n<span style=\"color: #aaaaaa; font-style: italic;\"># Download and install dependency<\/span>\r\nRUN apk add &#8211; update redis\r\n\r\n<span style=\"color: #aaaaaa; font-style: italic;\"># EXPOSE the port to the Host OS<\/span>\r\nEXPOSE <span style=\"color: #009999;\">6379<\/span>\r\n\r\n<span style=\"color: #aaaaaa; font-style: italic;\"># Tell the image what command it has to execute as it starts as a container<\/span>\r\nCMD [<span style=\"color: #aa5500;\">\"redis-server\"<\/span>]\r\n<\/pre>\n<\/div>\n<h3><\/h3>\n<h3><\/h3>\n<h3>Step2: Build an Image from Dockerfile<\/h3>\n<p><em>Build the Image using the Dockerfile we have developed<\/em><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker<span style=\"color: #009999;\">\/redisserver$ <span style=\"font-size: 12pt; color: #007399;\">docker build -t saravak\/<\/span><\/span><span style=\"font-size: 12pt; color: #007399;\">redis .<\/span>\r\nSending build context to Docker daemon  <span style=\"color: #009999;\">2.048<\/span>kB\r\nStep <span style=\"color: #009999;\">1<\/span>\/<span style=\"color: #009999;\">4<\/span> : FROM alpine\r\n &#8211; -&gt; <span style=\"color: #009999;\">196<\/span>d12cf6ab1\r\nStep <span style=\"color: #009999;\">2<\/span>\/<span style=\"color: #009999;\">4<\/span> : RUN apk add &#8211; update redis\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; a1426a22089a\r\nStep <span style=\"color: #009999;\">3<\/span>\/<span style=\"color: #009999;\">4<\/span> : EXPOSE <span style=\"color: #009999;\">6379<\/span>\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; <span style=\"color: #009999;\">7<\/span>c0fde02a01c\r\nStep <span style=\"color: #009999;\">4<\/span>\/<span style=\"color: #009999;\">4<\/span> : CMD [<span style=\"color: #aa5500;\">\"redis-server\"<\/span>]\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; <span style=\"color: #009999;\">8e1<\/span>cc8b503d8\r\nSuccessfully built <span style=\"color: #009999;\">8e1<\/span>cc8b503d8\r\nSuccessfully tagged saravak\/redis:latest\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker\/redisserver<span style=\"color: #aa0000;\">$<\/span><\/pre>\n<\/div>\n<h3>Step3: Validate the image is created in docker images<\/h3>\n<p><em>Make sure the image is ready and listing in the docker images list<\/em><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker\/redisserver<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #007399; font-size: 12pt;\">docker images<\/span>\r\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\r\nsaravak\/redis       latest              <span style=\"color: #009999;\">8e1<\/span>cc8b503d8        <span style=\"color: #009999;\">9<\/span> hours ago         <span style=\"color: #009999;\">6.9<\/span>MB\r\nredis               latest              <span style=\"color: #009999;\">0<\/span>a153379a539        <span style=\"color: #009999;\">45<\/span> hours ago        <span style=\"color: #009999;\">83.4<\/span>MB\r\nbusybox             latest              <span style=\"color: #009999;\">59788<\/span>edf1f3e        <span style=\"color: #009999;\">46<\/span> hours ago        <span style=\"color: #009999;\">1.15<\/span>MB\r\ntomcat              latest              <span style=\"color: #009999;\">41<\/span>a54fe1f79d        <span style=\"color: #009999;\">3<\/span> weeks ago         <span style=\"color: #009999;\">463<\/span>MB\r\nalpine              latest              <span style=\"color: #009999;\">196<\/span>d12cf6ab1        <span style=\"color: #009999;\">3<\/span> weeks ago         <span style=\"color: #009999;\">4.41<\/span>MB\r\n<\/pre>\n<\/div>\n<h3>Step4: Upload to hub.docker.com<\/h3>\n<p><em>Upload the image to the hub.docker.com repository for global access<\/em><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker\/redisserver<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #007399; font-size: 12pt;\">docker login<\/span>\r\nLogin with your Docker ID to <span style=\"color: #00aaaa;\">push<\/span> <span style=\"color: #0000aa;\">and<\/span> pull images from Docker Hub. If you don<span style=\"color: #ff0000; background-color: #ffaaaa;\">'<\/span>t have a Docker ID, head over to https:<span style=\"color: #009999;\">\/\/<\/span>hub.docker.com to create one.\r\nUsername: saravak\r\nPassword: \r\nLogin Succeeded\r\n\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker<span style=\"color: #009999;\">\/redisserver$ <span style=\"color: #007399; font-size: 12pt;\">docker push saravak\/<\/span><\/span><span style=\"color: #007399; font-size: 12pt;\">redis<\/span>\r\nThe <span style=\"color: #00aaaa;\">push<\/span> refers to repository [docker.io<span style=\"color: #009999;\">\/saravak\/<\/span>redis]\r\na63649d27e03: Layer already <span style=\"color: #00aaaa;\">exists<\/span> \r\ndf64d3292fd6: Layer already <span style=\"color: #00aaaa;\">exists<\/span> \r\nlatest: digest: sha256:dc0631a78737b5f0be09ad4c27b0120c916feb06d9bd7ce1fd6890925f5dd42b size: <span style=\"color: #009999;\">739<\/span>\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker\/redisserver<span style=\"color: #aa0000;\">$<\/span> \r\n<\/pre>\n<\/div>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Step5: Start the container from image<\/h3>\n<p><em>Start the container using the Image we just built just to make sure that the image can be instantiated as a container with no issues.<\/em><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker<span style=\"color: #009999;\">\/redisserver$ <span style=\"color: #007399; font-size: 12pt;\">docker container run -d -it &#8211; name rediscontainer saravak\/<\/span><\/span><span style=\"color: #007399; font-size: 12pt;\">redis:latest <\/span>\r\nb9824eb84fd75fdf511149284db8fef4b1d03dce6be5e8527e38159b672f115c\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>docker\/redisserver<span style=\"color: #aa0000;\">$<\/span> <span style=\"font-size: 12pt; color: #007399;\">docker container list<\/span>\r\nCONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS              PORTS               NAMES\r\nb9824eb84fd7        saravak<span style=\"color: #009999;\">\/redis:latest   \"redis-server\"      27 seconds ago      Up 25 seconds       6379\/<\/span>tcp            rediscontainer\r\n<\/pre>\n<\/div>\n<p><strong>Note*:<\/strong>\u00a0 Till here you were Creating a Docker Image and working on Docker Command Line Interface.<\/p>\n<p>As you are entering into the Kubernetes Phase. I would like to Present you two Different options to Create a Kubernetes Container from your Docker Image aka Dockerfile.<\/p>\n<p>The Second method is a Quick one where you Do not have to write any Instructions like YAML\/JSON files and let Kubernetes do the hard work for you,<\/p>\n<p>On the other hand,\u00a0 The First Method is where you define all the configuration elements on what Kubernetes should do with your image<\/p>\n<ol>\n<li>Create Manifests and build things using <strong>Kubectl create<\/strong> command (Recommended)<\/li>\n<li>Deploy Docker Image to Kubernetes Quickly with &#8211; <strong>Kubectl run<\/strong> command ( Deprecated)<\/li>\n<\/ol>\n<p>You make the choice.<\/p>\n<h2><span style=\"color: #003366;\">Method1: Kubernetes Tasks with <span style=\"color: #c91255;\">Manifest<\/span> file<\/span><\/h2>\n<h3>Step6: Create Manifest file for Kubernetes<\/h3>\n<p><em>Create a Manifest file to create a Simple and Straight forward POD [Without replica and Scaling]<\/em><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">apiVersion: v1\r\nkind: Pod\r\nmetadata:\r\n   name: redis<span style=\"color: #333333;\">-<\/span>pod\r\nspec:\r\n   containers:\r\n   <span style=\"color: #333333;\">-<\/span> name: redis<span style=\"color: #333333;\">-<\/span>container01\r\n     image: saravak<span style=\"color: #333333;\">\/<\/span>redis:latest\r\n     ports:\r\n     <span style=\"color: #333333;\">-<\/span> containerPort: <span style=\"color: #0000dd; font-weight: bold;\">6379<\/span>\r\n<\/pre>\n<\/div>\n<h3>Step7: Build and Create POD from Manifest file<\/h3>\n<p><em>Create a POD using Kubectl command using the Manifest file we have created in Step6<\/em><br \/>\n<!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>kubernetes<span style=\"color: #aa0000;\">$<\/span> <span style=\"font-size: 12pt; color: #007399;\">kubectl create -f create-redispod.yml<\/span>\r\npod\/redis-pod created\r\n<\/pre>\n<\/div>\n<h3>Step8: Validate the pod creation and find more information<\/h3>\n<p><em>Get the status and more detailed information on the newly created POD<\/em><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>kubernetes<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #007399; font-size: 12pt;\">kubectl get pods<\/span>\r\nNAME                              READY   STATUS    RESTARTS   AGE\r\nhello-minikube-<span style=\"color: #009999;\">7<\/span>c77b68cff-pd4x2   <span style=\"color: #009999;\">1<\/span>\/<span style=\"color: #009999;\">1<\/span>     Running   <span style=\"color: #009999;\">1<\/span>          <span style=\"color: #009999;\">11<\/span>h\r\nredis-pod                         <span style=\"color: #009999;\">1<\/span>\/<span style=\"color: #009999;\">1<\/span>     Running   <span style=\"color: #009999;\">0<\/span>          <span style=\"color: #009999;\">2<\/span>m\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>kubernetes<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #007399; font-size: 12pt;\">kubectl get pods\/redis-pod<\/span>\r\nNAME        READY   STATUS    RESTARTS   AGE\r\nredis-pod   <span style=\"color: #009999;\">1<\/span>\/<span style=\"color: #009999;\">1<\/span>     Running   <span style=\"color: #009999;\">0<\/span>          <span style=\"color: #009999;\">2<\/span>m\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>kubernetes<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #007399; font-size: 12pt;\">kubectl describe pods\/redis-pod<\/span>\r\nName:         redis-pod\r\nNamespace:    default\r\nNode:         minikube\/<span style=\"color: #009999;\">192.168.64.2<\/span>\r\nStart Time:   Thu, <span style=\"color: #009999;\">04<\/span> Oct <span style=\"color: #009999;\">2018<\/span> <span style=\"color: #009999;\">21<\/span>:<span style=\"color: #009999;\">58<\/span>:<span style=\"color: #009999;\">28<\/span> +<span style=\"color: #009999;\">0530<\/span>\r\nLabels:       <span style=\"color: #009999;\">&lt;none&gt;<\/span>\r\nAnnotations:  <span style=\"color: #009999;\">&lt;none&gt;<\/span>\r\nStatus:       Running\r\nIP:           <span style=\"color: #009999;\">172.17.0.6<\/span>\r\nContainers:\r\n  redis-container01:\r\n    Container ID:   docker:<span style=\"color: #009999;\">\/\/c7<\/span>bc7ce68272493477249da617ea042ca5191b6b7b4ef89f9490dab8584e0fb4\r\n    Image:          saravak\/redis:latest\r\n    Image ID:       docker-pullable:<span style=\"color: #009999;\">\/\/s<\/span>aravak\/redis<span style=\"color: #aa0000;\">@sha256:dc0631a78737b5f0be09ad4c27b0120c916feb06d9bd7ce1fd6890925f5dd42b<\/span>\r\n    Port:           <span style=\"color: #009999;\">6379<\/span>\/TCP\r\n    Host Port:      <span style=\"color: #009999;\">0<\/span>\/TCP\r\n    State:          Running\r\n      Started:      Thu, <span style=\"color: #009999;\">04<\/span> Oct <span style=\"color: #009999;\">2018<\/span> <span style=\"color: #009999;\">21<\/span>:<span style=\"color: #009999;\">58<\/span>:<span style=\"color: #009999;\">36<\/span> +<span style=\"color: #009999;\">0530<\/span>\r\n    Ready:          True\r\n    Restart Count:  <span style=\"color: #009999;\">0<\/span>\r\n    Environment:    <span style=\"color: #009999;\">&lt;none&gt;<\/span>\r\n    Mounts:\r\n      <span style=\"color: #009999;\">\/var\/<\/span>run<span style=\"color: #009999;\">\/secrets\/<\/span>kubernetes.io\/serviceaccount from default-token-t5c7w (ro)\r\nConditions:\r\n  Type           Status\r\n  Initialized    True \r\n  Ready          True \r\n  PodScheduled   True \r\nVolumes:\r\n  default-token-t5c7w:\r\n    Type:        Secret (a volume populated by a Secret)\r\n    SecretName:  default-token-t5c7w\r\n    Optional:    false\r\nQoS Class:       BestEffort\r\nNode-Selectors:  <span style=\"color: #009999;\">&lt;none&gt;<\/span>\r\nTolerations:     node.kubernetes.io\/<span style=\"color: #0000aa;\">not<\/span>-ready:NoExecute <span style=\"color: #0000aa;\">for<\/span> <span style=\"color: #009999;\">300<\/span>s\r\n                 node.kubernetes.io\/unreachable:NoExecute <span style=\"color: #0000aa;\">for<\/span> <span style=\"color: #009999;\">300<\/span>s\r\nEvents:\r\n  Type    Reason                 Age    From               Message\r\n  &#8211;  &#8211;    &#8211; -- &#8211;                 &#8211;  &#8211;   &#8211;  &#8211;               &#8211; -----\r\n  Normal  Scheduled              <span style=\"color: #009999;\">2<\/span>m27s  default-scheduler  Successfully assigned redis-pod to minikube\r\n  Normal  SuccessfulMountVolume  <span style=\"color: #009999;\">2<\/span>m27s  kubelet, minikube  MountVolume.SetUp succeeded <span style=\"color: #0000aa;\">for<\/span> volume <span style=\"color: #aa5500;\">\"default-token-t5c7w\"<\/span>\r\n  Normal  Pulling                <span style=\"color: #009999;\">2<\/span>m26s  kubelet, minikube  pulling image <span style=\"color: #aa5500;\">\"saravak\/redis:latest\"<\/span>\r\n  Normal  Pulled                 <span style=\"color: #009999;\">2<\/span>m20s  kubelet, minikube  Successfully pulled image <span style=\"color: #aa5500;\">\"saravak\/redis:latest\"<\/span>\r\n  Normal  Created                <span style=\"color: #009999;\">2<\/span>m19s  kubelet, minikube  Created container\r\n  Normal  Started                <span style=\"color: #009999;\">2<\/span>m19s  kubelet, minikube  Started container\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>kubernetes<span style=\"color: #aa0000;\">$<\/span> \r\n<\/pre>\n<\/div>\n<h2><span style=\"color: #003366;\">Method2: Quick Deployment of Docker Image with <span style=\"color: #c91255;\">No Manifest<\/span><\/span><\/h2>\n<h3>Step6:\u00a0 Create a Pod from Docker Image<\/h3>\n<p><em>In this step, we are instantiating our Docker Image as Container. <\/em><\/p>\n<p><em>As you know the basic and the core element of Kubernetes is POD and that&#8217;s a logical group of one or more containers. A Container cannot run standalone in Kubernetes it must always run inside a POD.<\/em><\/p>\n<p><em>So Creating a POD is technically creating a Container<\/em><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #259acc;\">$ kubectl run redis-pod &#8211; image=saravak\/redis &#8211; port=6379 &#8211; generator=run\/v1\r\n<\/span>\r\nkubectl run &#8211; generator=run\/v1 is DEPRECATED and will be removed in a future version. Use kubectl create instead.\r\nreplicationcontroller\/redis-pod created\r\n<\/pre>\n<\/div>\n<p>If you look at the preceding snippet closely,<\/p>\n<p>It creates a <strong>replication Controller<\/strong> in place of POD. But do not worry, Replication Controller is there to efficiently manage and scale the POD and it is a layer above the POD.<\/p>\n<p>Now Let us validate if our POD is ready and created.<\/p>\n<details>\n<summary>What is Replication Controller &#8211; A Short note<\/summary>\n<div class=\"page\" title=\"Page 122\">\n<div class=\"layoutArea\">\n<div class=\"column\">\n<p>A ReplicationController is a Kubernetes resource that ensures its pods are always kept running. If the pod disappears for any reason, such as in the event of a node disappearing from the cluster or because the pod was evicted from the node, the replication controller notices the missing pod and creates a replacement pod.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/details>\n<h3>Step7:\u00a0 Make Sure the POD is created and Ready.<\/h3>\n<p><em>Using Kubectl get command, Make Sure the POD is created. <\/em><\/p>\n<p><em>Since the Replication Controller is in place and it managed the POD,\u00a0 the POD name would be dynamic<\/em><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #259acc;\"><span style=\"color: #1075a1;\">$ kubectl get pods|egrep -i \"^NAME|redis-pod\"<\/span>\r\n<\/span>\r\nNAME \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 READY \u00a0 STATUS\u00a0 \u00a0 RESTARTS \u00a0 AGE\r\nredis-pod-jsrvz\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1\/1 \u00a0 \u00a0 Running \u00a0 0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 19m\r\n<\/pre>\n<\/div>\n<h3>Step8: Validate the pod creation and find more information<\/h3>\n<p><em>Get the status and more detailed information on the newly created POD<\/em><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>kubernetes<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #007399; font-size: 12pt;\">kubectl get pods<\/span>\r\nNAME                              READY   STATUS    RESTARTS   AGE\r\nhello-minikube-<span style=\"color: #009999;\">7<\/span>c77b68cff-pd4x2   <span style=\"color: #009999;\">1<\/span>\/<span style=\"color: #009999;\">1<\/span>     Running   <span style=\"color: #009999;\">1<\/span>          <span style=\"color: #009999;\">11<\/span>h\r\nredis-pod-jsrvz                    <span style=\"color: #009999;\">1<\/span>\/<span style=\"color: #009999;\">1<\/span>     Running   <span style=\"color: #009999;\">0<\/span>          <span style=\"color: #009999;\">2<\/span>m\r\naksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/apps\/<\/span>kubernetes<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #007399; font-size: 12pt;\">kubectl get pods\/redis-pod-jsrvz<\/span>\r\nNAME        READY   STATUS    RESTARTS   AGE\r\nredis-pod   <span style=\"color: #009999;\">1<\/span>\/<span style=\"color: #009999;\">1<\/span>     Running   <span style=\"color: #009999;\">0<\/span>          <span style=\"color: #009999;\">2<\/span>m\r\n<\/pre>\n<\/div>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #1075a1;\">$ kubectl describe pods\/redis-pod-jsrvz<\/span>\r\nName:           redis-pod-jsrvz\r\nNamespace:      default\r\nNode:           minikube\/10.0.2.15\r\nStart Time:     Sat, 04 May 2019 19:29:43 +0530\r\nLabels:         run=redis-pod\r\nAnnotations:    &lt;none&gt;\r\nStatus:         Running\r\nIP:             172.17.0.10\r\nControlled By:  ReplicationController\/redis-pod\r\nContainers:\r\n  redis-pod:\r\n    Container ID:   docker:\/\/13d54838011e655ac392065d60da0706f0bf27f4e3b6df11d7a013879a6d52e4\r\n    Image:          saravak\/redis\r\n    Image ID:       docker-pullable:\/\/saravak\/redis@sha256:dc0631a78737b5f0be09ad4c27b0120c916feb06d9bd7ce1fd6890925f5dd42b\r\n    Port:           6379\/TCP\r\n    Host Port:      0\/TCP\r\n    State:          Running\r\n      Started:      Sat, 04 May 2019 20:31:22 +0530\r\n    Last State:     Terminated\r\n      Reason:       Completed\r\n      Exit Code:    0\r\n      Started:      Sat, 04 May 2019 19:29:54 +0530\r\n      Finished:     Sat, 04 May 2019 20:23:46 +0530\r\n    Ready:          True\r\n    Restart Count:  1\r\n    Environment:    &lt;none&gt;\r\n    Mounts:\r\n      \/var\/run\/secrets\/kubernetes.io\/serviceaccount from default-token-2fg4d (ro)\r\nConditions:\r\n  Type           Status\r\n  Initialized    True \r\n  Ready          True \r\n  PodScheduled   True \r\nVolumes:\r\n  default-token-2fg4d:\r\n    Type:        Secret (a volume populated by a Secret)\r\n    SecretName:  default-token-2fg4d\r\n    Optional:    false\r\nQoS Class:       BestEffort\r\nNode-Selectors:  &lt;none&gt;\r\nTolerations:     node.kubernetes.io\/not-ready:NoExecute for 300s\r\n                 node.kubernetes.io\/unreachable:NoExecute for 300s\r\nEvents:\r\n  Type    Reason                 Age    From               Message\r\n  &#8211;  &#8211;    &#8211; -- &#8211;                 &#8211;  &#8211;   &#8211;  &#8211;               &#8211; -----\r\n  Normal  Scheduled              66m    default-scheduler  Successfully assigned redis-pod-jsrvz to minikube\r\n  Normal  SuccessfulMountVolume  66m    kubelet, minikube  MountVolume.SetUp succeeded for volume \"default-token-2fg4d\"\r\n  Normal  Pulling                66m    kubelet, minikube  pulling image \"saravak\/redis\"\r\n  Normal  Pulled                 66m    kubelet, minikube  Successfully pulled image \"saravak\/redis\"\r\n  Normal  Created                66m    kubelet, minikube  Created container\r\n  Normal  Started                66m    kubelet, minikube  Started container\r\n  Normal  SuccessfulMountVolume  5m31s  kubelet, minikube  MountVolume.SetUp succeeded for volume \"default-token-2fg4d\"\r\n  Normal  SandboxChanged         5m31s  kubelet, minikube  Pod sandbox changed, it will be killed and re-created.\r\n  Normal  Pulling                5m30s  kubelet, minikube  pulling image \"saravak\/redis\"\r\n  Normal  Pulled                 5m6s   kubelet, minikube  Successfully pulled image \"saravak\/redis\"\r\n  Normal  Created                5m6s   kubelet, minikube  Created container\r\n  Normal  Started                5m6s   kubelet, minikube  Started container\r\n<\/pre>\n<\/div>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Validation: check the newly created pod in Kubernetes Dashboard (GUI) &#8211; minikube<\/h3>\n<p>run the following command and It will open the dashboard in your default browser<\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">minikube dashboard<\/pre>\n<\/div>\n<p>Under NameSpace &#8211; Default -&gt; Workloads -&gt; pods<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screen-Shot-2018-10-25-at-7.03.50-AM.png\"><img class=\"alignnone size-full wp-image-2261\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screen-Shot-2018-10-25-at-7.03.50-AM.png\" alt=\"How to create &amp; deploy a docker image to Kubernetes \u2013 In 8 Steps\" width=\"1176\" height=\"628\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screen-Shot-2018-10-25-at-7.03.50-AM.png 1176w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screen-Shot-2018-10-25-at-7.03.50-AM-300x160.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screen-Shot-2018-10-25-at-7.03.50-AM-768x410.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screen-Shot-2018-10-25-at-7.03.50-AM-1024x547.png 1024w\" sizes=\"(max-width: 1176px) 100vw, 1176px\" \/><\/a><\/p>\n<p>Make Sure that your POD is present.<\/p>\n<p>That&#8217;a all this is how we can deploy a Docker image to Kubernetes in Eight Simple Steps.<\/p>\n<p>Hope this helps.<\/p>\n<p>Thanks,<br \/>\nSaravAK<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578176\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"2259\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578176\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578176\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to see the Steps to create a Docker Image and Deploy to Kubernetes in 8 easy steps.\u00a0 This post is about the title of this post which is &#8220;How to Deploy docker image to kubernetes&#8221; For this post, we have used minikube cluster and[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":5202,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[152,151],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to Deploy docker image to Kubernetes | DevOps Junction<\/title>\n<meta name=\"description\" content=\"How to Deploy Docker Image to Kubernetes, In this post we will see how to deploy docker images to kubernetes using Minikube in 8 Simple Steps with example. Kubernetes Manifest file sample for Pod creation to deploy docker image. Pod Creation example and how pod. Kubernetes example deployment of Docker Image.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to Deploy docker image to Kubernetes | DevOps Junction\" \/>\n<meta property=\"og:description\" content=\"How to Deploy Docker Image to Kubernetes, In this post we will see how to deploy docker images to kubernetes using Minikube in 8 Simple Steps with example. Kubernetes Manifest file sample for Pod creation to deploy docker image. Pod Creation example and how pod. Kubernetes example deployment of Docker Image.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2018-10-25T01:50:44+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T06:02:39+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screenshot-2020-02-27-at-4.45.47-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"2700\" \/>\n\t<meta property=\"og:image:height\" content=\"1730\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/Screenshot-2020-02-27-at-4.45.47-PM.png\",\"width\":2700,\"height\":1730},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/\",\"name\":\"How to Deploy docker image to Kubernetes | DevOps Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#primaryimage\"},\"datePublished\":\"2018-10-25T01:50:44+00:00\",\"dateModified\":\"2022-06-19T06:02:39+00:00\",\"description\":\"How to Deploy Docker Image to Kubernetes, In this post we will see how to deploy docker images to kubernetes using Minikube in 8 Simple Steps with example. Kubernetes Manifest file sample for Pod creation to deploy docker image. Pod Creation example and how pod. Kubernetes example deployment of Docker Image.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"How to Deploy docker image to Kubernetes\",\"datePublished\":\"2018-10-25T01:50:44+00:00\",\"dateModified\":\"2022-06-19T06:02:39+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#primaryimage\"},\"articleSection\":\"Docker,Kubernetes\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/deploy-docker-image-to-kubernetes\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2259"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=2259"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2259\/revisions"}],"predecessor-version":[{"id":8698,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2259\/revisions\/8698"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/5202"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=2259"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=2259"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=2259"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}