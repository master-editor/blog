{"id":3232,"date":"2019-04-09T07:46:49","date_gmt":"2019-04-09T02:16:49","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=3232"},"modified":"2022-06-19T11:28:55","modified_gmt":"2022-06-19T05:58:55","slug":"docker-run-image-as-container","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/","title":{"rendered":"Docker Run Image as Container &#8211; Create Container From Docker Image"},"content":{"rendered":"<p>In this post, we are going to see how to create an image and run the image as a container and manage it.<\/p>\n<p>Before we proceed further, it is indispensable, that we are aware of what is an Image and What is a Container. So let us begin from there.<\/p>\n<h2>The Index<\/h2>\n<p>These are the list of steps we are going to perform as part of this post.<\/p>\n<ol>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec1\">Image vs Container &#8211; What are they<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec2\">How to Create a Docker Image &#8211; A Quick command overview of Dockerfile<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec2a\">Defining a Plan &#8211; Create a Ubuntu Apache2 HTTPD container<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec3\">Create a Virtual Host file for our website<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec4\">Create a Sample HTML file for our website<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec5\">Create a Dockerfile for our Image<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec6\">The Final Directory Structure of Our WorkSpace<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec7\">Build Image from the Dockerfile<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec8\">List the images and make sure the image is created<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#Sec9\">Docker run Image &#8211; Create and Start a Container from our Image<\/a><\/li>\n<\/ol>\n<figure id=\"attachment_3239\" aria-describedby=\"caption-attachment-3239\" style=\"width: 1136px\" class=\"wp-caption aligncenter\"><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/DockerRunImage1.jpg\"><img class=\"size-full wp-image-3239\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/DockerRunImage1.jpg\" alt=\"Docker Run Image\" width=\"1136\" height=\"680\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/DockerRunImage1.jpg 1136w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/DockerRunImage1-300x180.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/DockerRunImage1-768x460.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/DockerRunImage1-1024x613.jpg 1024w\" sizes=\"(max-width: 1136px) 100vw, 1136px\" \/><\/a><figcaption id=\"caption-attachment-3239\" class=\"wp-caption-text\">Image Credits to SwapnIl Dwivedi &#8211; UnSplash<\/figcaption><\/figure>\n<h2 id=\"Sec1\">Image vs Container<\/h2>\n<p>The Image is a file more like a manifest,\u00a0 where you define what are the packages and software\u00a0and configurations should be available when you create a container from the image. It is more like .a template using which you can create N number of containers<\/p>\n<p><strong>The Running instances of the image are called as a container.<\/strong><\/p>\n<p>To know more about what is container <a href=\"https:\/\/www.middlewareinventory.com\/blog\/what-is-container-and-containerization-a-basic-notes\/\">refer this link\u00a0<\/a><\/p>\n<h2 id=\"Sec2\">How to Create a Docker Image?<\/h2>\n<p>Creating a Docker image is an easy job.\u00a0 To create a Docker Image. you need to create a file named <code>Dockerfile<\/code> and specify some information in it.<\/p>\n<p>What information should the Docker file have?<\/p>\n<p>These are a list of information that we must put in the Dockerfile to create an image.<\/p>\n<p><code>MAINTAINER<\/code> &#8211; Who Crate and manage this container image<\/p>\n<p><code>FROM<\/code> &#8211; What is the base image, we are going to use to host our container. you can either use a minimal OS image like CentOS, Alpine or you can create your\u00a0own from the scratch by mentioning SCRATCH as a value to this.<\/p>\n<p><code>RUN<\/code> &#8211; Commands to Run to make the image( the future container) in the way you want<\/p>\n<p><code>EXPOSE<\/code>\u00a0Do you want your image or application in the image to expose any port to the external world or at least to the host.\u00a0 For example if you are building Apache HTTP server image you can EXPOSE port 80<\/p>\n<p><code>CMD<\/code>\u00a0The Default Command of the container which gets created using this image.\u00a0 Every Container must have a Default Command. the Container would run as long as the Default Command is running.<\/p>\n<p><code>ADD<\/code> or <code>COPY<\/code>\u00a0The files you want to copy into the container from your host.<\/p>\n<p>There are more instructions and elements you can use in the Dockerfile but these are basics and enough for us to create the image<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2 id=\"Sec2a\">The Requirement\/ The Plan<\/h2>\n<p>Let us make some plan on what image we are going to create.\u00a0 Since Apache is most widely used web server, Let us go with that.<\/p>\n<p>We will see how to create a Dockerfile image to create an Apache httpd Docker Container and Docker image.<\/p>\n<p>In your host server where the Docker CLI and Docker is installed,<\/p>\n<p>Create a new directory (or) choose an existing directory and perform the following steps. In my case the directory name is\u00a0<em>\/apps\/docker\/MyTestApache<\/em><\/p>\n<p>&nbsp;<\/p>\n<h2 id=\"Sec3\">Create a Virtual Host file<\/h2>\n<p>Create a file named\u00a0<code><span class=\"bash\">default-website.conf<\/span><\/code>\u00a0and paste the following content. This is a minimal version of a virtual host file for apache. you can update the values like ServerName and alias as per your requirement.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #474949; color: #d1d9e1;\"> <span class=\"hljs-section\" style=\"color: #b5bd68; font-weight: bold;\">&lt;VirtualHost *:80&gt;<\/span>\r\n\t\r\n\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\"><span class=\"hljs-nomarkup\">ServerName<\/span><\/span> devopsjunction.com\r\n\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\">ServerAlias<\/span> www.devopsjunction.com\r\n\r\n\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\">ServerAdmin<\/span> admin@devopsjunction.com\r\n\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\"><span class=\"hljs-nomarkup\">DocumentRoot<\/span><\/span> \/var\/www\/html\/devopsjunction\r\n\t\r\n\t<span class=\"hljs-section\" style=\"color: #b5bd68; font-weight: bold;\">&lt;Directory \"\/var\/www\/html\/devopsjunction\"&gt;<\/span>\r\n\t\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\"><span class=\"hljs-nomarkup\">Order<\/span><\/span> allow,deny\r\n\t\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\">AllowOverride<\/span> <span class=\"hljs-literal\" style=\"color: #cc99cc;\">All<\/span>\r\n\t\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\"><span class=\"hljs-nomarkup\">Allow<\/span><\/span> from <span class=\"hljs-literal\" style=\"color: #cc99cc;\">all<\/span>\r\n\t\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\">Require<\/span> <span class=\"hljs-literal\" style=\"color: #cc99cc;\">all<\/span> granted\r\n\t<span class=\"hljs-section\" style=\"color: #b5bd68; font-weight: bold;\">&lt;\/Directory&gt;<\/span>\r\n\r\n\t\t\r\n\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\">ErrorLog<\/span> <span class=\"hljs-variable\" style=\"color: #ffcc66;\">${APACHE_LOG_DIR}<\/span>\/devopsjunction-error.log\r\n\t<span class=\"hljs-attribute\" style=\"color: #81a2be;\">CustomLog<\/span> <span class=\"hljs-variable\" style=\"color: #ffcc66;\">${APACHE_LOG_DIR}<\/span>\/devopsjunction-access.log combined\r\n\r\n\t\r\n<span class=\"hljs-section\" style=\"color: #b5bd68; font-weight: bold;\">&lt;\/VirtualHost&gt;<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h2 id=\"Sec4\">Create a sample index.html file for our website<\/h2>\n<p>Now for our website, we need a welcome page, So you write one or use the following file and save in the name <code>index.html<\/code> on the same directory<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #474949; color: #d1d9e1;\"><span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;html&gt;<\/span>\r\n<span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;head&gt;<\/span> <span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;title&gt;<\/span> DevOpsJunction - Home Page <span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;\/title&gt;<\/span> <span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;\/head&gt;<\/span>\r\n<span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;body&gt;<\/span>\r\n<span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;h2&gt;<\/span> Welcome to Devops Junciton. Good to have you here <span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;\/h2&gt;<\/span>\r\n<span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;\/body&gt;<\/span>\r\n<span class=\"hljs-attribute\" style=\"color: #81a2be;\">&lt;\/html&gt;<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h2 id=\"Sec5\">Create the Dockerfile<\/h2>\n<p>Create a Dockerfile with the following content on the same directory<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #474949; color: #d1d9e1;\"><span class=\"hljs-keyword\" style=\"color: #cc99cc;\"><span style=\"color: #ffff00;\"># Define the base image on top of which we are going to customize<\/span>\r\nFROM<\/span> ubuntu:latest\r\n\r\n<span style=\"color: #ffff00;\"># Define the Createor and Maintainer of this image<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #cc99cc;\">MAINTAINER<\/span> Rumen Lishkov &lt;aksarav@middlewareinventory.com&gt;\r\n\r\n<span style=\"color: #ffff00;\"># Run the command to install apache as a prerequisite<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #cc99cc;\">RUN<\/span> <span class=\"bash\">apt-get update &amp;&amp; apt-get install -y apache2\r\n\r\n<span style=\"color: #ffff00;\"># Run the command to Create a DocumentRoot<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #cc99cc;\">RUN<\/span> mkdir -p \/var\/www\/html\/devopsjunction\r\n\r\n<span style=\"color: #ffff00;\"># Copy the file from the Current Host Directory to the Container\r\n<\/span><\/span><span class=\"hljs-keyword\" style=\"color: #cc99cc;\">ADD<\/span> <span class=\"bash\">default-website.conf \/etc\/apache2\/sites-available\/\r\n<span class=\"hljs-keyword\" style=\"color: #cc99cc;\">ADD<\/span> index.html \/var\/www\/html\/devopsjunction\r\n\r\n<span style=\"color: #ffff00;\"># Run one more command to change the ownership of the file we copied\r\n<\/span><\/span><span class=\"hljs-keyword\" style=\"color: #cc99cc;\">RUN<\/span> <span class=\"bash\">chown root:root \/etc\/apache2\/sites-available\/default-website.conf\r\n\r\n<span style=\"color: #ffff00;\"># Enable this website using a2ensite - command<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #cc99cc;\">RUN<\/span> a2ensite default-website\r\n\r\n<span style=\"color: #ffff00;\"># Say that our application is exposing a Port\r\n<\/span><\/span><span class=\"hljs-keyword\" style=\"color: #cc99cc;\">EXPOSE<\/span> <span class=\"hljs-number\" style=\"color: #f99157;\">80\r\n\r\n<\/span><span style=\"color: #ffff00;\"># the Default command and the Command to start the app in our container<\/span>\r\nCMD [<span class=\"hljs-string\" style=\"color: #8abeb7;\">\"\/usr\/sbin\/apache2ctl\"<\/span>, <span class=\"hljs-string\" style=\"color: #8abeb7;\">\"-D\"<\/span>, <span class=\"hljs-string\" style=\"color: #8abeb7;\">\"FOREGROUND\"<\/span>]<\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2 id=\"Sec6\">The final Directory Structure of our working directory<\/h2>\n<p>If you are following along, you must have done everything perfect. Let us cross-validate how the work directory of mine ( \/apps\/docker\/MyTestApache) and yours look. They have to be similar<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #474949; color: #d1d9e1;\">aksarav<span class=\"hljs-variable\" style=\"color: #ffcc66;\">@middlewareinventory:<\/span>\/apps\/docker\/MyTestApache $ ls -rlt\r\ntotal <span class=\"hljs-number\" style=\"color: #f99157;\">24<\/span>\r\n-rw-r--r &#8211;  <span class=\"hljs-number\" style=\"color: #f99157;\">1<\/span> aksarav  wheel  <span class=\"hljs-number\" style=\"color: #f99157;\">447<\/span> Apr  <span class=\"hljs-number\" style=\"color: #f99157;\">9<\/span> <span class=\"hljs-number\" style=\"color: #f99157;\">04<\/span>:<span class=\"hljs-number\" style=\"color: #f99157;\">56<\/span> default-website.conf\r\n-rw-r--r &#8211;  <span class=\"hljs-number\" style=\"color: #f99157;\">1<\/span> aksarav  wheel  <span class=\"hljs-number\" style=\"color: #f99157;\">150<\/span> Apr  <span class=\"hljs-number\" style=\"color: #f99157;\">9<\/span> <span class=\"hljs-number\" style=\"color: #f99157;\">05<\/span>:<span class=\"hljs-number\" style=\"color: #f99157;\">14<\/span> index.html\r\n-rw-r--r &#8211;  <span class=\"hljs-number\" style=\"color: #f99157;\">1<\/span> aksarav  wheel  <span class=\"hljs-number\" style=\"color: #f99157;\">861<\/span> Apr  <span class=\"hljs-number\" style=\"color: #f99157;\">9<\/span> <span class=\"hljs-number\" style=\"color: #f99157;\">05<\/span>:<span class=\"hljs-number\" style=\"color: #f99157;\">14<\/span> Dockerfile<\/pre>\n<p>I have three files. From the Top, First One is a Virtual host conf file,\u00a0 Second on is the sample html page for our website, The Third is our Dockerfile.<\/p>\n<p>&nbsp;<\/p>\n<h2 id=\"Sec7\">Docker build image from Dockerfile<\/h2>\n<p>This is how to build an image from Dockerfile. The Dot at the last represents the current directory where our <code>Dockerfile<\/code> and Conf file is present.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #474949; color: #d1d9e1;\">aksarav@middlewareinventory:\/apps\/docker\/MyTestApache $ <span style=\"color: #ffff00;\">docker build -t myapacheimage .<\/span>\r\nSending build context to Docker daemon  4.608kB\r\nStep 1\/9 : FROM ubuntu:latest\r\n -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">94<\/span>e814e2efa8\r\n<\/span>Step 2\/9 : MAINTAINER Rumen Lishkov &lt;aksarav@middlewareinventory.com&gt;\r\n -<span class=\"ruby\">--&gt; Using cache\r\n<\/span> -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">2<\/span>f0926915836\r\n<\/span>Step 3\/9 : RUN apt-get update &amp;&amp; apt-get install -y apache2\r\n -<span class=\"ruby\">--&gt; Using cache\r\n<\/span> -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">22500023<\/span>dbf5\r\n<\/span>Step 4\/9 : RUN mkdir -p \/var\/www\/html\/devopsjunction\r\n -<span class=\"ruby\">--&gt; Running <span class=\"hljs-keyword\" style=\"color: #cc99cc;\">in<\/span> <span class=\"hljs-number\" style=\"color: #f99157;\">44461<\/span>ebbce5d\r\n<\/span>Removing intermediate container 44461ebbce5d\r\n -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">40<\/span>f424249d6e\r\n<\/span>Step 5\/9 : ADD default-website.conf \/etc\/apache2\/sites-available\/\r\n -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">41<\/span>d51868ae15\r\n<\/span>Step 6\/9 : ADD index.html \/var\/www\/html\/devopsjunction\r\n -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">8<\/span>cf1ad5a3c6e\r\n<\/span>Step 7\/9 : RUN chown root:root \/etc\/apache2\/sites-available\/000-default.conf\r\n -<span class=\"ruby\">--&gt; Running <span class=\"hljs-keyword\" style=\"color: #cc99cc;\">in<\/span> <span class=\"hljs-number\" style=\"color: #f99157;\">7<\/span>e81639c8b8d\r\n<\/span>Removing intermediate container 7e81639c8b8d\r\n -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">03<\/span>f3c6e6776b\r\n<\/span>Step 8\/9 : EXPOSE 80\r\n -<span class=\"ruby\">--&gt; Running <span class=\"hljs-keyword\" style=\"color: #cc99cc;\">in<\/span> cdf2ee0b0b4c\r\n<\/span>Removing intermediate container cdf2ee0b0b4c\r\n -<span class=\"ruby\">--&gt; <span class=\"hljs-number\" style=\"color: #f99157;\">7607<\/span>f782e0f9\r\n<\/span>Step 9\/9 : CMD [\"\/usr\/sbin\/apache2ctl\", \"-D\", \"FOREGROUND\"]\r\n -<span class=\"ruby\">--&gt; Running <span class=\"hljs-keyword\" style=\"color: #cc99cc;\">in<\/span> <span class=\"hljs-number\" style=\"color: #f99157;\">63<\/span>cc0be0cff8\r\n<\/span>Removing intermediate container 63cc0be0cff8\r\n -<span class=\"ruby\">--&gt; ba185e532252\r\n<\/span>Successfully built ba185e532252\r\nSuccessfully tagged myapacheimage:latest<\/pre>\n<p>Now let us see how to verify if the image is created<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2 id=\"Sec8\">how to list the available docker images?<\/h2>\n<p>use <code>docker images<\/code> command to list the available docker images in your host<\/p>\n<p>If you want to specifically look out for an image by its name. use <code><em>docker image ls &lt;imagename&gt;<\/em><\/code> command as follows<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #474949; color: #d1d9e1;\">aksarav<span class=\"hljs-variable\" style=\"color: #ffcc66;\">@middlewareinventory:<\/span>\/apps\/docker\/MyTestApache $ docker image ls myapacheimage\r\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\r\nmyapacheimage       latest              ba185e532252        <span class=\"hljs-number\" style=\"color: #f99157;\">22<\/span> minutes ago      <span class=\"hljs-number\" style=\"color: #f99157;\">210<\/span>MB<\/pre>\n<p>&nbsp;<\/p>\n<h2 id=\"Sec9\">Docker run image &#8211; Run the Image and create a container from it<\/h2>\n<p>Now we are going to create a container from the image we have created. the command we have to use to create and start the container from the image is as follows.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #474949; color: #d1d9e1;\">aksarav<span class=\"hljs-variable\" style=\"color: #ffcc66;\">@middlewareinventory:<\/span>\/apps\/docker\/MyTestApache $ <span style=\"color: #ffff00;\">docker run\u00a0 -d -p <span class=\"hljs-number\">8080<\/span>:<span class=\"hljs-number\">80<\/span> myapacheimage<\/span> \r\n<span class=\"hljs-number\" style=\"color: #f99157;\">2<\/span>b9d4f63503d5a9fa23ea49e4f96ed763b70749d3660942ad21a30508216afcb<\/pre>\n<p>here<\/p>\n<p><strong>-d<\/strong>\u00a0<strong>:<\/strong> is to run the container in the background<\/p>\n<p><strong>-p :\u00a0<\/strong>is to publish the Port 80 of the container to the 8080 port of the host so that we can access the website in our host browser( in my case MAC) so the URL<\/p>\n<p>Congratz. You have Successfully created a Container from the Image and as a by-product you have a working Apache2 Ubuntu Container.<\/p>\n<p>Since we have used the ServerName the Apache would listen only on www.devopsjunction.com. So I have made an entry in my \/etc\/hosts file like as follows<\/p>\n<p><code>127.0.0.1\u00a0 \u00a0www.devopsjunction.com<\/code><\/p>\n<p>After doing that I can actually reach my containerized Apache as shown in the following Snapshot.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-09-at-7.21.45-AM.png\"><img class=\"alignnone size-full wp-image-3240\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-09-at-7.21.45-AM.png\" alt=\"\" width=\"651\" height=\"104\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-09-at-7.21.45-AM.png 651w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-09-at-7.21.45-AM-300x48.png 300w\" sizes=\"(max-width: 651px) 100vw, 651px\" \/><\/a><\/p>\n<p><strong>To know how to run NODEJS into Docker. Refer the following post<\/strong><\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"nICOBYfeVv\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/\">Docker NodeJS Example &#8211; Run NodeJS on Docker | Devops Junction<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Docker NodeJS Example &#8211; Run NodeJS on Docker | Devops Junction&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/embed\/#?secret=nICOBYfeVv\" data-secret=\"nICOBYfeVv\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<h2>Video Guide \/ VLOG \/ Screen Casting<\/h2>\n<div class=\"lyte-wrapper\" style=\"width:640px;max-width:100%;margin:5px;\"><div class=\"lyMe\" id=\"WYL_hVBDd-okt3Q\"><div id=\"lyte_hVBDd-okt3Q\" data-src=\"\/\/i.ytimg.com\/vi\/hVBDd-okt3Q\/hqdefault.jpg\" class=\"pL\"><div class=\"tC\"><div class=\"tT\"><\/div><\/div><div class=\"play\"><\/div><div class=\"ctrl\"><div class=\"Lctrl\"><\/div><div class=\"Rctrl\"><\/div><\/div><\/div><noscript><a href=\"https:\/\/youtu.be\/hVBDd-okt3Q\"><img src=\"https:\/\/i.ytimg.com\/vi\/hVBDd-okt3Q\/0.jpg\" alt=\"\" width=\"640\" height=\"340\" \/><br \/>Watch this video on YouTube<\/a><\/noscript><\/div><\/div><div class=\"lL\" style=\"max-width:100%;width:640px;margin:5px;\"><\/div><\/p>\n<p>&nbsp;<\/p>\n<h3>References<\/h3>\n<p>Docker CLI Commands &#8211; <a href=\"https:\/\/docs.docker.com\/engine\/reference\/commandline\/docker\/\" target=\"_blank\" rel=\"noopener noreferrer\">https:\/\/docs.docker.com\/engine\/reference\/commandline\/docker\/<\/a><\/p>\n<p>Further Read On Docker &#8211; \u00a0<a href=\"https:\/\/www.docker.com\/\" target=\"_blank\" rel=\"noopener noreferrer\">https:\/\/www.docker.com\/<\/a><\/p>\n<p>&nbsp;<\/p>\n<p>Hope this helps.<\/p>\n<p>Rate this article [ratings]<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577430\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"3232\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577430\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577430\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to see how to create an image and run the image as a container and manage it. Before we proceed further, it is indispensable, that we are aware of what is an Image and What is a Container. So let us begin from there.[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":3243,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[152],"tags":[258,253,255,252,259,257,254,256],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Docker Run Image as Container - Create Container From Docker Image | DevOps Junction<\/title>\n<meta name=\"description\" content=\"docker run image example, How to Create and Run Docker Images as a container. How to Create a Container from the Dockerfile or docker images example. How to Run Apache HTTPD web server into Docker Container. Docker Image example. Dockerfile example. How to write Dockerfile example. How to use Dockerfile example.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Docker Run Image as Container - Create Container From Docker Image | DevOps Junction\" \/>\n<meta property=\"og:description\" content=\"docker run image example, How to Create and Run Docker Images as a container. How to Create a Container from the Dockerfile or docker images example. How to Run Apache HTTPD web server into Docker Container. Docker Image example. Dockerfile example. How to write Dockerfile example. How to use Dockerfile example.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-04-09T02:16:49+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T05:58:55+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-09-at-7.31.14-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"890\" \/>\n\t<meta property=\"og:image:height\" content=\"661\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-09-at-7.31.14-AM.png\",\"width\":890,\"height\":661},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/\",\"name\":\"Docker Run Image as Container - Create Container From Docker Image | DevOps Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#primaryimage\"},\"datePublished\":\"2019-04-09T02:16:49+00:00\",\"dateModified\":\"2022-06-19T05:58:55+00:00\",\"description\":\"docker run image example, How to Create and Run Docker Images as a container. How to Create a Container from the Dockerfile or docker images example. How to Run Apache HTTPD web server into Docker Container. Docker Image example. Dockerfile example. How to write Dockerfile example. How to use Dockerfile example.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Docker Run Image as Container &#8211; Create Container From Docker Image\",\"datePublished\":\"2019-04-09T02:16:49+00:00\",\"dateModified\":\"2022-06-19T05:58:55+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#primaryimage\"},\"keywords\":\"create image from docker file,deploy apache in docker container,docker and apache container,docker apache example,docker run image,how to run docker image,run apache2 in docker,webserver in apache example\",\"articleSection\":\"Docker\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3232"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=3232"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3232\/revisions"}],"predecessor-version":[{"id":8696,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3232\/revisions\/8696"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/3243"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=3232"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=3232"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=3232"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}