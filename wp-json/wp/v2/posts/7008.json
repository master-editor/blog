{"id":7008,"date":"2021-06-27T10:11:02","date_gmt":"2021-06-27T04:41:02","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=7008"},"modified":"2022-04-19T08:23:35","modified_gmt":"2022-04-19T02:53:35","slug":"ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/","title":{"rendered":"SSL Expiry and Uptime Monitor for URLs &#8211; Prometheus Blackbox | Grafana"},"content":{"rendered":"<p>In this article, we are going to see how to monitor your web services or URLs for their SSL expiry and uptime.<\/p>\n<p>You can consider this as your SSL certificate expiry monitor and web service uptime monitor or URL Health check monitor for all your web services (URLs)<\/p>\n<p>These are the set of tools we are going to need<\/p>\n<ul>\n<li>Prometheus<\/li>\n<li>Prometheus Blackbox ( exporter for URL monitoring )<\/li>\n<li>alert manager ( for creating alerts )<\/li>\n<li>Grafana ( for visualization )<\/li>\n<li>Slack (for alerts and notifications )<\/li>\n<\/ul>\n<p>We can go ahead and install all these tools on our chosen server. I am taking Centos7 but you can choose any Linux or windows as per your choice.<\/p>\n<p>It is a lengthy article but do not be frightened. the result is going to be a milestone and solve some real problems.<\/p>\n<p>this is what your end goal is going to look like. ( for some motivation )<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg\"><img class=\"post-img alignnone wp-image-7029 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg\" alt=\"Grafana URL and SSL monitor\" width=\"2560\" height=\"1380\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg 2560w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-300x162.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-1024x552.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-768x414.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-1536x828.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-2048x1104.jpg 2048w\" sizes=\"(max-width: 2560px) 100vw, 2560px\" \/><\/a><\/p>\n<p>And this is how your SSL certificate expiry alert is going to look like in SLACK<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM.png\"><img class=\"alignnone size-full wp-image-7033\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM.png\" alt=\"\" width=\"1506\" height=\"418\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM.png 1506w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM-300x83.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM-1024x284.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM-768x213.png 768w\" sizes=\"(max-width: 1506px) 100vw, 1506px\" \/><\/a><\/p>\n<p>This is how your URL uptime monitor alert is going to look like<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-27-at-9.54.15-AM.png\"><img class=\"alignnone size-full wp-image-7036\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-27-at-9.54.15-AM.png\" alt=\"uptime slack alert prometheus\" width=\"1510\" height=\"402\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-27-at-9.54.15-AM.png 1510w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-27-at-9.54.15-AM-300x80.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-27-at-9.54.15-AM-1024x273.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-27-at-9.54.15-AM-768x204.png 768w\" sizes=\"(max-width: 1510px) 100vw, 1510px\" \/><\/a><\/p>\n<p>I can sense that you are already excited. Let&#8217;s go ahead and get this setup done with no further ado.<\/p>\n<p>&nbsp;<\/p>\n<h2>Download links<\/h2>\n<ul>\n<li>Prometheus and Blackbox exporter, alert manager &#8211; Download <a href=\"https:\/\/prometheus.io\/download\/\">here<\/a><\/li>\n<li>Grafana &#8211; Download <a href=\"https:\/\/grafana.com\/grafana\/download\">here<\/a><\/li>\n<\/ul>\n<h2><\/h2>\n<h2>Prometheus Installation<\/h2>\n<p>once you have downloaded the binaries for your distribution, you just need to extract\/untar to install.<\/p>\n<p>I have used <code>\/opt\/prometheus<\/code> as my base directory to install Prometheus.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-linenumbers=\"false\" data-enlighter-theme=\"bootstrap4\">[vagrant@ip-172-45-68-92 \/opt\/prometheus ]$ ls -lrt\r\ntotal 161676\r\n-rwxr-xr-x 1 3434 3434 87729971 Oct 15  2020 prometheus\r\n-rwxr-xr-x 1 3434 3434 77801407 Oct 15  2020 promtool\r\n-rw-r--r &#8211; 1 3434 3434      926 Oct 15  2020 prometheus.yml\r\ndrwxr-xr-x 2 3434 3434      173 Oct 15  2020 consoles\r\ndrwxr-xr-x 2 3434 3434       38 Oct 15  2020 console_libraries\r\n-rw-r--r &#8211; 1 3434 3434     3420 Oct 15  2020 NOTICE\r\n-rw-r--r &#8211; 1 3434 3434    11357 Oct 15  2020 LICENSE\r\ndrwxr-xr-x 4 root root       70 Nov  5  2020 data<\/pre>\n<p>you will see a list of files like shown above.<\/p>\n<p>the primary configuration file is <code>Prometheus.yml<\/code> which we need to update later.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Alert Manager installation<\/h2>\n<p>Like Prometheus, an alert manager is also distributed as a tar.gz file. you can extract it into any directory<\/p>\n<p>in my case it is <code>\/opt\/alertmanager<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-linenumbers=\"false\" data-enlighter-theme=\"bootstrap4\">[root@ip-172-45-68-92 \/opt\/alertmanager]# ls -lrt\r\ntotal 47788\r\n-rwxr-xr-x 1 3434 3434 27074026 Jun  2 07:51 alertmanager\r\n-rwxr-xr-x 1 3434 3434 21839682 Jun  2 07:52 amtool\r\n-rw-r--r &#8211; 1 3434 3434      457 Jun  2 07:56 NOTICE\r\n-rw-r--r &#8211; 1 3434 3434    11357 Jun  2 07:56 LICENSE\r\n-rw-r--r &#8211; 1 3434 3434      348 Jun  2 07:56 alertmanager.yml<\/pre>\n<p>you will see a set of files and <code>alertmanager.yml<\/code> is the primary configuration file which we will update later.<\/p>\n<p>&nbsp;<\/p>\n<h2>Blackbox Exporter Installation<\/h2>\n<p>Just like the other two previous installations, we need to extract the binaries of BlackBox into a directory<\/p>\n<p>in my case it is <code>\/opt\/blackbox<\/code><\/p>\n<p>upon extracting you will see a list of files like this<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-linenumbers=\"false\" data-enlighter-theme=\"bootstrap4\">[root@ip-172-45-68-92 \/opt\/blackbox]# ls -lrt\r\ntotal 17812\r\n-rwxr-xr-x 1 3434 3434 18217362 May 10 12:57 blackbox_exporter\r\n-rw-r--r &#8211; 1 3434 3434       94 May 10 13:04 NOTICE\r\n-rw-r--r &#8211; 1 3434 3434    11357 May 10 13:04 LICENSE\r\n-rw-r--r &#8211; 1 3434 3434      672 May 10 13:04 blackbox.yml\r\n[root@ip-172-45-68-92 blackbox]#<\/pre>\n<p>in this <code>blackbox.yml<\/code> is the primary configuration file<\/p>\n<h2><\/h2>\n<h2>Change the ownership<\/h2>\n<p>After extracting\/installing, you can see the ownership of these files is set to some numeric user.<\/p>\n<p>You have to change the ownership of these installation directories to your desired user.<\/p>\n<p>you can either create individual accounts for products like <code>prometheus<\/code>\u00a0 , <code>blackbox<\/code> etc.<\/p>\n<p>but I don&#8217;t see any issues in running these products as a <code>root<\/code>\u00a0 so am changing the ownership of all these directories and their contents to <code>root<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">chown -R root:root \/opt\/prometheus\r\nchown -R root:root \/opt\/blackbox\r\nchown -R root:root \/opt\/alertmanager<\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Create Services for the tools<\/h2>\n<p>Now, as we have installed the three tools <code>promethues, blackbox exporter, alert manager<\/code> we can go ahead and start them.<\/p>\n<p>the proper way to start these tools is with a service and it can be set up by creating a <code>.service<\/code> file under <code>\/etc\/systemd\/system<\/code><\/p>\n<p>you have to create three files<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">touch prometheus.service\r\ntouch alertmanager.service\r\ntouch blackbox.service<\/pre>\n<p>once the files are created, you can open the files with <code>vi<\/code> or <code>nano<\/code> and update the contents<\/p>\n<p>I have used <code>root<\/code> as a service user. if you have individual accounts created for these services you can update the <code>User<\/code> variable on the file before copying<\/p>\n<h3>Prometheus.service file<\/h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">[Unit]\r\nDescription=Promethues\r\nAfter=network.target\r\n\r\n[Service]\r\nType=simple\r\nExecStart=\/opt\/prometheus\/prometheus &#8211; config.file=\/opt\/prometheus\/prometheus.yml\r\nTimeoutStartSec=0\r\nUser=root<\/pre>\n<p>&nbsp;<\/p>\n<h3>alertmanager.service file<\/h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">[Unit]\r\nDescription=AlertManager\r\nAfter=network.target\r\n\r\n[Service]\r\nType=simple\r\nExecStart=\/opt\/alertmanager\/alertmanager &#8211; config.file=\/opt\/alertmanager\/alertmanager.yml\r\nTimeoutStartSec=0\r\nUser=root<\/pre>\n<p>&nbsp;<\/p>\n<h3>BlackBox.service file<\/h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">[Unit]\r\nDescription=Blackbox\r\nAfter=network.target\r\n\r\n[Service]\r\nType=simple\r\nExecStart=\/opt\/blackbox\/blackbox_exporter &#8211; config.file=\/opt\/blackbox\/blackbox.yml\r\nTimeoutStartSec=0\r\nUser=root<\/pre>\n<p>&nbsp;<\/p>\n<h3>Enable Services at boot<\/h3>\n<p>As you have created the service you can enable them to start at boot. as a startup script.<\/p>\n<p>You can do this simply by enabling them using <code>systemctl<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">systemctl enable prometheus.service\r\nsystemctl enable blackbox.service\r\nsystemctl enable alertmanager.service<\/pre>\n<p>&nbsp;<\/p>\n<h2>Starting Prometheus, Alertmanager, blackbox<\/h2>\n<p>Now you can go ahead and start the service with the default configuration and validate if they can start properly.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">sudo service prometheus start\r\nsudo service alertmanager start\r\nsudo service blackbox start<\/pre>\n<p>you can use <code>ps -eaf<\/code> or <code>service status<\/code> commands to validate if the services are running fine<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Validate Prometheus UI<\/h2>\n<p>Now validate, if the Prometheus UI is up and running on port 9090<\/p>\n<p>you can use curl<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">curl http:\/\/localhost:9090\/graph<\/pre>\n<p>or you can reach from the external world if your security group and firewall allows it<\/p>\n<p>for centos users, you need to additionally enable the port on firewall-cmd <code><\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\"># to add a new port to public zone\r\n$ sudo firewall-cmd &#8211; zone=public &#8211; permanent &#8211; add-port=9090\/tcp\r\n\r\n# to reload the configuration for the changes to take effect\r\n$ sudo firewall-cmd &#8211; reload\r\n\r\n# to validate if the port is added\r\n$ sudo firewall-cmd &#8211; list-all<\/pre>\n<p>the UI looks like this without any graphs<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.18.48-AM.png\"><img class=\"post-img alignnone wp-image-7010 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.18.48-AM.png\" alt=\"Prometheus UI\" width=\"1984\" height=\"1260\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.18.48-AM.png 1984w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.18.48-AM-300x191.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.18.48-AM-1024x650.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.18.48-AM-768x488.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.18.48-AM-1536x975.png 1536w\" sizes=\"(max-width: 1984px) 100vw, 1984px\" \/><\/a><\/p>\n<h2><\/h2>\n<h2>Configuring Prometheus<\/h2>\n<p>At this stage, we have installed all the necessary tools and validated the UI.<\/p>\n<p>Now let&#8217;s configure Prometheus to work with the alert manager and BlackBox exporter.<\/p>\n<p>Prometheus is well known for its <code>pull<\/code> strategy and it pulls the metrics from various exporters and it has proven to be scalable and efficient in certain cases.<\/p>\n<p>If you are having questions about why the pull approach is being used by Prometheus <a href=\"https:\/\/prometheus.io\/blog\/2016\/07\/23\/pull-does-not-scale-or-does-it\/\">read this article<\/a><\/p>\n<p>Our first objective is to make Prometheus pull metrics from <code>blackbox<\/code> exporter<\/p>\n<h3><\/h3>\n<h3>Creating BlackBox job in Prometheus<\/h3>\n<p>Go to the installation directory of our Prometheus\u00a0 in my case it is <code>\/opt\/prometheus<\/code> and edit the <code>prometheus.yml<\/code> file<\/p>\n<p>under <code>scrape_configs<\/code> add a new job\u00a0 named <code>blackbox<\/code> with the following snippet<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">- job_name: 'blackbox'\r\n  metrics_path: \/probe\r\n  params:\r\n   module: [http_2xx] # Look for a HTTP 200 response.\r\n  static_configs:\r\n  - targets:\r\n     - https:\/\/gritfy.com\r\n     - https:\/\/www.google.com\r\n     - https:\/\/middlewareinventory.com\r\n     - https:\/\/devopsjunction.com\r\n  relabel_configs:\r\n    - source_labels: [__address__]\r\n      target_label: __param_target\r\n    - source_labels: [__param_target]\r\n      target_label: instance\r\n    - target_label: __address__\r\n      replacement: 127.0.0.1:9115<\/pre>\n<p>you can change the URLs of your choice. but the <code>relabel_configs<\/code> should remain the same.<\/p>\n<h3><span style=\"color: #003366;\">Validate the configuration before Applying &#8211; promtool<\/span><\/h3>\n<p>As we have made changes in <code>prometheus.yml<\/code> file.\u00a0 It is always recommended to validate it before and restarting or reloading Prometheus<\/p>\n<p>Prometheus comes with a tool named <code>promtool<\/code> which is available on the same directory where you have installed Prometheus<\/p>\n<p>in my case it is <code>\/opt\/prometheus<\/code><\/p>\n<p>you can run the <code>promtool check config<\/code> command to validate the file.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">[root@ip-172-45-68-92 ]$ \/opt\/prometheus\/promtool check config \/opt\/prometheus\/prometheus.yml\r\nChecking \/opt\/prometheus\/prometheus.yml\r\n  SUCCESS: 0 rule files found<\/pre>\n<p>In case of no errors found. you will see <code>SUCCESS<\/code> a message like above.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Configuring Blackbox exporter<\/h2>\n<p>the default BlackBox is designed to support <code>ipv6<\/code> which could create issues when we are using non <code>ipv6<\/code> targets or system<\/p>\n<p>So it is recommended to go with <code>ipv4<\/code> for now.<\/p>\n<p>In this step, we are going to update the default <code>blackbox.yml<\/code> configuration with <code>ipv4<\/code> preference<\/p>\n<p>we are going to add these two lines in the <code>http<\/code> probe<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">http:\r\n     preferred_ip_protocol: ip4<\/pre>\n<p>Here is the full configuration file for your reference. you can copy this and paste it to your blackbox.yml file.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">modules:\r\n  http_2xx:\r\n    prober: http\r\n    http:\r\n     preferred_ip_protocol: ip4\r\n  http_post_2xx:\r\n    prober: http\r\n    http:\r\n      method: POST\r\n  tcp_connect:\r\n    prober: tcp\r\n  pop3s_banner:\r\n    prober: tcp\r\n    tcp:\r\n      query_response:\r\n      - expect: \"^+OK\"\r\n      tls: true\r\n      tls_config:\r\n        insecure_skip_verify: false\r\n  ssh_banner:\r\n    prober: tcp\r\n    tcp:\r\n      query_response:\r\n      - expect: \"^SSH-2.0-\"\r\n      - send: \"SSH-2.0-blackbox-ssh-check\"\r\n  irc_banner:\r\n    prober: tcp\r\n    tcp:\r\n      query_response:\r\n      - send: \"NICK prober\"\r\n      - send: \"USER prober prober prober :prober\"\r\n      - expect: \"PING :([^ ]+)\"\r\n        send: \"PONG ${1}\"\r\n      - expect: \"^:[^ ]+ 001\"\r\n  icmp:<\/pre>\n<p>&nbsp;<\/p>\n<h2>Restart Blackbox and Prometheus and Validate<\/h2>\n<p>Now it is time to restart our <code>blackbox<\/code> and <code>prometheus<\/code> as we have made changes to the configuration files of both.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">sudo service prometheus restart\r\nsudo service blackbox restart<\/pre>\n<p>Before we try to access the BlackBox and Prometheus UI interface.<\/p>\n<p>we can validate if the ports are listening for both services.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"shell\" data-enlighter-linenumbers=\"false\"># with ss command\r\n[root@ip-172-45-68-92 blackbox]$ ss -tunlp|egrep '9115|9090'\r\ntcp    LISTEN     0      128    [::]:9115               [::]:*                   users:((\"blackbox_export\",pid=4548,fd=3))\r\ntcp    LISTEN     0      128    [::]:9090               [::]:*                   users:((\"prometheus\",pid=3302,fd=10))\r\n\r\n# with netstat \r\n[root@ip-172-45-68-92 blackbox]$ netstat -tunlp|egrep '9115|9090'\r\ntcp6       0      0 :::9115                 :::*                    LISTEN      4548\/blackbox_expor\r\ntcp6       0      0 :::9090                 :::*                    LISTEN      3302\/prometheus<\/pre>\n<p>as you can see we are validating if the ports <code>9115<\/code> (blackbox_exporter) and <code>9090<\/code> (Prometheus) are listening.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-8.08.30-AM.png\"><img class=\"post-img alignnone wp-image-7014 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-8.08.30-AM.png\" alt=\"blackbox exporter\" width=\"1212\" height=\"1078\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-8.08.30-AM.png 1212w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-8.08.30-AM-300x267.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-8.08.30-AM-1024x911.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-8.08.30-AM-768x683.png 768w\" sizes=\"(max-width: 1212px) 100vw, 1212px\" \/><\/a><\/p>\n<p>For some reason, if the black box exporter not able to reach the target.\u00a0 the result would be marked as <code>Failure<\/code><\/p>\n<p>you can use the corresponding <code>Logs<\/code> to investigate the Failure.<\/p>\n<p>Now let us validate Prometheus and see if these targets are showing up, by going to <code>http:\/\/server_name:9090\/targets<\/code><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM.png\"><img class=\"post-img alignnone wp-image-7015 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM.png\" alt=\"prometheus blackbox\" width=\"3336\" height=\"1538\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM.png 3336w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM-300x138.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM-1024x472.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM-768x354.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM-1536x708.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-10.56.29-AM-2048x944.png 2048w\" sizes=\"(max-width: 3336px) 100vw, 3336px\" \/><\/a><\/p>\n<p>you can see our URLs in <code>target<\/code> and as an <code>instance<\/code><\/p>\n<p>the <code>State<\/code> will be marked as down in case of failure to reach the target.<\/p>\n<p>&nbsp;<\/p>\n<h2>Creating Graphs in Prometheus based on metrics of our URLs<\/h2>\n<p>In Prometheus UI, click on <code>graph<\/code> menu and choose any of the probes on the query block. for example <code>probe_http_duration_seconds<\/code> and click on Execute<\/p>\n<p>you will see some graph given below.<\/p>\n<p><strong><em><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM.png\"><img class=\"post-img alignnone wp-image-7016 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM.png\" alt=\"Prometheus Graph\" width=\"3792\" height=\"1954\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM.png 3792w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM-300x155.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM-1024x528.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM-768x396.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM-1536x791.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-11.20.48-AM-2048x1055.png 2048w\" sizes=\"(max-width: 3792px) 100vw, 3792px\" \/><\/a><\/em><\/strong><\/p>\n<p>you can try different probes and try to create graphs of your interest.<\/p>\n<p>Now we are successfully monitoring our web services (URLs)<\/p>\n<h2><\/h2>\n<h2>Configuring Alerts and Rules in Prometheus<\/h2>\n<p>As part of Alert triggering, we are going to setup alerts for two scenarios<\/p>\n<ul>\n<li>SSLCertExpiringSoon ( with in 4 days )<\/li>\n<li>TargetUrlDown (Endpoint down or returning invalid response)<\/li>\n<\/ul>\n<p>To generate alerts we need to create rules in Prometheus first.<\/p>\n<p>If the rules are satisfied <code>Prometheus<\/code> would send the alert to <code>AlertManager<\/code> which can further be sent as <code>email<\/code> or <code>slack<\/code> notifications<\/p>\n<p>Perform the following steps to create a new rule<\/p>\n<h3>Create a new Rule file<\/h3>\n<p>Go to Prometheus installation directory i.e <code>\/opt\/prometheus<\/code> and create a new directory named <code>rules<\/code><\/p>\n<p>under rules directory. create a new file named <code>blackbox-rules.yml<\/code><\/p>\n<p>copy the following content and paste it.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">groups:\r\n  - name: Blackbox rules\r\n    rules:\r\n      - alert: SSLCertExpiringSoon\r\n        expr: probe_ssl_earliest_cert_expiry - time() &lt; 86400 * 4\r\n        for: 1m\r\n        labels:\r\n          severity: warning\r\n        annotations:\r\n          description: \"TLS certificate will expire in {{ $value | humanizeDuration }} (instance {{ $labels.instance }})\"\r\n\r\n      - alert: EndpointDown\r\n        expr: probe_success == 0\r\n        for: 10m\r\n        labels:\r\n          severity: \"critical\"\r\n        annotations:\r\n          summary: \"Endpoint {{ $labels.instance }} down\"<\/pre>\n<p>As you can see in the preceding snippet, we are having two alerts defined <code>SSLCertExpiry<\/code> and <code>EndPoint<\/code> down.<\/p>\n<p>both of these alerts takes black box probes as the source data<\/p>\n<p>SSLCert Expiry alert is using <code>probe_ssl_earliest_cert_expiry<\/code> and Endpoint down uses <code>probe_success<\/code><\/p>\n<p>for the SSL Cert Expiry: If the earliest cert expiry value is below\u00a0 <code>86400 * 4<\/code> \u00a0 <strong>4 days<\/strong> it would trigger an alert.<\/p>\n<p>If you want to increase the number of days. you can change <code>4<\/code> to the number of days of your choice.<\/p>\n<p>Here, 86400 represents the seconds in a day <code>24 hours = 86400 seconds<\/code><\/p>\n<p>Now let us map this rule into Prometheus configuration<\/p>\n<p>&nbsp;<\/p>\n<h3>Adding a rule into prometheus.yml<\/h3>\n<p>the rule file can now be added into our <code>prometheus.yml<\/code> configuration file<\/p>\n<p>under the <code>rule_files<\/code> add our recently created rule filename <code>rules\/blackbox-rules.yml<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">rule_files:\r\n   - \"rules\/blackbox-rules.yml\"<\/pre>\n<p>&nbsp;<\/p>\n<h3>Enabling the alert manager in prometheus.yml<\/h3>\n<p>While you are adding new rules. you have to also enable the <code>alertmanager<\/code> configuration which is disabled by default<\/p>\n<p>It should point to the <code>localhost:9093<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\"># Alertmanager configuration\r\nalerting:\r\n  alertmanagers:\r\n  - static_configs:\r\n    - targets:\r\n       - localhost:9093<\/pre>\n<p>&nbsp;<\/p>\n<p>The Final prometheus.yml file with alert manager and rules<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\"># my global config\r\nglobal:\r\n  scrape_interval:     120s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\r\n  evaluation_interval: 120s # Evaluate rules every 15 seconds. The default is every 1 minute.\r\n  # scrape_timeout is set to the global default (10s).\r\n\r\n# Alertmanager configuration\r\nalerting:\r\n  alertmanagers:\r\n  - static_configs:\r\n    - targets:\r\n       - localhost:9093\r\n\r\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\r\nrule_files:\r\n   - \"rules\/blackbox-rules.yml\"\r\n\r\n# A scrape configuration containing exactly one endpoint to scrape:\r\n# Here it's Prometheus itself.\r\nscrape_configs:\r\n  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\r\n  - job_name: 'prometheus'\r\n\r\n    # metrics_path defaults to '\/metrics'\r\n    # scheme defaults to 'http'.\r\n\r\n    static_configs:\r\n    - targets: ['localhost:9090']\r\n\r\n  - job_name: 'blackbox'\r\n    metrics_path: \/probe\r\n    params:\r\n     module: [http_2xx] # Look for a HTTP 200 response.\r\n    static_configs:\r\n    - targets:\r\n       - https:\/\/gritfy.com\r\n       - https:\/\/www.google.com\r\n       - https:\/\/middlewareinventory.com\r\n       - https:\/\/devopsjunction.com\r\n    relabel_configs:\r\n      - source_labels: [__address__]\r\n        target_label: __param_target\r\n      - source_labels: [__param_target]\r\n        target_label: instance\r\n      - target_label: __address__\r\n        replacement: 127.0.0.1:9115<\/pre>\n<p>&nbsp;<\/p>\n<h3>Validate the rule file and prometheus.yml with promtool<\/h3>\n<p>Now after making the changes, you can re-launch the <code>promtool<\/code> to validate<\/p>\n<p>You should see <code>SUCCESS<\/code> and the number of rules displayed as shown below<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">root@ip-172-45-68-92 ]# \/opt\/prometheus\/promtool check config \/opt\/prometheus\/prometheus.yml\r\nChecking \/opt\/prometheus\/prometheus.yml\r\n  SUCCESS: 1 rule files found\r\n\r\nChecking \/opt\/prometheus\/rules\/blackbox-rules.yml\r\n  SUCCESS: 2 rules found<\/pre>\n<p>&nbsp;<\/p>\n<h2>Configuring Alertmanager &#8211; Adding Slack route<\/h2>\n<p>Now go to the alertmanager installation location and update the <code>alertmanager.yml<\/code> file with the following content.<\/p>\n<p>Make sure you update the <code>slack_api_url<\/code> and the <code>channel<\/code> name according to your requirement.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">global:\r\n resolve_timeout: 1m\r\n slack_api_url: https:\/\/hooks.slack.com\/services\/THISISSAMPLE\/URI\r\n\r\nroute:\r\n receiver: 'slack-notifications'\r\n\r\nreceivers:\r\n- name: 'slack-notifications'\r\n  slack_configs:\r\n    - channel: '#devops'\r\n      send_resolved: true\r\n      icon_url: https:\/\/avatars3.githubusercontent.com\/u\/3380462\r\n      title: |-\r\n        [{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}\r\n        {{- if gt (len .CommonLabels) (len .GroupLabels) -}}\r\n          {{\" \"}}(\r\n          {{- with .CommonLabels.Remove .GroupLabels.Names }}\r\n            {{- range $index, $label := .SortedPairs -}}\r\n              {{ if $index }}, {{ end }}\r\n              {{- $label.Name }}=\"{{ $label.Value -}}\"\r\n            {{- end }}\r\n          {{- end -}}\r\n          )\r\n        {{- end }}\r\n      text: &gt;-\r\n        @here Please check these alerts from Prometheus\r\n        {{ range .Alerts -}}\r\n        *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}\r\n\r\n        *Description:* {{ .Annotations.description }}\r\n\r\n        *Details:*\r\n          {{ range .Labels.SortedPairs }} \u2022 *{{ .Name }}:* `{{ .Value }}`\r\n          {{ end }}\r\n        {{ end }}<\/pre>\n<p>to know how to <a href=\"https:\/\/api.slack.com\/messaging\/webhooks\">create slack webhooks<\/a> <a href=\"https:\/\/api.slack.com\/messaging\/webhooks\">refer to this article<\/a><\/p>\n<p>&nbsp;<\/p>\n<p>Now you can restart the <code>alert manager<\/code> service<\/p>\n<p>validate if all the ports are open and the services are listening using <code>ss<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">[root@ip-172-45-68-92 rules]# ss -tunlp|egrep '9115|9090|9093'\r\ntcp    LISTEN     0      128    [::]:9115               [::]:*                   users:((\"blackbox_export\",pid=7841,fd=3))\r\ntcp    LISTEN     0      128    [::]:9090               [::]:*                   users:((\"prometheus\",pid=8507,fd=9))\r\ntcp    LISTEN     0      128    [::]:9093               [::]:*                   users:((\"alertmanager\",pid=13439,fd=8))<\/pre>\n<p>&nbsp;<\/p>\n<p>To Generate some Dummy alerts and to check if the alertmanager is working and slack notifications are triggering.<\/p>\n<p>I have updated the <code>blackbox-rules.yml<\/code> file with 300 days instead of 4 days<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">- alert: SSLCertExpiringSoon\r\n        expr: probe_ssl_earliest_cert_expiry - time() &lt; 86400 * 300<\/pre>\n<h3><\/h3>\n<h3>Validate the Rules in Prometheus UI<\/h3>\n<p>Go to <code>http:\/\/serverip:9090\/rules<\/code> to validate the rules<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-scaled.jpg\"><img class=\"post-img alignnone wp-image-7019 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-scaled.jpg\" alt=\"rules prometheus\" width=\"2560\" height=\"977\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-scaled.jpg 2560w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-300x115.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-1024x391.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-768x293.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-1536x586.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.18-PM-2048x782.jpg 2048w\" sizes=\"(max-width: 2560px) 100vw, 2560px\" \/><\/a><\/p>\n<h3>Validate the Alerts in Prometheus UI<\/h3>\n<p>Go to <code>http:\/\/serverip:9090\/alerts<\/code> to see the alerts triggering<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM.png\"><img class=\"post-img alignnone wp-image-7020 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM.png\" alt=\"prometheus alerts\" width=\"3836\" height=\"1424\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM.png 3836w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM-300x111.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM-1024x380.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM-768x285.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM-1536x570.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-1.16.28-PM-2048x760.png 2048w\" sizes=\"(max-width: 3836px) 100vw, 3836px\" \/><\/a><\/p>\n<h3>Validate your Slack Channel for notification<\/h3>\n<p>If you have done everything right, you should see a message in your configured slack channel.<\/p>\n<p>as per my <code>alertmanager.yml<\/code> configuration it is <code>devops<\/code> channel<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM.png\"><img class=\"post-img alignnone wp-image-7033 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM.png\" alt=\"Slack Alert Prometheus\" width=\"1506\" height=\"418\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM.png 1506w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM-300x83.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM-1024x284.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.40.44-PM-768x213.png 768w\" sizes=\"(max-width: 1506px) 100vw, 1506px\" \/><\/a><\/p>\n<p>you can customize the message or the icons as per your need.<\/p>\n<p>so we have met our objective of setting up a URL uptime and SSL expiry monitor.<\/p>\n<p>There is one more missing piece which is visualizing our victory. with Grafana.<\/p>\n<p>&nbsp;<\/p>\n<h2>Installing Grafana<\/h2>\n<p>you can download Grafana from <a href=\"https:\/\/grafana.com\/grafana\/download\">here<\/a> and install on the same system where our other three products are running<\/p>\n<p>Or simply you can type <code>yum install grafana<\/code> that would take care installing Grafana<\/p>\n<p>start <code>grafana-server<\/code>by issuing the following commands<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">sudo systemctl daemon-reload \r\nsudo systemctl start grafana-server \r\nsudo systemctl status grafana-server<\/pre>\n<p>the <code>status<\/code> command would show you the status the location of the configuration <code>ini<\/code> file<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">[root@ip-172-45-68-92 system]# systemctl status grafana-server\r\n\u25cf grafana-server.service - Grafana instance\r\n   Loaded: loaded (\/usr\/lib\/systemd\/system\/grafana-server.service; enabled; vendor preset: disabled)\r\n   Active: active (running) since Sat 2021-06-26 12:28:06 UTC; 2min 33s ago\r\n     Docs: http:\/\/docs.grafana.org\r\n Main PID: 28798 (grafana-server)\r\n   CGroup: \/system.slice\/grafana-server.service\r\n           \u2514\u250028798 \/usr\/sbin\/grafana-server &#8211; config=\/etc\/grafana\/grafana.ini &#8211; pidfile=\/var\/run\/grafana\/grafana-server.pid &#8211; pa...\r\n\r\nJun 26 12:28:06 ip-172-45-68-92 grafana-server[28798]: t=2021-06-26T12:28:06+0000 lvl=info msg=\"Executing migration\" logger...kind\"\r\nJun 26 12:28:06 ip-172-45-68-92 grafana-server[28798]: t=2021-06-26T12:28:06+0000 lvl=info msg=\"Executing migration\" logger...e v1\"\r\nJun 26 12:28:06 ip-172-45-68-92 grafana-server[28798]: t=2021-06-26T12:28:06+0000 lvl=info msg=\"Executing migration\" logger...n_id\"\r\nJun 26 12:28:06 ip-172-45-68-92 grafana-server[28798]: t=2021-06-26T12:28:06+0000 lvl=info msg=\"migrations completed\" logge...457ms<\/pre>\n<p>&nbsp;<\/p>\n<p>enable grafana-server as a service to start at boot by issuing the following command<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">sudo systemctl enable grafana-server<\/pre>\n<p>Now try to reach grafana UI and Login<\/p>\n<ol>\n<li>Open your web browser and go to http:\/\/localhost:3000\/. The default HTTP port that Grafana listens to is <code>3000<\/code> unless you have configured a different port.<\/li>\n<li>On the login page, enter <code>admin<\/code> for username and password.<\/li>\n<li>Click <strong>Log in<\/strong>. If login is successful, then you will see a prompt to change the password.<\/li>\n<li>Click <strong>OK<\/strong> on the prompt, then change your password.<\/li>\n<\/ol>\n<p>Once logged in let us create a new dashboard.<\/p>\n<ol>\n<li>Go to dashboards by clicking on the <code>Dashboards<\/code> option on the left navigation menu<\/li>\n<li>Click on <code>Manage<\/code><\/li>\n<li>Click on <code>Import<\/code><\/li>\n<li>Enter the number <code>7587<\/code> on the text box under import via grafana.com and click on Load<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.09.25-PM.png\"><img class=\"alignnone wp-image-7028 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.09.25-PM.png\" alt=\"Grafana Import\" width=\"1614\" height=\"1288\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.09.25-PM.png 1614w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.09.25-PM-300x239.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.09.25-PM-1024x817.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.09.25-PM-768x613.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.09.25-PM-1536x1226.png 1536w\" sizes=\"(max-width: 1614px) 100vw, 1614px\" \/><\/a><\/li>\n<li>Choose the default\u00a0 <code>prometheus<\/code> as the data source. since both Grafana and Prometheus runs on the same system you don&#8217;t have to add Prometheus data source explicitly.<\/li>\n<\/ol>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg\"><img class=\"post-img alignnone wp-image-7029 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg\" alt=\"Grafana URL and SSL monitor\" width=\"2560\" height=\"1380\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg 2560w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-300x162.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-1024x552.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-768x414.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-1536x828.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-2048x1104.jpg 2048w\" sizes=\"(max-width: 2560px) 100vw, 2560px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>Hope you were able to follow and install all the necessary tools such as <code>prometheus alertmanager<\/code> , <code>blackbox<\/code> and <code>grafana<\/code> and get your alerting and slack integration setup.<\/p>\n<p>I am sure this would help you solve some major issues in your infrastructure.<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Cheers<\/p>\n<p>Rumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577917\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"7008\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577917\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577917\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this article, we are going to see how to monitor your web services or URLs for their SSL expiry and uptime. You can consider this as your SSL certificate expiry monitor and web service uptime monitor or URL Health check monitor for all your web services (URLs) These are[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":7029,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[428,427],"tags":[432,431,433,429,430],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>SSL Expiry and Uptime Monitor for URLs - Prometheus Blackbox | Grafana<\/title>\n<meta name=\"description\" content=\"Prometheus URL monitoring with blackbox and Dashboard with Grafana. SSL Expiry Alerts and Uptime alerts with Slack. Prometheus blackbox exporter\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"SSL Expiry and Uptime Monitor for URLs - Prometheus Blackbox | Grafana\" \/>\n<meta property=\"og:description\" content=\"Prometheus URL monitoring with blackbox and Dashboard with Grafana. SSL Expiry Alerts and Uptime alerts with Slack. Prometheus blackbox exporter\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2021-06-27T04:41:02+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-04-19T02:53:35+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"2560\" \/>\n\t<meta property=\"og:image:height\" content=\"1380\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/06\/Screenshot-2021-06-26-at-6.28.43-PM-scaled.jpg\",\"width\":2560,\"height\":1380,\"caption\":\"Grafana URL and SSL monitor\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/\",\"name\":\"SSL Expiry and Uptime Monitor for URLs - Prometheus Blackbox | Grafana\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#primaryimage\"},\"datePublished\":\"2021-06-27T04:41:02+00:00\",\"dateModified\":\"2022-04-19T02:53:35+00:00\",\"description\":\"Prometheus URL monitoring with blackbox and Dashboard with Grafana. SSL Expiry Alerts and Uptime alerts with Slack. Prometheus blackbox exporter\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"SSL Expiry and Uptime Monitor for URLs &#8211; Prometheus Blackbox | Grafana\",\"datePublished\":\"2021-06-27T04:41:02+00:00\",\"dateModified\":\"2022-04-19T02:53:35+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#primaryimage\"},\"keywords\":\"grafana slack,prometheus alert,prometheus slack,prometheus url monitoring,ssl certificate monitoring\",\"articleSection\":\"Grafana,Prometheus\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ssl-expiry-and-uptime-monitor-for-urls-prometheus-blackbox-grafana\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7008"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=7008"}],"version-history":[{"count":6,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7008\/revisions"}],"predecessor-version":[{"id":8334,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7008\/revisions\/8334"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/7029"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=7008"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=7008"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=7008"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}