{"id":6514,"date":"2021-01-08T17:25:54","date_gmt":"2021-01-08T11:55:54","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=6514"},"modified":"2022-06-19T11:17:10","modified_gmt":"2022-06-19T05:47:10","slug":"fluentd-tomcat-elastic-search-example-efk","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/","title":{"rendered":"FluentD Tomcat Elastic Search Example &#8211; EFK"},"content":{"rendered":"<p>In this article, we are going to see, <strong>How to collect tomcat logs with FluentD and send to Elastic Search.<\/strong><\/p>\n<p>FluentD Tomcat Elastic Search (EFK) setup would be covered in detail.<\/p>\n<p>Technically this is known as\u00a0 EFK stack.\u00a0 an efficient and better alternative for the<a href=\"https:\/\/www.elastic.co\/what-is\/elk-stack\"> ELK stack\u00a0 <\/a><\/p>\n<p>&nbsp;<\/p>\n<h2><span id=\"ELK_vs_EFK\" class=\"ez-toc-section\"><span style=\"color: #e31e6c; font-size: 24pt;\">E<\/span>lastic Search<span style=\"color: #e31e6c; font-size: 24pt;\"> F<\/span>luentD <span style=\"color: #e31e6c; font-size: 24pt;\">K<\/span>ibana &#8211; Quick introduction<\/span><\/h2>\n<p>&nbsp;<\/p>\n<p><img class=\"n3VNCb alignnone lazyloaded\" title=\"post-img\" src=\"https:\/\/www.cncf.io\/wp-content\/uploads\/2020\/07\/image3.png\" alt=\"Logging in Kubernetes: EFK\" width=\"784\" height=\"176\" data-noaft=\"1\" data-src=\"https:\/\/www.cncf.io\/wp-content\/uploads\/2020\/07\/image3.png\" \/><\/p>\n<p>The only difference between EFK and ELK is the Log collector\/aggregator product we use.<\/p>\n<p>In EFK. The Log Collector product is <strong>FluentD<\/strong> and on the traditional ELK, it is <strong>Log stash.<\/strong><\/p>\n<p>For those who have worked with Log Stash and gone through those complicated grok patterns and filters. FluentD comes as a saviour.<\/p>\n<p>FluentD is widely being adopted by the Micro Services and Container industry and it is no less for the Traditional VM based setup as well.<\/p>\n<p>If you have a working setup of LogStash collecting logs from Tomcat. Read this article and give a chance to FluentD and you would not regret it.<\/p>\n<p>With no further ado. let&#8217;s jump into the objective.<\/p>\n<p>&nbsp;<\/p>\n<h2>Installing <span style=\"color: #e31e6c;\">FluentD<\/span><\/h2>\n<p>In this task, we are going to see how to install the FluentD universal log collector in the Linux machine where Tomcat is running<\/p>\n<p>You can download the fluentD agent from the following link<\/p>\n<p><a href=\"https:\/\/www.fluentd.org\/download\">https:\/\/www.fluentd.org\/download<\/a><\/p>\n<p>In FluentD parlance, the Forwarder (or) Log Collector agent is called as a <code>td-agent<\/code> treasure data agent.<\/p>\n<p>They also provide a lightweight version of Log Collector and Forwarder named as <code>fluentd-bit<\/code> which you can download from the same link.<\/p>\n<p>For this article, we are going to take the <code>centos\/redhat<\/code> and install the fully-powered <code>td-agent<\/code><\/p>\n<p>the following command would install the stable version (v3) of td-agent<\/p>\n<pre><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJjb2RlJTIyJTJDJTIyaXNWb2lkJTIyJTNBZmFsc2UlMkMlMjJkYXRhJTIyJTNBJTdCJTIyc3ludGF4JTIyJTNBJTIydGV4dCUyMiU3RCUyQyUyMm5vZGVzJTIyJTNBJTVCJTdCJTIyb2JqZWN0JTIyJTNBJTIyYmxvY2slMjIlMkMlMjJ0eXBlJTIyJTNBJTIyY29kZS1saW5lJTIyJTJDJTIyaXNWb2lkJTIyJTNBZmFsc2UlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJ0ZXh0JTIyJTJDJTIybGVhdmVzJTIyJTNBJTVCJTdCJTIyb2JqZWN0JTIyJTNBJTIybGVhZiUyMiUyQyUyMnRleHQlMjIlM0ElMjJjdXJsJTIwLUwlMjBodHRwcyUzQSUyRiUyRnRvb2xiZWx0LnRyZWFzdXJlZGF0YS5jb20lMkZzaCUyRmluc3RhbGwtcmVkaGF0LXRkLWFnZW50My5zaCUyMCU3QyUyMHNoJTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlN0QlNUQlN0QlNUQlN0QlNUQlN0QlNUQlN0Q=\">curl -L https:\/\/toolbelt.treasuredata.com\/sh\/install-redhat-td-agent3.sh | sh<\/span><\/pre>\n<p>If everything goes well you would be able to see something like this and it ends with a message <strong>Installation Completed, Happy Logging<\/strong><\/p>\n<pre>Resolving Dependencies\r\n--&gt; Running transaction check\r\n---&gt; Package td-agent.x86_64 0:3.8.1-0.el7 will be installed\r\n--&gt; Finished Dependency Resolution\r\n\r\nDependencies Resolved\r\n\r\n===============================================================================================================================================================================================\r\nPackage Arch Version Repository Size\r\n===============================================================================================================================================================================================\r\nInstalling:\r\ntd-agent x86_64 3.8.1-0.el7 treasuredata 52 M\r\n\r\nTransaction Summary\r\n===============================================================================================================================================================================================\r\nInstall 1 Package\r\n\r\nTotal download size: 52 M\r\nInstalled size: 156 M\r\nDownloading packages:\r\ntd-agent-3.8.1-0.el7.x86_64.rpm | 52 MB 00:00:05\r\nRunning transaction check\r\nRunning transaction test\r\nTransaction test succeeded\r\nRunning transaction\r\nInstalling : td-agent-3.8.1-0.el7.x86_64 1\/1\r\nadding \\'td-agent\\' group if needed...\r\nadding \\'td-agent\\' user if needed...\r\nInstalling default conffile...\r\nprelink detected. Installing \/etc\/prelink.conf.d\/td-agent-ruby.conf ...\r\nInstalling logrotate.d config\r\nConfigure td-agent to start, when booting up the OS...\r\nVerifying : td-agent-3.8.1-0.el7.x86_64 1\/1\r\n\r\nInstalled:\r\ntd-agent.x86_64 0:3.8.1-0.el7\r\n\r\nComplete!\r\n\r\nInstallation completed. Happy Logging!<\/pre>\n<p>&nbsp;<\/p>\n<h2>Configuring <span style=\"color: #e31e6c;\">FluentD<\/span><\/h2>\n<p>Upon completing the installation of <code>td-agent<\/code>\u00a0 you should be able to see the default configuration file created and present in the path <code>\/etc\/td-agent\/td-agent.conf<\/code><\/p>\n<p>You can remove the already available content and paste the following content in that file.<\/p>\n<p>We will go through this configuration file and its elements shortly.<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"xml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">      &lt;source&gt;\r\n        @type tail\r\n        time_key time\r\n        format multiline\r\n        format_firstline \/^[0-9]+\\-[A-Za-z]{3}\\-[0-9]{4}\\s[0-9]{2}\\:[0-9]{2}\\:[0-9]{2}.[0-9]+\/\r\n        format1 \/^(?&lt;time&gt;[0-9]+\\-[A-Za-z]{3}\\-[0-9]{4}\\s[0-9]{2}\\:[0-9]{2}\\:[0-9]{2}.[0-9]+)\\s(?&lt;LogLevel&gt;[A-Z]+)\\s(?&lt;message&gt;.+)$\/\r\n        path \/opt\/tomcat8\/logs\/catalina.out\r\n        pos_file \/tmp\/myapp.log.pos\r\n        tag dev.myapp.catalinalog\r\n      &lt;\/source&gt;\r\n\r\n      &lt;filter dev.myapp.catalinalog&gt;\r\n        @type record_transformer\r\n        &lt;record&gt;\r\n        hostname ${hostname}\r\n        &lt;\/record&gt;\r\n      &lt;\/filter&gt;\r\n\r\n      &lt;match dev.myapp.catalinalog&gt;\r\n        @type elasticsearch\r\n        host 172.99.1.218\r\n        port 59200\r\n        user datausr\r\n        password password\r\n        index_name fluentd.${tag}\r\n        logstash_format true\r\n        logstash_prefix dev.myapp.catalinalog\r\n        flush_interval 1s\r\n      &lt;\/match&gt;\r\n\r\n      &lt;source&gt;\r\n        @type tail\r\n        path \/opt\/tomcat8\/logs\/localhost_access_log.%Y-%m-%d.txt\r\n        pos_file \/tmp\/accesslog.pos\r\n        tag dev.myapp.accesslogs\r\n        format apache2\r\n      &lt;\/source&gt;\r\n\r\n      &lt;filter dev.myapp.accesslogs&gt;\r\n        @type record_transformer\r\n        &lt;record&gt;\r\n        hostname ${hostname}\r\n        &lt;\/record&gt;\r\n      &lt;\/filter&gt;\r\n\r\n      &lt;match dev.myapp.accesslogs&gt;\r\n        @type elasticsearch\r\n        host 172.99.1.218\r\n        port 59200\r\n        user datausr\r\n        password password\r\n    index_name fluentd.${tag}\r\n        logstash_format true\r\n        logstash_prefix dev.myapp.accesslogs\r\n      &lt;\/match&gt;<\/pre>\n<p>&nbsp;<\/p>\n<p>There are three main elements in this configuration file<\/p>\n<h3><span style=\"color: #003300;\"><span style=\"color: #003366;\">source<\/span>\u00a0 &#8211; to Define input configuration<br \/>\n<\/span><\/h3>\n<ol>\n<li>set the type of our source here <code>tail<\/code> is for monitoring the log file real-time there are various other source types like udp, tcp stream, unix socket, HTTP endpoint etc.<a href=\"https:\/\/docs.fluentd.org\/input\"> read more about other types<\/a><\/li>\n<li>define the source log file and its path using <code>path<\/code> directive<\/li>\n<li>specify the<strong> ruby regex pattern<\/strong> using <code>format<\/code> to filter the events\/logs. Non-matching lines would be ignored<\/li>\n<li>To enable multiline log collection with <code>format multiline<\/code><\/li>\n<li>to define how to consider the new event in case of multiline logs using <code>format_firstline<\/code><\/li>\n<li>tag the collected logs with the name using the <code>tag<\/code> element which would be later referred in the fluentD configuration file<\/li>\n<li>set the pos (or) position file name using <code>pos_name<\/code> which would be used by fluentD to keep track of the line numbers already processed and where to resume.<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h3><span style=\"color: #de2166;\"><span style=\"color: #003366;\">filter &#8211; to modify and update events<br \/>\n<\/span><\/span><\/h3>\n<ol>\n<li>the filter element is used to modify the event streams <strong>collected<\/strong> and <strong>tagged<\/strong> at the source segment.<\/li>\n<li>the filter name must match the tag name of the source. it would help in identifying the right source configuration.<\/li>\n<li>here we can add, remove, modify any field names and values before sending it to\u00a0 Elastic Search<\/li>\n<li>we are going to use <a href=\"https:\/\/docs.fluentd.org\/filter\/record_transformer\"><code>record transformer<\/code> <\/a>filter plugin to add a new field named <code>hostname<\/code> and setting up the local hostname using the shell command <code>hostname<\/code> you can use <code>uname -n<\/code> here instead.<\/li>\n<\/ol>\n<h3><\/h3>\n<h3><span style=\"color: #003366;\">match &#8211; to send logs to Elastic Search<br \/>\n<\/span><\/h3>\n<ol>\n<li>\u00a0With the <code>match<\/code> element, we define what to do with the matching events <strong>collected<\/strong> and <strong>tagged<\/strong> at the source segment<\/li>\n<li>\u00a0the match name must be as same as the tag name we used in the source.<\/li>\n<li>\u00a0here you can define where to send the matching events to the destination can be one of\u00a0 Elastic Search, Kafka, Mongo, S3, HTTP API, stdout\u00a0 <a href=\"https:\/\/docs.fluentd.org\/output\">and more<\/a><\/li>\n<li>We are using <code>ElasticSearch<\/code> as our Destination output plugin and the credentials and connection details are specified in this segment\n<ul>\n<li><strong>host<\/strong>: Elastic Search server hostname<\/li>\n<li><strong>port<\/strong>:\u00a0 Elastic Search server port number<\/li>\n<li><strong>user<\/strong>: Username to log in to Elastic Search\/Kibana ( the user must have privileges to create an index and add new documents to index)<\/li>\n<li><strong>password<\/strong>: Password to login to Elastic Search\/Kibana<\/li>\n<li><strong>index_name: <\/strong>the index name where the events should be stored in Elastic Search. In our case, it is our Tag<\/li>\n<li><strong>logstash_format<\/strong>:\u00a0 to instruct fluentD to send the logs in Logstash format<\/li>\n<li><strong>logstash_prefix<\/strong>:\u00a0 this would be the index name where the logs would be stored in Elastic Search\/Kibana.<\/li>\n<\/ul>\n<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h2>Permissions for <span style=\"color: #e31e6c;\">FluentD<\/span> to access the log files<\/h2>\n<p>As the td-agent process starts and runs with the user-id <code>td-agent<\/code> we should make sure this user is able to read our log files defined in the source element.<\/p>\n<p>You can do it in multiple ways<\/p>\n<ol>\n<li>\u00a0Setting 755 permission to the log files using umask<\/li>\n<li>\u00a0Add the tomcat user into the <code>td-agent<\/code> group<\/li>\n<li>\u00a0Change the ownership of the logs directory to td-agent user or group.<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h2>Starting <span style=\"color: #e31e6c;\">FluentD<\/span> ( td-agent)<\/h2>\n<p>As the installation of td-agent takes care of creating a service. you can simply start the fluentD agent (td-agent) using the following command<\/p>\n<pre>service start td-agent<\/pre>\n<p>You can execute a simple <code>ps -eaf<\/code> command to find if you td-agent is running successfully. the logs would be written into the <code>\/var\/log\/td-agent\/td-agent.log<\/code> file, in case you need it for debugging.<\/p>\n<p>&nbsp;<\/p>\n<h2>Configure and Validate <span style=\"color: #e31e6c;\">Elastic Search<\/span><\/h2>\n<p>Now the FluentD is ready to send the logs to Elastic Search.\u00a0 But there are few steps we must perform in Elastic Search before we are able to accept the logs coming in.<\/p>\n<p>You must have privileges for creating index patterns and probably be an Admin in Kibana in order to perform these steps.<\/p>\n<p>The Steps are as follows.<\/p>\n<p>&nbsp;<\/p>\n<h3>Validate the Index or Reload<\/h3>\n<p>In Kibana, Goto the Management\/Settings and click on <code>Index Management<\/code><\/p>\n<p>Look for the index name we have defined in the FluentD configuration file.\u00a0 Since we have set up two log streams with two different indexes. You should be able to see both of them<\/p>\n<p><a class=\"post-img\" href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.25.37-AM.png\"><img class=\"alignnone wp-image-6586 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.25.37-AM.png\" alt=\"FluentD Elastic Search example\" width=\"1814\" height=\"677\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.25.37-AM.png 1814w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.25.37-AM-300x112.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.25.37-AM-1024x382.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.25.37-AM-768x287.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.25.37-AM-1536x573.png 1536w\" sizes=\"(max-width: 1814px) 100vw, 1814px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Creating Index Pattern<\/h3>\n<p>Since the indexes would have dates along with it.\u00a0 It is always recommended to create an <code>Index Pattern<\/code> which can be used for viewing the logs in Kibana Dashboard.<\/p>\n<p>Here we are creating an index pattern <code>dev.myapp.catalina*<\/code> which would cover all the future indexes being created with this prefix.<\/p>\n<p>Sames goes for the other index pattern <code>dev.myapp.accesslogs*<\/code>\u00a0 too<\/p>\n<p>Refer the following screenshots for reference.<\/p>\n<p><a class=\"post-img\" href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.18-AM.png\"><img class=\"alignnone wp-image-6587 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.18-AM.png\" alt=\"Elastic Search tomcat example\" width=\"1778\" height=\"674\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.18-AM.png 1778w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.18-AM-300x114.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.18-AM-1024x388.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.18-AM-768x291.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.18-AM-1536x582.png 1536w\" sizes=\"(max-width: 1778px) 100vw, 1778px\" \/><\/a><\/p>\n<p><a class=\"post-img\" href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.57-AM.png\"><img class=\"alignnone wp-image-6588 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.57-AM.png\" alt=\"\" width=\"1204\" height=\"506\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.57-AM.png 1204w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.57-AM-300x126.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.57-AM-1024x430.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.26.57-AM-768x323.png 768w\" sizes=\"(max-width: 1204px) 100vw, 1204px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Validating the Logs in Kibana Dashboard<\/h3>\n<p>When you go to the <code>Discover<\/code> of Kibana and select the Index Pattern we have created and set the timeframe.<\/p>\n<p>You can see the logs available and come in as soon as there is an entry in the corresponding log files on the server<\/p>\n<p>&nbsp;<\/p>\n<p><a class=\"post-img\" href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM.png\"><img class=\"alignnone wp-image-6590 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM.png\" alt=\"EFK Example\" width=\"1910\" height=\"821\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM.png 1910w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM-300x129.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM-1024x440.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM-768x330.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM-1536x660.png 1536w\" sizes=\"(max-width: 1910px) 100vw, 1910px\" \/><\/a><\/p>\n<p><a class=\"post-img\" href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.29.41-AM.jpg\"><img class=\"alignnone wp-image-6591 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.29.41-AM.jpg\" alt=\"FluentD Elastic Search example\" width=\"1907\" height=\"910\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.29.41-AM.jpg 1907w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.29.41-AM-300x143.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.29.41-AM-1024x489.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.29.41-AM-768x366.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.29.41-AM-1536x733.jpg 1536w\" sizes=\"(max-width: 1907px) 100vw, 1907px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>In this post we have covered how to install and fluentD and setup EFK &#8211; Elastic FluentD Kibana stack with example. We have also covered how to configure fluentD td-agent to forward the logs to the remote Elastic Search server.<\/p>\n<p>If you are looking for a Container-based Elastic Search FluentD Tomcat setup. ( EFK) on Kubernetes. Refer to my previous article.<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"TWEpPm4JKu\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/\">Kubernetes Sidecar &#8211; Logging with FluentD to EFK<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Kubernetes Sidecar &#8211; Logging with FluentD to EFK&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/embed\/#?secret=TWEpPm4JKu\" data-secret=\"TWEpPm4JKu\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In this article, we are going to see, How to collect tomcat logs with FluentD and send to Elastic Search. FluentD Tomcat Elastic Search (EFK) setup would be covered in detail. Technically this is known as\u00a0 EFK stack.\u00a0 an efficient and better alternative for the ELK stack\u00a0 &nbsp; Elastic Search[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":6590,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[422,423,419],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>FluentD Tomcat Elastic Search Example - EFK | Devops Junction<\/title>\n<meta name=\"description\" content=\"FluentD Tomcat Elastic Search setup. Collect Tomcat logs with FluentD and send to Elastic Search example. How to use FluentD with Elastic Search. EFK example\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"FluentD Tomcat Elastic Search Example - EFK | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"FluentD Tomcat Elastic Search setup. Collect Tomcat logs with FluentD and send to Elastic Search example. How to use FluentD with Elastic Search. EFK example\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2021-01-08T11:55:54+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T05:47:10+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1910\" \/>\n\t<meta property=\"og:image:height\" content=\"821\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/01\/Screenshot-2021-01-08-at-6.28.10-AM.png\",\"width\":1910,\"height\":821,\"caption\":\"EFK Example\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/\",\"name\":\"FluentD Tomcat Elastic Search Example - EFK | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#primaryimage\"},\"datePublished\":\"2021-01-08T11:55:54+00:00\",\"dateModified\":\"2022-06-19T05:47:10+00:00\",\"description\":\"FluentD Tomcat Elastic Search setup. Collect Tomcat logs with FluentD and send to Elastic Search example. How to use FluentD with Elastic Search. EFK example\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"FluentD Tomcat Elastic Search Example &#8211; EFK\",\"datePublished\":\"2021-01-08T11:55:54+00:00\",\"dateModified\":\"2022-06-19T05:47:10+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#primaryimage\"},\"articleSection\":\"EFK,Elastic Search,FluentD\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/fluentd-tomcat-elastic-search-example-efk\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6514"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=6514"}],"version-history":[{"count":28,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6514\/revisions"}],"predecessor-version":[{"id":6601,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6514\/revisions\/6601"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/6590"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=6514"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=6514"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=6514"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}