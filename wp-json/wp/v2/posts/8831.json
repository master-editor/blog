{"id":8831,"date":"2022-07-20T01:58:04","date_gmt":"2022-07-19T20:28:04","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=8831"},"modified":"2022-07-20T01:58:20","modified_gmt":"2022-07-19T20:28:20","slug":"ansible-systemd-module-examples-devops-junction","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/","title":{"rendered":"Ansible SystemD module Examples &#8211; Devops Junction"},"content":{"rendered":"<p>Ansible SystemD module helps to control the <strong>systemd<\/strong> units such as <strong>services<\/strong> and <strong>timers<\/strong> created on the Linux server.<\/p>\n<p>SystemD is a daemon that manages the services and timer units on the Linux system and we mostly interact with it using the following ways<\/p>\n<ul>\n<li>service file<\/li>\n<li>systemctl command<\/li>\n<li>journalctl command<\/li>\n<li>timer unit files<\/li>\n<\/ul>\n<p>Linux Engineers mostly use it for managing the services but it have <code>timer<\/code> feature which works like a CRON and helps in scheduling a task<\/p>\n<p>If you are working on Linux, there are high chances you might have used any of these commands to interact with the services.<\/p>\n<p><strong>service command<\/strong><\/p>\n<pre>service &lt;someservice&gt; status\r\n\r\nservice &lt;someservice&gt; start\r\n\r\nservice &lt;someservice&gt; reload\r\n\r\nservice &lt;someservice&gt; restart<\/pre>\n<p>&nbsp;<\/p>\n<p><strong>systemctl command<\/strong><\/p>\n<pre>systemctl status &lt;someservice&gt;\r\n\r\nsystemctl start &lt;someservice&gt;\r\n\r\nsystemctl reload &lt;someservice&gt;\r\n\r\nsystemctl restart &lt;someservice&gt;<\/pre>\n<p>&nbsp;<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd.png\"><img class=\"post-img alignnone wp-image-8946 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd.png\" alt=\"ansible systemd\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd.png 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd-300x213.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd-1024x726.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd-768x545.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd-1536x1090.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd-400x284.png 400w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd-1080x766.png 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd-90x65.png 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<p>In this article, we are going to see how to manage services and service unit files on Linux using Ansible<\/p>\n<p>So if you are entirely new to Linux services and have no background. <a href=\"https:\/\/www.linode.com\/docs\/guides\/what-is-systemd\/\">Please refer to this article and learn what is systemd\u00a0<\/a><\/p>\n<p>If you are entirely new to Ansible. please start with our Ansible beginner Articles<\/p>\n<ul>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-example\/\">What is Ansible playbook<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-ad-hoc-commands\/\">What are Ansible Ad hoc commands<\/a><\/li>\n<\/ul>\n<p>Now let us shift our focus to our objective, the Ansible SystemD module<\/p>\n<p>&nbsp;<\/p>\n<h2>Quick Example of Ansible SystemD &#8211; Restarting a Service<\/h2>\n<p>Here is a quick example of an Ansible SystemD module to restart an nginx service<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible SystemD Example\r\n  hosts: testserver\r\n  tasks:\r\n  - name: restart NGINX service \r\n    become: true\r\n    systemd: \r\n      name: nginx\r\n      state: restarted\r\n<\/pre>\n<p>Let us see what each field means in this playbook<\/p>\n<ul>\n<li><strong>hosts<\/strong> &#8211; host or hostgroup name where the task to be executed<\/li>\n<li><strong>tasks<\/strong>\n<ul>\n<li><strong>name<\/strong> &#8211; name of the task(play)<\/li>\n<li><strong>become<\/strong> &#8211; to execute the task with sudo privilege as root user<\/li>\n<li><strong>systemd<\/strong> &#8211; module name\n<ul>\n<li><strong>name<\/strong> &#8211; service name<\/li>\n<li><strong>state<\/strong> &#8211;\u00a0 action to be taken on the service ( restarted | reloaded | started | stopped )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>here is the execution result of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM.png\"><img class=\"post-img alignnone wp-image-8934 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM.png\" alt=\"ansible systemd\" width=\"2302\" height=\"478\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM.png 2302w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM-300x62.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM-1024x213.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM-768x159.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM-1536x319.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM-2048x425.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.23.01-AM-1080x224.png 1080w\" sizes=\"(max-width: 2302px) 100vw, 2302px\" \/><\/a><\/p>\n<p>to validate if the nginx service is actually restarted. you can use the following ad hoc command<\/p>\n<pre>ansible testserver -m shell -a \"systemctl status nginx\"<\/pre>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM.jpg\"><img class=\"post-img alignnone wp-image-8935 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM.jpg\" alt=\"ansible systemd\" width=\"2310\" height=\"590\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM.jpg 2310w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM-300x77.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM-1024x262.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM-768x196.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM-1536x392.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM-2048x523.jpg 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-1.26.47-AM-1080x276.jpg 1080w\" sizes=\"(max-width: 2310px) 100vw, 2310px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Stop the service using ansible systemd<\/h2>\n<p>Here is the ansible playbook to stop the service using the ansible systemd module<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible SystemD Example\r\n  hosts: testserver\r\n  tasks:\r\n  - name: stop NGINX service \r\n    become: true\r\n    systemd: \r\n      name: nginx\r\n      state: stopped\r\n<\/pre>\n<p>here is the output of this playbook when executed<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">$ ansible-playbook SystemD-examples.yaml -i hosts\r\n\r\nPLAY [Ansible SystemD Example] ************************************************************************************************\r\n\r\nTASK [Gathering Facts] ********************************************************************************************************\r\nok: [testserver]\r\n\r\nTASK [stop NGINX service] *****************************************************************************************************\r\nchanged: [testserver]\r\n\r\nPLAY RECAP *****************************************************************************************************************\r\ntestserver                 : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0   ignored=0<\/pre>\n<p>&nbsp;<\/p>\n<h2>Start the service using ansible systemd<\/h2>\n<p>Here is the playbook we can use to start the nginx service using the ansible systemd module<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible SystemD Example\r\n  hosts: testserver\r\n  tasks:\r\n  - name: Start NGINX service \r\n    become: true\r\n    systemd: \r\n      name: nginx\r\n      state: started\r\n<\/pre>\n<p>Here is the output of this playbook as a screen record<\/p>\n<p><script id=\"asciicast-9dRFVVek5XKWfQDVTGhpnmFgp\" src=\"https:\/\/asciinema.org\/a\/9dRFVVek5XKWfQDVTGhpnmFgp.js\" async><\/script><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Reload the service using ansible systemd<\/h2>\n<p>we have already seen how to restart the service using the ansible systemd module earlier.\u00a0 here is how we can reload the service using<\/p>\n<p>Especially, services like nginx often reloaded but not restarted. reload would not kill the existing connections or transactions managed by the service but just reload the configuration.<\/p>\n<p>Let us see how to reload a service using the ansible systemd module<\/p>\n<p>this is more like performing <code>systemctl reload nginx<\/code> command in real-time<\/p>\n<p>Here is the playbook to reload the service in ansible<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible SystemD Example reload service\r\n  hosts: testserver\r\n  tasks:\r\n  - name: reload NGINX service \r\n    become: true\r\n    systemd: \r\n      name: nginx\r\n      state: reloaded\r\n<\/pre>\n<p>Here is the output of this playbook when I executed it on my end<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM.png\"><img class=\"post-img alignnone wp-image-8936 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM.png\" alt=\"ansible systemd\" width=\"3290\" height=\"1802\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM.png 3290w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM-300x164.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM-1024x561.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM-768x421.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM-1536x841.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM-2048x1122.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-18-at-11.57.26-AM-1080x592.png 1080w\" sizes=\"(max-width: 3290px) 100vw, 3290px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Enable the service using ansible systemd<\/h2>\n<p>Creating a unit file for any application\/software makes the administration easier. But there is one more primary requirement we do have.<\/p>\n<p>It is to configure the services automatically during the boot time ( start time).<\/p>\n<p>Nowadays most of the installations do come up with the creation of services and enabling at boot by default.<\/p>\n<p>To check if your service is enabled to run at boot we can use the systemctl show command<\/p>\n<pre>systemctl show &lt;servicename&gt;|grep -i UnitfileState<\/pre>\n<p>we often use\u00a0 systemctl enable command to enable services to run at boot time<\/p>\n<pre>systemctl enable &lt;servicename.service&gt;<\/pre>\n<p>Now let us see how to enable a service with an ansible systemd module.<\/p>\n<p>Here is the playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible SystemD Example\r\n  hosts: testserver\r\n  tasks:\r\n  - name: Enable NGINX service \r\n    become: true\r\n    systemd: \r\n      name: nginx\r\n      enabled: yes\r\n<\/pre>\n<p>Here is the output when executed from our end. I have added some additional validation ad hoc commands too<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM.png\"><img class=\"post-img alignnone wp-image-8939 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM.png\" alt=\"ansible systemd\" width=\"2984\" height=\"1978\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM.png 2984w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-300x199.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-1024x679.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-768x509.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-1536x1018.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-2048x1358.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-1080x716.png 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-120x80.png 120w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/Screenshot-2022-07-20-at-12.18.11-AM-360x240.png 360w\" sizes=\"(max-width: 2984px) 100vw, 2984px\" \/><\/a><\/p>\n<p>You can see from the screenshot that the service is enabled and we are validating it with an ansible ad hoc command<\/p>\n<blockquote><p>\u00a0In case if you want to disable a service using ansible systemd. you can use the same playbook above but change the <code>enabled:<\/code> to <code>no<\/code><\/p><\/blockquote>\n<h2><\/h2>\n<h2>Creating a service\/systemd unit file with ansible<\/h2>\n<p>we have so far learnt how to manage the existing unit files or services with the ansible systemd module.<\/p>\n<p>Now let us see how to create a service unit file with ansible.<\/p>\n<p>Those who have created systemd unit files aka service files already in Linux know that it is a little complex as it has a lot of features to offer.<\/p>\n<p>We do not have any dedicated module in Ansible to create these unit files for us.<\/p>\n<p>the SystemD module also limits just managing the unit files so <strong>we need to create the unit files ourselves.<\/strong><\/p>\n<p>So here is some real-time example playbook where we install and set up a tomcat webserver and create a service for it.<\/p>\n<p>This playbook performs the following tasks<\/p>\n<ul>\n<li>Create a group and user named <code>tomcat<\/code><\/li>\n<li>Create a directory named <code>\/opt\/tomcat8<\/code><\/li>\n<li>Download Tomcat and unarchive<\/li>\n<li>move the files to the right directory<\/li>\n<li>Create the service file in <strong>\/etc\/systemd\/system<\/strong><\/li>\n<li>reload the systemd<\/li>\n<li>enable and start the tomcat service<\/li>\n<li>validate by accessing the tomcat webapp URL<\/li>\n<\/ul>\n<p>this playbook is tested.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Installation and Setup of Tomcat8\r\n  hosts: testserver\r\n  tasks:\r\n   - name: Create the group\r\n     become: yes\r\n     group: \r\n      name: tomcat\r\n      state: present\r\n\r\n   - name: Create the user\r\n     become: yes\r\n     user:\r\n        name: tomcat\r\n        state: present\r\n\r\n   - name: Create a Directory \/opt\/tomcat8\r\n     become: yes\r\n     file:\r\n       path: \/opt\/tomcat8\r\n       state: directory\r\n       mode: 0755\r\n       owner: tomcat\r\n       group: tomcat\r\n\r\n   - name: Download Tomcat using unarchive\r\n     tags: never\r\n     become: yes\r\n     unarchive:\r\n       src: https:\/\/dlcdn.apache.org\/tomcat\/tomcat-8\/v8.5.81\/bin\/apache-tomcat-8.5.81.zip\r\n       dest: \/opt\/tomcat8\r\n       mode: 0755\r\n       remote_src: yes\r\n       group: tomcat\r\n       owner: tomcat\r\n    \r\n   - name: Move files to the \/opt\/tomcat8 directory\r\n     tags: never\r\n     become: yes\r\n     become_user: tomcat\r\n     shell: \"mv \/opt\/tomcat8\/apache*\/* \/opt\/tomcat8\"\r\n\r\n   - name: Creating a service file\r\n     become: yes\r\n     copy: \r\n      dest: \/etc\/systemd\/system\/tomcat.service\r\n      content: |\r\n        [Unit]\r\n        Description=Tomcat Service\r\n        Requires=network.target\r\n        After=network.target\r\n\r\n        [Service]\r\n        Type=forking\r\n        User=tomcat\r\n        Environment=\"CATALINA_PID=\/opt\/tomcat8\/logs\/tomcat.pid\"\r\n        Environment=\"CATALINA_BASE=\/opt\/tomcat8\"\r\n        Environment=\"CATALINA_HOME=\/opt\/tomcat8\"\r\n        Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"\r\n\r\n        ExecStart=\/opt\/tomcat8\/bin\/startup.sh\r\n        ExecStop=\/opt\/tomcat8\/bin\/shutdown.sh\r\n        Restart=on-abnormal\r\n\r\n        [Install]\r\n        WantedBy=multi-user.target\r\n\r\n   - name: Reload the SystemD to re-read configurations\r\n     become: yes\r\n     systemd:\r\n        daemon-reload: yes\r\n\r\n   - name: Enable the tomcat service and start\r\n     become: yes\r\n     systemd:\r\n        name: tomcat\r\n        enabled: yes\r\n        state: started\r\n\r\n   - name: Connect to Tomcat app on port 8080 and check status 200\r\n     uri: \r\n      url: http:\/\/localhost:8080\/<\/pre>\n<p>In this complete playbook, we have two tasks that match our objective<\/p>\n<p>Reloading the systemd Daemon using an ansible systemd module<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">- name: Reload the SystemD to re-read configurations\r\n  become: yes\r\n  systemd:\r\n     daemon-reload: yes<\/pre>\n<p>The next one is to enable and start the service using the systemd module<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">- name: Enable the tomcat service and start\r\n  become: yes\r\n  systemd:\r\n     name: tomcat\r\n     enabled: yes\r\n     state: started<\/pre>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>Hope you have learnt how to use the ansible systemd module and I hope all the examples are making sense.<\/p>\n<p>If you have any questions. do let us know in the comments section.<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577276\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"8831\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577276\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577276\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Ansible SystemD module helps to control the systemd units such as services and timers created on the Linux server. SystemD is a daemon that manages the services and timer units on the Linux system and we mostly interact with it using the following ways service file systemctl command journalctl command[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":8946,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[1],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible SystemD module Examples - Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible SystemD module examples. How to Create, Stop, Start, Enable Services using ansible SystemD module. Ansible SystemCTL command examples.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible SystemD module Examples - Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible SystemD module examples. How to Create, Stop, Start, Enable Services using ansible SystemD module. Ansible SystemCTL command examples.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2022-07-19T20:28:04+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-07-19T20:28:20+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/07\/ansible-systemd.png\",\"width\":1748,\"height\":1240},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/\",\"name\":\"Ansible SystemD module Examples - Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#primaryimage\"},\"datePublished\":\"2022-07-19T20:28:04+00:00\",\"dateModified\":\"2022-07-19T20:28:20+00:00\",\"description\":\"Ansible SystemD module examples. How to Create, Stop, Start, Enable Services using ansible SystemD module. Ansible SystemCTL command examples.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible SystemD module Examples &#8211; Devops Junction\",\"datePublished\":\"2022-07-19T20:28:04+00:00\",\"dateModified\":\"2022-07-19T20:28:20+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#primaryimage\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-systemd-module-examples-devops-junction\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8831"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=8831"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8831\/revisions"}],"predecessor-version":[{"id":8953,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8831\/revisions\/8953"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/8946"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=8831"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=8831"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=8831"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}