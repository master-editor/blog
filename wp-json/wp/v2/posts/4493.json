{"id":4493,"date":"2020-01-08T04:37:07","date_gmt":"2020-01-07T23:07:07","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=4493"},"modified":"2022-07-10T17:29:35","modified_gmt":"2022-07-10T11:59:35","slug":"aws-cli-ec2","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/","title":{"rendered":"AWS EC2 CLI  List Examples &#8211; Describe instances | Devops Junction"},"content":{"rendered":"<p>AWS CLI is a very great help when it comes to efficiently managing your AWS Cloud Infrastructure and your EC2 instances.<\/p>\n<p>While we are managing our AWS Infrastructure,\u00a0 we cannot always afford to login to the AWS console all the time and it is not recommended from the security perspective as well.<\/p>\n<p>So the key here is the Programmatic Access with AWS CLI.<\/p>\n<p>This is what we are going to do in this post.<\/p>\n<ol>\n<li>Setup your Programmatic Access &#8211; Create Access Key and\u00a0 Key Secret.<\/li>\n<li>Install AWS CLI<\/li>\n<li>Configure AWS CLI<\/li>\n<li>Execute the AWS CLI Command line examples to List EC2 instances command line.<\/li>\n<\/ol>\n<p>Let us perform these aforementioned steps one by one.<\/p>\n<p>&nbsp;<\/p>\n<h2>Setup your <span style=\"color: #db0d4b;\">Programmatic Access<\/span> &#8211; Create Access Key<\/h2>\n<p>If you would like to create a new user in IAM along with the Access Key follow these steps.<\/p>\n<ol>\n<li>\n<div>Login to AWS Console<\/div>\n<\/li>\n<li>\n<div>In the services go to IAM<\/div>\n<\/li>\n<li>\n<div>Create a User and Click on map existing Policies<\/div>\n<\/li>\n<li>\n<div>Choose UserName and Select the Policy (Administrator Access Policy)<\/div>\n<\/li>\n<li>\n<div>Create user<\/div>\n<\/li>\n<li>\n<div>Final Stage would present the AccessKEY and Secret Access like given below.<\/div>\n<\/li>\n<\/ol>\n<figure id=\"attachment_3140\" class=\"wp-caption alignleft\"><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png\"><img class=\"size-full wp-image-3140\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png\" sizes=\"(max-width: 996px) 100vw, 996px\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png 996w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM-300x116.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM-768x297.png 768w\" alt=\"\" width=\"996\" height=\"385\" \/><\/a><figcaption class=\"wp-caption-text\">API key creation Successful Message Banner<\/figcaption><\/figure>\n<p>&nbsp;<\/p>\n<p>If you would like to Choose the existing user and create an Access Key follow this<\/p>\n<ol>\n<li>Sign in to the AWS Management Console and open the IAM console at https:\/\/console.aws.amazon.com\/iam\/.<\/li>\n<li>In the navigation pane, choose Users.<\/li>\n<li>Choose the name of the user whose access keys you want to create, and then choose the Security credentials tab.<\/li>\n<li>In the Access keys section, choose to Create an access key.<\/li>\n<li>To view the new access key pair, choose Show. You will not have access to the secret access key again after this dialog box closes. ( Refer the image given above)<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h2 id=\"install-cli\"><span style=\"color: #db0d4b;\">Install<\/span> AWS CLI<\/h2>\n<p>Based on your base machine the AWS CLI installation and command might vary.<\/p>\n<p>Amazon has given a clear instructions on how to install AWS CLI on each platform. Choose any of the following links and get your AWS CLI installed and ready<\/p>\n<ul>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/install-cliv2-linux.html\" target=\"_blank\" rel=\"noopener noreferrer\">Installing AWS CLI version 2 on Linux or Unix<\/a><\/li>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/install-cliv2-macOS.html\" target=\"_blank\" rel=\"noopener noreferrer\">Installing AWS CLI version 2 on macOS<\/a><\/li>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/install-cliv2-windows.html\" target=\"_blank\" rel=\"noopener noreferrer\">Installing AWS CLI version 2 on Windows<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h2 id=\"configure-cli\"><span style=\"color: #db0d4b;\">Configure<\/span> AWS CLI<\/h2>\n<p>I presume that you have installed the AWS CLI package and if everything went well.<\/p>\n<p>You should be able to see the version of the AWS CLI installed when entering the following command in your terminal or command prompt<\/p>\n<pre>aws &#8211; version<\/pre>\n<p>I am using the AWS CLI Version1 as CLI Version 2 is still on Beta.<\/p>\n<p>Now it is a time to configure the AWS CLI, Just enter the following command and you would be prompted a few questions about the Access Key and Passwords.<\/p>\n<pre>aws configure<\/pre>\n<p>it would look like this as you are setting it up.<\/p>\n<p>You enter your own <code>AWS Access Key ID<\/code> and <code>Secret Access Key<\/code>\u00a0and the one is given below is not correct. Just a made up.<\/p>\n<pre>\u279c ~ aws configure\r\nAWS Access Key ID [None]: AKIAS790KQGK63WUK6T5\r\nAWS Secret Access Key [None]: kkQEiBjJSKrDkWBLO9G\/JJKQWIOKL\/CpHjMGyoiJWW\r\nDefault region name [None]: us-east-1\r\nDefault output format [None]:<\/pre>\n<p>Well done. You are ready with AWS CLI<\/p>\n<p>&nbsp;<\/p>\n<h2>Quick <span style=\"color: #db0d4b;\">Syntax<\/span> of AWS CLI Commands<\/h2>\n<p>Before we are going in further,\u00a0 let me quickly give you the syntax of\u00a0 AWS CLI commands<\/p>\n<pre>aws [options] &lt;command&gt; &lt;subcommand&gt; [&lt;subcommand&gt; ...] [parameters]<\/pre>\n<p>aws CLI should be invoked with command and a subcommand. AWS CLI provides us <a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/reference\/\" target=\"_blank\" rel=\"noopener noreferrer\">huge list of commands<\/a> and their associated sub commands and their documentation is also awesome.<\/p>\n<p>It would take years for someone to write about all these commands and our objective is very specific and we are going to take one Single command named <code>describe-instances<\/code><\/p>\n<p>So let us move on and explore what it has got for us!!.\u00a0We have given 7 examples of AWS CLI EC2\u00a0 in this post.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h2>AWS CLI EC2 <span style=\"color: #e01060;\">Examples &#8211; Describe instances<br \/>\n<\/span><\/h2>\n<ol>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example1\">List All instances in your AWS infra (Single Region)<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example2\">List only Running instances<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example3\">Get a Specific list of Fileds using Query Parameter<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example4\">List Ec2 instance by tag value<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example5\">Describe a Specific instance using the instance ID<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example6\">List instances by Instance Type<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example7\">List instances by Availability Zone<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#example8\">List the instances mapped to the Security Group.<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#Example_9_List_the_running_instances_with_PrivateIP_PublicIP_and_VPC_ID\">List the running instances with PrivateIP, PublicIP and VPC ID<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#Example_10_List_All_the_instances_in_all_regions\">List All the instances in all regions &#8211; Run Any AWS Command in all regions<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#Example_11_List_only_running_SPOT_instances_using_aws_CLI_EC2\">List SPOT instances using aws cli EC2<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#Example_12_List_only_ON-Demand_instances_using_aws_CLI_EC2\">List OnDemand Instances using aws cli EC2<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#Example13_List_EC2_instances_with_IAM_and_Security_Group\">List EC2 Instances with IAM and Security Group\u00a0<\/a><\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h3 id=\"example1\">Example1: List All Instances in your AWS infrastructure from Default Region<\/h3>\n<p>If everything was done right. When you are running the following command you would see a Nicely formatted JSON output something just like this.<\/p>\n<p>This command would list\u00a0 all the instances from your default region defined by you.<\/p>\n<p>The command is<\/p>\n<pre>aws ec2 describe-instances<\/pre>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/11\/Screenshot-2019-11-22-at-4.24.52-PM.png\"><img class=\"post-img alignnone wp-image-4496 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/11\/Screenshot-2019-11-22-at-4.24.52-PM.png\" alt=\"List all EC2 instances command line\" width=\"1594\" height=\"1306\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/11\/Screenshot-2019-11-22-at-4.24.52-PM.png 1594w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/11\/Screenshot-2019-11-22-at-4.24.52-PM-300x246.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/11\/Screenshot-2019-11-22-at-4.24.52-PM-768x629.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/11\/Screenshot-2019-11-22-at-4.24.52-PM-1024x839.png 1024w\" sizes=\"(max-width: 1594px) 100vw, 1594px\" \/><\/a><\/p>\n<p>It would fetch all the data from your aws account and display the results as JSON format.\u00a0 but this is NOT a human-readable format.<\/p>\n<p>So ansible AWS CLI has great filters for you in place to help.<\/p>\n<p>If you would like to describe the instances in JSON from other regions you can specify the region name on the command<\/p>\n<pre>aws ec2 describe-instances &#8211; region us-east-2<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3 id=\"example2\">Example2:\u00a0 List only Running instances as a Table\u00a0using\u00a0AWS CLI EC2<\/h3>\n<p>Here is the command we are going to execute. It is a bit complex to the previous command we have used. But it can be easily understood.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\">aws ec2 describe-instances  \\\r\n--query <span class=\"hljs-string\" style=\"color: #880000;\">\"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}\" \\<\/span> \r\n--filters Name=instance-state-name,<\/pre>\n<p><strong><span style=\"color: #993300;\">Values=running<\/span> \\<\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #f0f0f0; color: #444444;\">--output table<\/pre>\n<p>So we are using three main parameters\/flags here with aws ec2 describe-instances command.<\/p>\n<p><code>--query<\/code>\u00a0accepts the JSON query,\u00a0 To limit the fields returned or to customize the list of fields on the result<\/p>\n<p><code>--filters<\/code>\u00a0accepts a list of filters, A Search String alike. to get the list of filters refer <a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/reference\/ec2\/describe-instances.html#options\">here<\/a><\/p>\n<p><code>--output<\/code>\u00a0to customize the format of the output, JSON (or) TABLE<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-01-08-at-2.00.37-AM.png\"><img class=\"post-img alignnone wp-image-4684 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-01-08-at-2.00.37-AM.png\" alt=\"\" width=\"1744\" height=\"1056\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-01-08-at-2.00.37-AM.png 1744w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-01-08-at-2.00.37-AM-300x182.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-01-08-at-2.00.37-AM-768x465.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-01-08-at-2.00.37-AM-1024x620.png 1024w\" sizes=\"(max-width: 1744px) 100vw, 1744px\" \/><\/a><\/p>\n<p>With the help of the <code>--query<\/code>\u00a0field we are displaying only the <code>Name, PublicIP, Status<\/code>\u00a0fields from the entire data.\u00a0 We can customize it further by choosing more or less fields using the query.<\/p>\n<p>Consider the following example.<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3 id=\"example3\">Example3:\u00a0 Getting More Fields using the Query Parameter.\u00a0 Get the Machine type<\/h3>\n<p>Here is the command we are going to use to get the list of running instances with Name, PublicIP, Status along with machine type<\/p>\n<pre>ansible aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}\"  \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=tag:Name,Values='*'\"\u00a0 \\\r\n--output table<\/pre>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3 id=\"example4\">Example4:\u00a0 Get the servers based on a String availability on the tag\u00a0using\u00a0AWS CLI EC2<\/h3>\n<p>While we are creating the servers, we give meaningful tags to the server <code>Name<\/code>\u00a0is one famous tag name we are giving for all the ec2 instances we are creating.<\/p>\n<p>Often we would give some useful information on this such as Hostname, Application Name, Environment Name etc.<\/p>\n<p>Let&#8217;s suppose that this <code>Name<\/code>\u00a0the field is having the environment names such as <code>dev, prod, uat<\/code>\u00a0on all the servers present in your aws infrastructure<\/p>\n<p>To list only the <code>Dev<\/code>\u00a0servers. the following command would help<\/p>\n<pre>aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}\"  \\\r\n--filters \"Name=instance-state-name,Values=running\"<\/pre>\n<p><strong><span style=\"color: #993300;\">&#8220;Name=tag:Name,Values=&#8217;*Dev*'&#8221;<\/span> \\<\/strong><\/p>\n<pre>--output table<\/pre>\n<p>Look at the highlighted part on the preceding snippet and you would understand that we are using the Search string <code>*Dev*<\/code>\u00a0to get only the Development servers.<\/p>\n<p>We are also specifying the tag name in which the search has to happen with <code>Name=tag:Name<\/code><\/p>\n<p>&nbsp;<\/p>\n<h3 id=\"example5\">Example5:\u00a0 Describe a Specific instance by Instance ID\u00a0using\u00a0AWS CLI EC2<\/h3>\n<p>Sometimes all you want to know is a configuration of a Single instance and if you have the <code>instance-id<\/code>\u00a0with you. you can do it easily with aws ec2 describe-instances command line.<\/p>\n<p>Here is the command,<\/p>\n<p>The <code>--instance-ids<\/code>\u00a0parameter can accept one or more instance ids. The output will be printed as JSON unless modified with <code>--query<\/code>\u00a0and <code>--output<\/code><\/p>\n<pre>aws ec2 describe-instances &#8211; instance-ids i-1234567890abcdef0<\/pre>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3 id=\"example6\">Example6:\u00a0 List all running instances based on the Instance Type. t2.medium, t2.large etc.<\/h3>\n<p>List only <code>large<\/code>\u00a0instances in a running state<\/p>\n<pre>aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}\"  \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='*large*'\" \\\r\n--output table<\/pre>\n<p>List only <code>medium<\/code>\u00a0and <code>micro<\/code>\u00a0instances<\/p>\n<pre>aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}\" \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='t2.medium','t2.micro'\" \\\r\n--output table<\/pre>\n<blockquote><p><span style=\"color: #0d589e;\"><strong>\u00a0You can get the output as JSON as well, Not just Table<\/strong><\/span><\/p>\n<p>I know you might think that all the examples are having\u00a0\u00a0<code>--output<\/code>\u00a0format as table.\u00a0 Based on your requirement you can use either\u00a0 <code>table<\/code>\u00a0or <code>text<\/code>\u00a0or <code>json<\/code>\u00a0with this <code>output<\/code>\u00a0parameter.<\/p>\n<p>here is the example.<\/p>\n<pre>aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}\" \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='t2.medium','t2.micro'\" \\\r\n--output json<\/pre>\n<\/blockquote>\n<h3 id=\"example7\">Example7:\u00a0 List instances based on the Availability Zone\u00a0using\u00a0AWS CLI EC2<\/h3>\n<p>You can also list the instances based on their availability zone<\/p>\n<p>here is the command<\/p>\n<div class=\"highlight-python\">\n<pre>aws ec2 describe-instances \\\r\n    &#8211; filters Name=availability-zone,Values=us-east-2c<\/pre>\n<\/div>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3 id=\"example8\">Example 8: List the instances associated with a Specific Security Group<\/h3>\n<p>I think, we often get a requirement to check\u00a0 how many instances are using a particular security group and here is the aws ec2 command to get that done for us<\/p>\n<p>Here my security group name is <code>Application-Server<\/code>\u00a0and here is the command I would use to get the list of EC2 instance associated with the Security group<\/p>\n<p>Here I am using the <code>instance.group-name<\/code>\u00a0filter to get that done.<\/p>\n<pre>aws ec2 describe-instances \\ \r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}\" \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='t2.medium','t2.micro'\" \"<span style=\"color: #993300;\">Name=instance.group-name,Values='Application-Server<\/span>'\" \\\r\n--output table<\/pre>\n<p>As it does not print the Security Group data in the table format. If you want to reverify. You can use the following command which lists the <code>Security-Groups<\/code>\u00a0associated with the EC2 instance. Just to cross verify.<\/p>\n<pre>aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name,<span style=\"color: #993300;\">SecurityGroups:SecurityGroups[*]<\/span>}\" \\ \r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='t2.medium','t2.micro'\" \"Name=instance.group-name,Values=Application-Server\" \\\r\n--output json<\/pre>\n<p>&nbsp;<\/p>\n<h3>Example 9: List the running instances with PrivateIP, PublicIP and VPC ID<\/h3>\n<p>In this example, we are going to see how to use AWS CLI EC2 to list the running instances with more details like InstanceType, PrivateIP, PublicIP and VPC ID etc<\/p>\n<pre lang=\"en-US\" style=\"margin: 0in; font-family: Consolas; font-size: 11.0pt;\">aws ec2 describe-instances \r\n--query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,PrivateIP:PrivateIpAddress,Name:Tags[?Key=='Name']|[0].Value,Type:InstanceType,Status:State.Name,VpcId:VpcId}\" \r\n--filters Name=instance-state-name,Values=running \r\n--output table<\/pre>\n<p>Here is the execution output of this command looks like<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-04-19-at-11.33.13-PM.png\"><img class=\"post-img alignnone wp-image-5262 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-04-19-at-11.33.13-PM.png\" alt=\"\" width=\"2570\" height=\"1100\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-04-19-at-11.33.13-PM.png 2570w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-04-19-at-11.33.13-PM-300x128.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-04-19-at-11.33.13-PM-768x329.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2020-04-19-at-11.33.13-PM-1024x438.png 1024w\" sizes=\"(max-width: 2570px) 100vw, 2570px\" \/><\/a><\/p>\n<h2><\/h2>\n<h3>Example 10: List All the instances in all regions<\/h3>\n<p>By default AWS CLI would be picking up your default region while executing the command. What if you want to List All the instances in all regions.<\/p>\n<p>we have a solution for it. Refer the following post where we talk about our new tool <code>awsall<\/code><\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"Y4FRv1YFVl\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/run-aws-cli-commands-on-all-regions-awsall\/\">Run AWS CLI commands on All regions &#8211; awsall | Devops Junction<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Run AWS CLI commands on All regions &#8211; awsall | Devops Junction&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/run-aws-cli-commands-on-all-regions-awsall\/embed\/#?secret=Y4FRv1YFVl\" data-secret=\"Y4FRv1YFVl\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>You can execute all the aws commands with <code>awsall<\/code> with modification.<\/p>\n<p>For example, Take the example 9 and replace the <code>aws<\/code>with <code>awsall<\/code> and execute it.<\/p>\n<pre>awsall ec2 describe-instances &#8211; query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,PrivateIP:PrivateIpAddress,Name:Tags[?Key=='Name']|[0].Value,Type:InstanceType,Status:State.Name,VpcId:VpcId}\" &#8211; filters Name=instance-state-name,Values=running &#8211; output table<\/pre>\n<p>It will be executed on all AWS regions and give you the result.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-scaled.jpg\"><img class=\"post-img alignnone wp-image-7203 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-scaled.jpg\" alt=\"aws cli\" width=\"2560\" height=\"1596\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-scaled.jpg 2560w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-300x187.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-1024x638.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-768x479.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-1536x957.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2021-09-05-at-11.08.46-PM-2048x1277.jpg 2048w\" sizes=\"(max-width: 2560px) 100vw, 2560px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Example 11: List SPOT instances using aws CLI EC2<\/h3>\n<p>At times we want to list instances based on their billing life cycle, SPOT or On Demand.<\/p>\n<p>Here is the aws CLI ec2 command to list. only spot instances<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PrivateIP:PrivateIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name,LifeCyle:InstanceLifecycle }\"  \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='*'\" \\\r\n--output table | grep -i spot<\/pre>\n<p>This would print the details in the form of a table.<\/p>\n<p>If you want the output as a CSV. you can use the following command. we have used <code>awk<\/code>command to format the output to CSV along with text output format.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PrivateIP:PrivateIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name,LifeCyle:InstanceLifecycle }\"  \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='*'\" \\\r\n--output text |grep -i spot | awk '{print $1\",\"$2\",\"$3\",\"$4\",\"$5}'<\/pre>\n<p>&nbsp;<\/p>\n<h3>Example 12: List ON-Demand instances using aws CLI EC2<\/h3>\n<p>to list only the OnDemand EC2 instances on your AWS account. You can use the following command<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-linenumbers=\"false\" data-enlighter-theme=\"bootstrap4\">aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PrivateIP:PrivateIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name,LifeCyle:InstanceLifecycle }\"  \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='*'\" \\\r\n--output table|grep -iv spot<\/pre>\n<p>as on-demand instances would not have any <code>InstanceLifeCycle<\/code> reference like SPOT. we are trying to list all instances without <code>spot<\/code> using <code>grep -iv<\/code><\/p>\n<p>If you want the output to be in CSV format you can use the below command<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">aws ec2 describe-instances \\\r\n--query \"Reservations[*].Instances[*].{PrivateIP:PrivateIpAddress,Type:InstanceType,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name,LifeCyle:InstanceLifecycle }\"  \\\r\n--filters \"Name=instance-state-name,Values=running\" \"Name=instance-type,Values='*'\" \\\r\n--output text|grep -iv spot|awk '{print $1\",\"$2\",\"$3\",\"$4\",\"$5}'<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3 id=\"example1\">Example13: List EC2 instances with IAM and Security Group<\/h3>\n<p>In this example, we are listing the aws EC2 instances with their IAM security role and security group configuration.<\/p>\n<p>Get all running instances with their IAM and security group using aws cli<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">aws ec2 describe-instances &#8211; query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,PrivateIP:PrivateIpAddress,Name:Tags[?Key=='Name'].Value|[0],Status:State.Name,VpcId:VpcId,InstanceID:InstanceId,Groups:join(',',NetworkInterfaces[].Groups[].GroupId),IamInstanceProfile:IamInstanceProfile.Arn}\" &#8211; filters \"Name=instance-state-name,Values=running\" &#8211; output json<\/pre>\n<p>&nbsp;<\/p>\n<p>Get all stopped instances with their IAM and security group using aws cli<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">aws ec2 describe-instances &#8211; query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,PrivateIP:PrivateIpAddress,Name:Tags[?Key=='Name'].Value|[0],Status:State.Name,VpcId:VpcId,InstanceID:InstanceId,Groups:join(',',NetworkInterfaces[].Groups[].GroupId),IamInstanceProfile:IamInstanceProfile.Arn}\" &#8211; filters \"Name=instance-state-name,Values=stopped\"  &#8211; output json<\/pre>\n<p>&nbsp;<\/p>\n<p>Filter instances with a specific name.\u00a0 done using the filters<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">aws ec2 describe-instances &#8211; query \"Reservations[*].Instances[*].{PublicIP:PublicIpAddress,PrivateIP:PrivateIpAddress,Name:Tags[?Key=='Name'].Value|[0],Status:State.Name,VpcId:VpcId,InstanceID:InstanceId,Groups:join(',',NetworkInterfaces[].Groups[].GroupId),IamInstanceProfile:IamInstanceProfile.Arn}\" &#8211; filters \"Name=instance-state-name,Values=running\" \"Name=tag:Name,Values=*EKS*\" &#8211; output json<\/pre>\n<p>You can notice we are using <code>*EKS*<\/code> to filter Ec2 instances which have EKS on their name.<\/p>\n<p>We are also using a special function of JMESPATH named <code>join<\/code> to flatten the array and convert all the elements to a single-line string with a comma<\/p>\n<p>Since the IAM role would come as a full ARN and at times a single instance would have multiple security groups, displaying this data as a table using <code>--output table<\/code> may not be the right choice.<\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>While there are so many modules still that are not covered in this post. I hope that this gives you a good start on the AWS CLI command line.<\/p>\n<p>Feel free to ask any questions in the comments section<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578180\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"4493\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578180\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578180\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>AWS CLI is a very great help when it comes to efficiently managing your AWS Cloud Infrastructure and your EC2 instances. While we are managing our AWS Infrastructure,\u00a0 we cannot always afford to login to the AWS console all the time and it is not recommended from the security perspective[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":4700,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[234],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>AWS EC2 CLI List Examples - Describe instances | Devops Junction<\/title>\n<meta name=\"description\" content=\"How to List EC2 instances with AWS CLI. AWS CLI EC2 examples. How to use AWS CLI EC2 describe instances to get the list of running instances. List running instances command line aws cli, List the instances associated with security group, List instance by instance_type, List instance by tag, List instances by tag value\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"AWS EC2 CLI List Examples - Describe instances | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"How to List EC2 instances with AWS CLI. AWS CLI EC2 examples. How to use AWS CLI EC2 describe instances to get the list of running instances. List running instances command line aws cli, List the instances associated with security group, List instance by instance_type, List instance by tag, List instances by tag value\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2020-01-07T23:07:07+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-07-10T11:59:35+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2019-11-22-at-4.24.52-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1594\" \/>\n\t<meta property=\"og:image:height\" content=\"1306\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/01\/Screenshot-2019-11-22-at-4.24.52-PM.png\",\"width\":1594,\"height\":1306},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/\",\"name\":\"AWS EC2 CLI List Examples - Describe instances | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#primaryimage\"},\"datePublished\":\"2020-01-07T23:07:07+00:00\",\"dateModified\":\"2022-07-10T11:59:35+00:00\",\"description\":\"How to List EC2 instances with AWS CLI. AWS CLI EC2 examples. How to use AWS CLI EC2 describe instances to get the list of running instances. List running instances command line aws cli, List the instances associated with security group, List instance by instance_type, List instance by tag, List instances by tag value\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"AWS EC2 CLI List Examples &#8211; Describe instances | Devops Junction\",\"datePublished\":\"2020-01-07T23:07:07+00:00\",\"dateModified\":\"2022-07-10T11:59:35+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#primaryimage\"},\"articleSection\":\"AWS\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4493"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=4493"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4493\/revisions"}],"predecessor-version":[{"id":8852,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4493\/revisions\/8852"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/4700"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=4493"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=4493"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=4493"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}