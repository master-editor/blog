{"id":7048,"date":"2021-11-22T01:36:22","date_gmt":"2021-11-21T20:06:22","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=7048"},"modified":"2022-01-01T14:59:19","modified_gmt":"2022-01-01T09:29:19","slug":"ansible-map","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/","title":{"rendered":"Ansible Map Examples &#8211; Filter List and Dictionaries | Devops Junction"},"content":{"rendered":"<p>In this article, we are going to see the various use cases of Ansible Map Function or Filter.<\/p>\n<p>As Ansible Official documentation claims, All Jinja2 Filters can be used within Ansible.<\/p>\n<p>One such function or filter is <code>map<\/code><\/p>\n<p>It helps us to filter and iterate complex datasets and a list of objects. Helps in filtering the attributes or in applying other available filters onto the list like <code>replace<\/code> etc<\/p>\n<p>In this article, we will cover various examples of Ansible Map and how to use them in real-time.<\/p>\n<p>Let&#8217;s go ahead.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map.png\"><img class=\"post-img alignnone wp-image-7484 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map.png\" alt=\"Ansible Map\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map.png 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map-300x213.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map-1024x726.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map-768x545.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map-1536x1090.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map-90x65.png 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<h2>What is Ansible Map Filter and How it works?<\/h2>\n<p>Ansible Map Filter does two things<\/p>\n<ul>\n<li>It applies a filter on a sequence of objects<\/li>\n<li>It looks up an attribute.<\/li>\n<\/ul>\n<p>This is useful when dealing with lists of objects but you are really only interested in a certain value of it.<\/p>\n<p>The basic usage of map is to look up an attribute.\u00a0 Let&#8217;s cover it first<\/p>\n<p>Imagine you have a list of users but you are only interested in a list of usernames:<\/p>\n<div>\n<p>for example consider the following employee data with lot of values like first name, lastname, address, mobile etc.\u00a0 But what I want is only their <code>city<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">names: [ {\r\n        \"first\": \"Paul\",\r\n        \"last\": \"Thompson\",\r\n        \"mobile\": \"+1-234-31245543\",\r\n        \"ctc\": \"100000\",\r\n        \"address\": {\r\n          \"city\": \"LasVegas\",\r\n          \"country\": \"USA\"\r\n        }\r\n      },\r\n      {\r\n        \"first\": \"Sarav\",\r\n        \"last\": \"AK\",\r\n        \"mobile\": \"+919876543210\",\r\n        \"ctc\": \"200000\",\r\n        \"address\": {\r\n          \"city\": \"Chennai\",\r\n          \"country\": \"India\"\r\n        }\r\n\r\n      }]<\/pre>\n<\/div>\n<p>So this is how,\u00a0 ansible map can help to list only the cities from the employee data.<\/p>\n<div>\n<pre>{{ names | map(attribute='address') | map(attribute='city')}}<\/pre>\n<\/div>\n<p>Or to get only the First Names<\/p>\n<div>\n<pre>{{ names | map(attribute='first') | join(',') }}<\/pre>\n<\/div>\n<div><\/div>\n<div>\n<h2>Ansible Map Filter Examples &#8211; Looking up an Attribute<\/h2>\n<p>Here is the playbook with multiple Ansible Map filter examples with <code>attribute<\/code> selection<\/p>\n<p>Each task has self-explanatory comments for you to understand what exactly they are doing.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: filter test\r\n  hosts: localhost\r\n  vars: \r\n    \r\n    names: [ {\r\n        \"first\": \"Paul\",\r\n        \"last\": \"Thompson\",\r\n        \"mobile\": \"+1-234-31245543\",\r\n        \"ctc\": \"100000\",\r\n        \"address\": {\r\n          \"city\": \"LasVegas\",\r\n          \"country\": \"USA\"\r\n        }\r\n      },\r\n      {\r\n        \"first\": \"Rod\",\r\n        \"last\": \"Johnson\",\r\n        \"mobile\": \"+1-584-31551209\",\r\n        \"ctc\": \"300000\",\r\n        \"address\": {\r\n          \"city\": \"Boston\",\r\n          \"country\": \"USA\"\r\n        }\r\n      },\r\n      {\r\n        \"first\": \"Sarav\",\r\n        \"last\": \"AK\",\r\n        \"mobile\": \"+919876543210\",\r\n        \"ctc\": \"200000\",\r\n        \"address\": {\r\n          \"city\": \"Chennai\",\r\n          \"country\": \"India\"\r\n        }\r\n\r\n      }]\r\n  tasks:\r\n  \r\n  # Map Filter only selective attributes from list of objects [{},{}]\r\n  - name: Select and Extract only the cities \r\n    debug: \r\n      msg=\"{{ names | map(attribute='address') | map(attribute='city')}}\"\r\n\r\n  # using attirubtes with list of objects [{},{}] - Selecting only mobile numbers\r\n  - name: Select and Extract only mobile numbers\r\n    debug:\r\n      msg: \"{{ names | map(attribute='mobile') }}\"\r\n\r\n  # Select Attributes Joined with Comma in Singleline ( By Default it returns a List)\r\n  - debug: msg={{ names | map(attribute='first') | join(',') }} \r\n  - debug: msg={{ names | map(attribute='last') | join(',') }} \r\n\r\n  # Convert the lastname to uppercase\r\n  - debug: msg={{ names | map(attribute='last') | map('upper') }} \r\n\r\n  # Convert the CTC attriute to float value\r\n  - debug: msg={{ names | map(attribute='ctc') | map('float') }}\r\n\r\n  # Appending USD to each CTC value and print\r\n  - debug: msg={{ names | map(attribute='ctc') | product(['USD']) | map('join',' ')}}\r\n<\/pre>\n<\/div>\n<p>The Primary use of <code>map<\/code> filter is with attribute selection from the sequence of elements or objects.<\/p>\n<p>It helps us to select only the values we want from the huge dataset.<\/p>\n<p>In the preceding playbook, you can see we have various examples of map attribute selection.<\/p>\n<p>The last three examples have additional map another filter like <code>upper<\/code> and <code>float<\/code> etc.<\/p>\n<p>The <code>join<\/code> is used to format the output to single-line string which is otherwise a list.\u00a0 As map returns a list by default.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>Here is the output of this playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-linenumbers=\"false\" data-enlighter-theme=\"bootstrap4\">PLAY [filter test] ***************************************************************************************************************************************************************\r\n\r\nTASK [Gathering Facts] ***********************************************************************************************************************************************************\r\nok: [localhost]\r\n\r\nTASK [Select and Extract only the cities] ***************************************************************************************************************************************************\r\nok: [localhost] =&gt; {\r\n    \"msg\": [\r\n        \"LasVegas\",\r\n        \"Boston\",\r\n        \"Chennai\"\r\n    ]\r\n}\r\n\r\nTASK [Select only Attributes from List of Objects - Selecting only mobile numbers] ***********************************************************************************************\r\nok: [localhost] =&gt; {\r\n    \"msg\": [\r\n        \"+1-234-31245543\",\r\n        \"+1-584-31551209\",\r\n        \"+919876543210\"\r\n    ]\r\n}\r\n\r\nTASK [debug] *********************************************************************************************************************************************************************\r\nok: [localhost] =&gt; {\r\n    \"msg\": \"Paul,Rod,Sarav\"\r\n}\r\n\r\nTASK [debug] *********************************************************************************************************************************************************************\r\nok: [localhost] =&gt; {\r\n    \"msg\": \"Thompson,Johnson,AK\"\r\n}\r\n\r\nTASK [debug] *********************************************************************************************************************************************************************\r\nok: [localhost] =&gt; {\r\n    \"msg\": [\r\n        \"THOMPSON\",\r\n        \"JOHNSON\",\r\n        \"AK\"\r\n    ]\r\n}\r\n\r\nTASK [debug] *********************************************************************************************************************************************************************\r\nok: [localhost] =&gt; {\r\n    \"msg\": [\r\n        100000.0,\r\n        300000.0,\r\n        200000.0\r\n    ]\r\n}\r\n\r\nTASK [debug] *********************************************************************************************************************************************************************\r\nok: [localhost] =&gt; {\r\n    \"msg\": [\r\n        \"100000 USD\",\r\n        \"300000 USD\",\r\n        \"200000 USD\"\r\n    ]\r\n}<\/pre>\n<p>&nbsp;<\/p>\n<h2>Ansible Map Examples &#8211; using other Filters<\/h2>\n<p>The Second but major role of Ansible <code>map<\/code> filter is to apply an another filter on a sequence of objects\/lists.<\/p>\n<p>Let&#8217;s suppose you have a list of names you want to convert all of them to an <code>upper<\/code> case strings.<\/p>\n<p>For this example, you can consider the same dataset we have used in our first playbook.<\/p>\n<p>In fact, we had one task to convert the last name to upper case like this<\/p>\n<pre>- debug: msg={{ names | map(attribute='last') | map('upper') }}<\/pre>\n<p>which resulted in the upper case converting last names like this.<\/p>\n<pre>TASK [debug] *********************************************************************************************************************************************************************\r\nok: [localhost] =&gt; {\r\n\"msg\": [\r\n\"THOMPSON\",\r\n\"JOHNSON\",\r\n\"AK\"\r\n]\r\n}<\/pre>\n<p>This is just a simple example on Applying other filters using map.<\/p>\n<p>There are more advanced uses of this scenario.<\/p>\n<p>&nbsp;<\/p>\n<h3>Using Replace filter with Ansible Map<\/h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible Map with Other Filters\r\n  hosts: localhost\r\n  vars: \r\n    servers: \r\n      - \"AppServer01\"\r\n      - \"AppServer02\"\r\n      - \"WebServer01\"\r\n      - \"WebServer02\"\r\n  tasks: \r\n    - name: Append the Domain Name to the end of the hosts\r\n      debug: \r\n        msg={{servers|map('lower')|map('regex_replace','^(.+)$','\\\\1.gritfy.io')}}<\/pre>\n<p>In the preceding Playbook, you can see we have list of hostnames assigned to the variable named <code>servers<\/code><\/p>\n<p>they are in Camel case which needs to be converted to <code>lower<\/code> case and a valid domain name <code>gritfy.io<\/code> has to be added at the end of each host.<\/p>\n<p>Here comes the map to the help<\/p>\n<pre>{{servers|map('lower')|map('regex_replace','^(.+)$','\\\\1.gritfy.io')}}<\/pre>\n<p>we use two <code>map<\/code> filters here, one is to convert them to <code>lower<\/code> case and another one is to apply <code>regex_replace<\/code> filter to replace each hostname with a proper domain suffix.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>here is the execution output of this playbook look like<\/p>\n<p>you can see that the hostnames are now in lower case with proper domain extensions.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-scaled.jpg\"><img class=\"post-img alignnone wp-image-7477 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-scaled.jpg\" alt=\"\" width=\"2560\" height=\"1319\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-scaled.jpg 2560w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-300x155.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-1024x528.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-768x396.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-1536x791.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Screenshot-2021-11-22-at-1.04.41-AM-2048x1055.jpg 2048w\" sizes=\"(max-width: 2560px) 100vw, 2560px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3>Using Extract filter in Ansible Map &#8211;\u00a0 with List\/Sequence<\/h3>\n<p>Extract filter within Ansible map used to map list of indices to list of values. the list of values can be a simple list or sequence or complex hashtable aka dictionary.<\/p>\n<p>let us first see how an ansible map can be used to iterate a simple list<\/p>\n<p>Here is the example playbook where we have a list of values (names) and we want to take certain names based on their positional index.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: filter test\r\n  hosts: localhost\r\n  tasks: \r\n    - name: Extract Filter with Ansible Map - Select based on indices\r\n      debug: \r\n        msg={{ [0,2] | map('extract', ['Sarav','Hanu','Gopi']) | list }}<\/pre>\n<p>Now we are taking only the <code>0th<\/code> and <code>2nd<\/code> element from the list.<\/p>\n<p>The result would be <code>Sarav, Gopi<\/code>\u00a0 as they are on 0 and 2nd place based on the indices value<\/p>\n<h3><\/h3>\n<h3>Using Extract filter in Ansible Map &#8211;\u00a0 with Dictionary\/Hashtable<\/h3>\n<p>As we have already seen how Ansible <code>map<\/code> filter can be used to select or filter an element using numeric index values.<\/p>\n<p>Let us see an example of how it can be used with <code>dictionary<\/code> also called as <code>hash table<\/code><\/p>\n<p>Unlike the simple list, the dictionary would contain <code>string<\/code> index as most often called as <code>key<\/code><\/p>\n<p>Consider the following dataset of employees at Gritfy<\/p>\n<pre>{ \r\n\"sarav\":{ \"mobile\":\"985643210\",\"email\":\"sarav@gritfy.com\", \"city\":\"Coimbatore\" }, \r\n\"hanu\":{ \"mobile\":\"7865432109\",\"email\":\"hanu@gritfy.com\",\"city\":\"Hyderabad\" }, \r\n\"gopi\":{ \"mobile\":\"9812990123\",\"email\":\"gopi@gritfy.com\",\"city\":\"Chennai\" } \r\n}<\/pre>\n<p>Now I want to perform a few iterations and select different values from this dataset using <code>extract<\/code> and <code>map<\/code><\/p>\n<p>Here is the playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name:  Ansible Map Extract filter\r\n  hosts: localhost\r\n  vars: \r\n        employees:\r\n          { \r\n            \"sarav\":{ \"mobile\":\"985643210\",\"email\":\"sarav@gritfy.com\", \"city\":\"Coimbatore\" }, \r\n            \"hanu\":{ \"mobile\":\"7865432109\",\"email\":\"hanu@gritfy.com\",\"city\":\"Hyderabad\" }, \r\n            \"gopi\":{ \"mobile\":\"9812990123\",\"email\":\"gopi@gritfy.com\",\"city\":\"Chennai\" } \r\n          }\r\n  tasks: \r\n    - name: Task1 - Select only Sarav's records from the Dictionary or Hash table\r\n      debug: \r\n        msg={{ ['sarav']| map('extract', employees ) }}\r\n\r\n    - name: Task2 - Select Hanu's record and look for his email ID using Third argument\r\n      debug: \r\n        msg=\" Hanu`s Email ID is {{ ['hanu']| map('extract', employees, 'email') | last}} \"\r\n    \r\n    - name: Task3 - Select Gopi's record and look for his City using Third argument\r\n      debug: \r\n        msg=\" Gopi is residing in {{ ['gopi']| map('extract', employees, 'city') | last }} \"\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>we have three tasks here<\/p>\n<ul>\n<li><span style=\"color: #222222; font-family: courier;\"><span style=\"font-size: 18px; background-color: #e9ebec;\">Task1<\/span><\/span>task is to lookup only Sarav&#8217;s records from the employees dataset<\/li>\n<li><code>Task2<\/code> is to lookup Hanu&#8217;s records first and then to look up his email ID using the third argument<\/li>\n<li><code>Task3<\/code>\u00a0 is to lookup Gopi&#8217;s records first and then to select his city using third argument<\/li>\n<\/ul>\n<p>Here is the execution output of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-scaled.jpg\"><img class=\"post-img alignnone wp-image-7482 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-scaled.jpg\" alt=\"\" width=\"2560\" height=\"1573\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-scaled.jpg 2560w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-300x184.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-1024x629.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-768x472.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-1536x944.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/AnsibleMap-Extract-1-2048x1258.jpg 2048w\" sizes=\"(max-width: 2560px) 100vw, 2560px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>Ansible Map is an advanced topic and it&#8217;s a little hard to understand at the beginning<\/p>\n<p>I personally have spent a long time understanding the different usage of Ansible Map and I know I have more to learn.<\/p>\n<p>In a nutshell, Ansible Map helps us in two ways<\/p>\n<ul>\n<li>To look up an attribute<\/li>\n<li>To apply other filters on list and dictionaries<\/li>\n<\/ul>\n<p>we have learnt various examples on both these scenarios and use cases.<\/p>\n<p>A highlight here is the map with <code>extract<\/code> filter. this is more helpful while parsing <code>hostvars<\/code> and their elements.<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>If you have any comments, feedback or best practices please use the comments section or write to us.<\/p>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nSarav<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577509\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"7048\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577509\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577509\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this article, we are going to see the various use cases of Ansible Map Function or Filter. As Ansible Official documentation claims, All Jinja2 Filters can be used within Ansible. One such function or filter is map It helps us to filter and iterate complex datasets and a list[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":7484,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible Map Examples - Filter List and Dictionaries | Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible Map Examples. How to use Ansible Map filter to lookup attributes and to apply filters on list or dictionary with examples. Ansible Map Extract Example.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible Map Examples - Filter List and Dictionaries | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible Map Examples. How to use Ansible Map filter to lookup attributes and to apply filters on list or dictionary with examples. Ansible Map Extract Example.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2021-11-21T20:06:22+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-01T09:29:19+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/11\/Ansible_Map.png\",\"width\":1748,\"height\":1240,\"caption\":\"Ansible Map\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/\",\"name\":\"Ansible Map Examples - Filter List and Dictionaries | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#primaryimage\"},\"datePublished\":\"2021-11-21T20:06:22+00:00\",\"dateModified\":\"2022-01-01T09:29:19+00:00\",\"description\":\"Ansible Map Examples. How to use Ansible Map filter to lookup attributes and to apply filters on list or dictionary with examples. Ansible Map Extract Example.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible Map Examples &#8211; Filter List and Dictionaries | Devops Junction\",\"datePublished\":\"2021-11-21T20:06:22+00:00\",\"dateModified\":\"2022-01-01T09:29:19+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7048"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=7048"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7048\/revisions"}],"predecessor-version":[{"id":7497,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7048\/revisions\/7497"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/7484"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=7048"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=7048"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=7048"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}