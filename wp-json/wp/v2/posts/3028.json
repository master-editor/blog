{"id":3028,"date":"2019-04-15T09:53:11","date_gmt":"2019-04-15T04:23:11","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=3028"},"modified":"2022-10-07T01:37:56","modified_gmt":"2022-10-06T20:07:56","slug":"docker-tomcat-example-dockerfile-sample","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/","title":{"rendered":"Docker Tomcat Example &#8211; Dockerfile for Tomcat, Docker Tomcat Image"},"content":{"rendered":"<p>In this post, we are going to learn how to install a Tomcat Application Server or Web Container on Docker and Deploy web applications into the Tomcat running inside Docker.\u00a0 This post is all about Docker Tomcat and deploying war web application into tomcat docker, Sample Docker Tomcat image, Dockerfile for tomcat<\/p>\n<p>In this Docker tomcat example, We will start with Creating a Tomcat Docker Image and Create a Docker Container from that image and Learn how to Manage the Container and Deploy our Web Application to the Tomcat running on Docker.<\/p>\n<h2>Steps to Build Docker Tomcat Image<\/h2>\n<ul>\n<li>Step1: Creating Tomcat Docker Image ( Dockerfile)<\/li>\n<li>Step2: Build the Image<\/li>\n<li>Step3: Publishing to Docker ( So that you can reuse the image globally)<\/li>\n<li>Additional: How can you download and reuse this image<\/li>\n<li>Step4: Starting the Container from the Tomcat Docker Image<\/li>\n<li>Step5: Access the Sample Web Application Deployed already<\/li>\n<li>Commands to Manage your Docker Tomcat Container<\/li>\n<li>Way forward to Deploy this container to Kubernetes<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h2>Prerequisites<\/h2>\n<p>We are presuming that you have all these items checked from the following CheckList<\/p>\n<ol>\n<li>Prior Knowledge of Tomcat<\/li>\n<li>Basic Knowledge of Docker and Container ( <a href=\"https:\/\/www.middlewareinventory.com\/blog\/category\/docker\/\">Refer this articles, If you want to refresh<\/a>)<\/li>\n<li>Working Environment with Docker CE and Internet Connectivity<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h2>Step1: Creating Docker Tomcat Image &#8211; Example<\/h2>\n<p>First Let us start with Creating a New Directory (workspace) in which we are going to create our Dockerfile and Copy the Web Applications and other configuration files which needs to be shared with the Container.<\/p>\n<p>You can also use the Existing directory but creating a new and Separate directory for your all your container projects are recommended for Clean infrastructure<\/p>\n<h3>Creating a Work Space Directory (or) Use the Existing one.<\/h3>\n<p>I have created a new directory named <code>\"<span class=\"s1\">\/apps\/docker\/DockerTomcat\"<\/span><\/code>\u00a0 Along the way till the end of this article, I would refer this directory as\u00a0 <code>WORKSPACE<\/code> directory<\/p>\n<p>&nbsp;<\/p>\n<h3>Creating a DockerFile &#8211; Docker\u00a0Tomcat Image<\/h3>\n<p>Inside the workspace,\u00a0 we are going to create a Dockerfile with the following content<\/p>\n<p>Note*: Dockerfile must start with &#8216;D&#8217; as upper case.<\/p>\n<blockquote><p>\u00a0In the Dockerfile, I have used the tomcat download URL of my region. you can replace it with the functioning tomcat download url for your region.\u00a0 You can get your download link <a href=\"https:\/\/downloads.apache.org\/tomcat\/tomcat-8\/v8.5.40\">here<\/a><\/p><\/blockquote>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">FROM centos\r\n\r\nMAINTAINER rumenlishkoff@gmail.com\r\n\r\nRUN mkdir \/opt\/tomcat\/\r\n\r\nWORKDIR \/opt\/tomcat\r\nRUN curl -O https:\/\/www-eu.apache.org\/dist\/tomcat\/tomcat-8\/v8.5.40\/bin\/apache-tomcat-8.5.40.tar.gz\r\nRUN tar xvfz apache*.tar.gz\r\nRUN mv apache-tomcat-8.5.40\/* \/opt\/tomcat\/.\r\nRUN yum -y install java\r\nRUN java -version\r\n\r\nWORKDIR \/opt\/tomcat\/webapps\r\nRUN curl -O -L https:\/\/github.com\/AKSarav\/SampleWebApp\/raw\/master\/dist\/SampleWebApp.war\r\n\r\nEXPOSE 8080\r\n\r\nCMD [<span style=\"color: #aa5500;\">\"\/opt\/tomcat\/bin\/catalina.sh\"<\/span>, <span style=\"color: #aa5500;\">\"run\"<\/span>]\r\n<\/pre>\n<\/div>\n<p>&nbsp;<\/p>\n<p>Here<\/p>\n<p><code>MAINTAINER<\/code>\u00a0\u2013 Who Crate and manage this container image<\/p>\n<p><code>FROM<\/code>\u00a0\u2013 What is the base image, we are going to use to host our container. you can either use a minimal OS image like CentOS, Alpine or you can create your\u00a0own from the scratch by mentioning SCRATCH as a value to this.<\/p>\n<p><code>RUN<\/code>\u00a0\u2013 Commands to Run to make the image( the future container) in the way you want<\/p>\n<p><code>EXPOSE<\/code>\u00a0Do you want your image or application in the image to expose any port to the external world or at least to the host.\u00a0 For example if you are building Apache HTTP server image you can EXPOSE port 80, In our case it is 8080<\/p>\n<p><code>CMD<\/code>\u00a0The Default Command of the container which gets created using this image.\u00a0 Every Container must have a Default Command. the Container would run as long as the Default Command is running.<\/p>\n<p><code>ADD<\/code>\u00a0or\u00a0<code>COPY<\/code>\u00a0The files you want to copy into the container from your host.<\/p>\n<p><span style=\"color: #222222; font-family: courier;\"><span style=\"font-size: 16px; background-color: #e9ebec;\">WORKDIR<\/span><\/span> Define a workspace where the upcoming (or) following set of commands\/instructions\u00a0 should be executed in<\/p>\n<p>Here you can see we have used WORKDIR twice, One is to execute set of commands on the TOMCAT_HOME\/CATALINA_HOME\u00a0 another WORKDIR is to download the Sample Application WAR file and deploy the war into Docker Tomcat Container.<\/p>\n<blockquote><p><strong>\u00a0Note*:\u00a0 Built-In step for an Application Deployment<\/strong><\/p>\n<p>The Docker Container Image we are creating has an instruction to Deploy an application directly from one of our github page (download the war file) and the version of tomcat we are going to build is 8.5.40<\/p>\n<p>Make necassary Changes if you opt for a different version.<\/p>\n<p>Make you get the Downloadable Link of Tomcat right so that your image gets created with no issues.<\/p><\/blockquote>\n<h2>Step2: Build the Docker Tomcat Image<\/h2>\n<p>On the same WorkSpace Directory where our Dockerfile is residing. Run the following command to build the image.<\/p>\n<p>The Syntax of the Docker Image command is<\/p>\n<p><code>docker build -t [Name Of the Image]\u00a0 .<\/code><\/p>\n<p>Here the PERIOD . (DOT) represents the Current working directory which is also part of the syntax<\/p>\n<p>&nbsp;<\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #aa0000;\">$ <\/span><span style=\"color: #993366;\">docker build -t saravak\/tomcat8 .\r\n<\/span>\r\nSending build context to Docker daemon   38.4kB\r\nStep 1\/13 : FROM centos\r\n &#8211; -&gt; 1e1148e4cc2c\r\nStep 2\/13 : MAINTAINER aksarav@middlewareinventory.com\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; af1217ce46de\r\nStep 3\/13 : RUN mkdir \/opt\/tomcat\/\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; 4c38afae9d54\r\nStep 4\/13 : WORKDIR \/opt\/tomcat\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; a725d7431b50\r\nStep 5\/13 : RUN curl -O https:\/\/www-eu.apache.org\/dist\/tomcat\/tomcat-8\/v8.5.40\/bin\/apache-tomcat-8.5.40.tar.gz\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; 91e7bc7726ff\r\nStep 6\/13 : RUN tar xvfz apache*.tar.gz\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; 629328c4f4d2\r\nStep 7\/13 : RUN mv apache-tomcat-8.5.40\/* \/opt\/tomcat\/.\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; f501f3c72f61\r\nStep 8\/13 : RUN yum -y install java\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; 345972c4e662\r\nStep 9\/13 : RUN java -version\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; ccb7b9f52541\r\nStep 10\/13 : WORKDIR \/opt\/tomcat\/webapps\r\n &#8211; -&gt; Running in 83e328f92c1a\r\nRemoving intermediate container 83e328f92c1a\r\n &#8211; -&gt; 8e8d29c51fd8\r\nStep 11\/13 : RUN curl -O https:\/\/github.com\/AKSarav\/SampleWebApp\/raw\/master\/dist\/SampleWebApp.war\r\n &#8211; -&gt; Running in cdc45a9204a9\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   149  100   149    0     0     66      0  0:00:02  0:00:02 &#8211; :--: &#8211;    66\r\nFROM centos\r\nRemoving intermediate container cdc45a9204a9\r\n &#8211; -&gt; b064cd141999\r\nStep 12\/13 : EXPOSE 8080\r\n &#8211; -&gt; Running in dd17c8c97189\r\nRemoving intermediate container dd17c8c97189\r\n &#8211; -&gt; cc5acb3cb1f8\r\nStep 13\/13 : CMD [<span style=\"color: #aa5500;\">\"\/opt\/tomcat\/bin\/catalina.sh\"<\/span>, <span style=\"color: #aa5500;\">\"runt\"<\/span>]\r\n &#8211; -&gt; Running in f8bf12a4e567\r\nRemoving intermediate container f8bf12a4e567\r\n &#8211; -&gt; 2b61f132794e\r\nSuccessfully built 2b61f132794e\r\nSuccessfully tagged saravak\/tomcat8:latest\r\n<\/pre>\n<\/div>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p><span style=\"color: #156d99;\">But why did I name my image as &#8220;saravak\/tomcat8&#8221; instead of\u00a0 just Tomcat8<\/span><\/p>\n<p>Here <code>saravak<\/code> is my Docker Login Name \/ Docker User Name.<\/p>\n<p>It is always recommended to Name the image you are creating with your Docker User Name, So that when you are publishing the Image to Docker hub. ( A Central Shared Repository) it would be easy and People across the world can just download your image by specifying the same name that you have set.<\/p>\n<p>For Example, If you want to download this image, you can simply use\u00a0<code>docker pull saravak\/tomcat8<\/code> That&#8217;s all.<\/p>\n<p>So when you create your images, Please make sure you use your Docker Login Name.<\/p>\n<p>&nbsp;<\/p>\n<h2>Step3: Publish or Push the image to DockerHub<\/h2>\n<p>Before you start publishing the images to DockerHub. It is necessary that you have to create your Docker Hub (or) Docker Account.\u00a0 Visit\u00a0 <a href=\"https:\/\/hub.docker.com\/\">hub.docker.com<\/a><\/p>\n<p>Once you have set up your username in Docker Hub.<\/p>\n<p>Log in to Docker Hub from the Docker CLI<\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #aa0000;\">$ <\/span><span style=\"color: #993366;\">docker login<\/span>\r\nLogin with your Docker ID to push and pull images from Docker Hub. If you don<span style=\"color: #ff0000; background-color: #ffaaaa;\">'<\/span>t have a Docker ID, head over to https:\/\/hub.docker.com to create one.\r\n<span style=\"color: #156d99;\">Username: saravak<\/span>\r\nPassword:\r\nLogin Succeeded\r\n\r\n<\/pre>\n<\/div>\n<p>Once the Login succeeded.<\/p>\n<p>Publish\/Push the image you have created to Docker Hub. Based on your Internet speed you can see the Upload gets completed in a couple of minutes.<\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #aa0000;\">$ <\/span><span style=\"color: #993366;\">docker push saravak\/tomcat8\r\n<\/span>\r\nThe push refers to repository [docker.io\/saravak\/tomcat8]\r\nbfc9fd0939b7: Pushed\r\nf6b1f20ff3ed: Pushed\r\n6d21360e64a0: Pushed\r\n4a62c00a3c78: Pushed\r\n0bc97febfdbb: Pushed\r\n0f861fa8dd99: Pushed\r\nc1117571ffb4: Pushed\r\n071d8bd76517: Mounted from library\/centos\r\nlatest: digest: sha256:8ede588ad0bb944e62765fdb40b21f7ebdc6587afa00efc7570ede4c7f0786fa size: 1996\r\n<\/pre>\n<\/div>\n<p>&nbsp;<\/p>\n<p>Once the image is uploaded (or) Pushed, The entire world can reuse your image as we have mentioned earlier using <strong>docker pull<\/strong><\/p>\n<p>&nbsp;<\/p>\n<h2>Additional: How to download this Docker Tomcat Image?<\/h2>\n<p>You can use docker CLI to download the image directly and create a container.<\/p>\n<p><span style=\"color: #156d99;\">To Download this image Just use the following DOCKER CLI command<\/span><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #000000;\">docker pull saravak\/tomcat8\r\n<\/span><\/pre>\n<\/div>\n<p>Once you have downloaded this image, This image would be available in your local image repository.<\/p>\n<p>use either of following commands to make sure the image is present<\/p>\n<p><span style=\"color: #156d99;\">to list all the images in your local repository use the following command<\/span><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #000000;\">docker images<\/span><\/pre>\n<\/div>\n<p><span style=\"color: #156d99;\">to list only the subjected tomcat image use the following command<\/span><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #000000;\">docker image ls saravak\/tomcat8\r\n<\/span><\/pre>\n<\/div>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3><span style=\"color: #db0d4e;\">Do I have to do Docker Pull If I want to download this image before Running it as a container?<\/span><\/h3>\n<p>The Answer is <strong>NO<\/strong>, Docker By default, would download the image from Docker Hub if the image is not available in the local image repository.\u00a0 So it is not necessary that you have to explicitly do the <strong>docker pull<\/strong><\/p>\n<p>&nbsp;<\/p>\n<h2>Step4: Run Docker Tomcat image as a container.<\/h2>\n<p>Now the Image is ready and available in Docker Hub. Irrespective of, If the image is available locally or not. You can start the image as a container.<\/p>\n<p>As mentioned earlier,\u00a0 Docker would search for the image in DockerHub if it is not available in local.<\/p>\n<p><span style=\"color: #156d99; font-size: 14pt;\">So the command given below can even be run at your Host from anywhere in the world. as long as you are connected to the internet. Docker would do the rest.<\/span><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #aa0000;\">$ <\/span><span style=\"color: #993366;\">docker container run -it -d &#8211; name tomcatcontainer1 -p 8081:8080 saravak\/tomcat8<\/span>\r\nd6f0859b69d216885e8671d9d024f7bdfb82e7a2af1b40fbc8016e36c51313a7\r\n<\/pre>\n<\/div>\n<p>Here<\/p>\n<p><code>-it:<\/code> to enable Interactive Session\/SSH to get into the container at a later point in time<\/p>\n<p><code>-d:<\/code> Run the container in the background (always recommended)<\/p>\n<p><code>--name:<\/code> name your container<\/p>\n<p><code>saravak\/tomcat8:<\/code> the Image used to create this container. the Image instantiated as a container<\/p>\n<p><code>-p 8081:8080:<\/code>\u00a0 Forwarding the Container port 8080 to Host 8081<\/p>\n<p><span style=\"color: #156d99;\">Congratz. we started a Docker Tomcat Container<\/span><\/p>\n<p>To quickly verify, if your container use <code>docker ps<\/code> command. Then at the end of this post, we will share more commands to manage your container<\/p>\n<p>&nbsp;<\/p>\n<h2>Step5: Access the Deployed\/Built-In SampleWebApp<\/h2>\n<p>Since we have port forwarding and redirecting the container 8080 to the Host (mac\/windows\/Linux) 8081. We can access the Sample Web Application installed inside the tomcat container at the following URL<\/p>\n<p><code>http:\/\/localhost:8081\/SampleWebApp<\/code><\/p>\n<p>In my case, my Host machine is MAC OS so I can directly hit the URL in the browser.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-15-at-9.21.34-AM.png\"><img class=\"alignnone size-full wp-image-3307\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-15-at-9.21.34-AM.png\" alt=\"Docker Tomcat Container Deployment\" width=\"1146\" height=\"826\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-15-at-9.21.34-AM.png 1146w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-15-at-9.21.34-AM-300x216.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-15-at-9.21.34-AM-768x554.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-15-at-9.21.34-AM-1024x738.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-15-at-9.21.34-AM-90x65.png 90w\" sizes=\"(max-width: 1146px) 100vw, 1146px\" \/><\/a><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Docker Commands Cheat Sheet<\/h2>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"><span style=\"color: #00ff00;\"># How to start and stop the container<\/span> <\/span>\r\n\r\ndocker stop &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt;  <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># to stop the container which is running in background mode<\/span>\r\ndocker container start &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># to start the already stopped container<\/span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\"># monitoring the Container <\/span>\r\n\r\ndocker container <span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">list<\/span> <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># list the containers created<\/span>\r\ndocker container ls -a  <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#to list the containers including not running containers<\/span>\r\ndocker ps    <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#to list the running container<\/span>\r\ndocker info <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#docker engine status including container running\/paused\/stopped containers list<\/span>\r\ndocker container stats &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#prints the CPU and MEM usage data of the container name<\/span>\r\ndocker container stats <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#prints the CPU and MEM usage of all running containers<\/span>\r\ndocker container top &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#executes the top command in the container specified, fails if the specified container is not running<\/span>\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\">\r\n# How to remove\/delete the container<\/span>\r\n\r\ndocker container rm &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Remove the Container <\/span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\"># How to remove\/delete the image\r\n<\/span>\r\ndocker container rmi &lt;imagename\/imageid&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Remove the image<\/span>\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\"># How to view the logs of the running container<\/span>\r\n\r\ndocker container logs &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># to view the logs of the container <\/span><\/pre>\n<p>&nbsp;<\/p>\n<h2>Deploy this Tomcat container to Kubernetes Cluster<\/h2>\n<p>I have written a detailed and exclusive article on how to use this image in your Kubernetes cluster and deploy this tomcat image into Kubernetes cluster as a pod\/deployment.<\/p>\n<p>Refer this article.<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"RJQufbVTcc\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/deploy-tomcat-kubernetes\/\">How to Deploy Tomcat on Kubernetes Step by Step<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;How to Deploy Tomcat on Kubernetes Step by Step&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/deploy-tomcat-kubernetes\/embed\/#?secret=RJQufbVTcc\" data-secret=\"RJQufbVTcc\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n<p><strong>Further References:<\/strong><\/p>\n<ul>\n<li>Tomcat &#8211;\u00a0<a href=\"http:\/\/tomcat.apache.org\/\">http:\/\/tomcat.apache.org\/\u00a0<\/a><\/li>\n<li>Docker &#8211;\u00a0<a href=\"https:\/\/www.docker.com\/\">https:\/\/www.docker.com\/<\/a><\/li>\n<\/ul>\n<p>Hope this article helps<\/p>\n<p>Let me know how is this article by leaving a comment<\/p>\n<p>For any help or questions contact me on comments or write me an email<\/p>\n<p>Cheers,<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577419\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"3028\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577419\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577419\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to learn how to install a Tomcat Application Server or Web Container on Docker and Deploy web applications into the Tomcat running inside Docker.\u00a0 This post is all about Docker Tomcat and deploying war web application into tomcat docker, Sample Docker Tomcat image, Dockerfile[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":3309,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[152],"tags":[267,263,265,264,266],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Docker Tomcat Example - Dockerfile for Tomcat, Docker Tomcat Image<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Docker Tomcat Example - Dockerfile for Tomcat, Docker Tomcat Image\" \/>\n<meta property=\"og:description\" content=\"In this post, we are going to learn how to install a Tomcat Application Server or Web Container on Docker and Deploy web applications into the Tomcat running inside Docker.\u00a0 This post is all about Docker Tomcat and deploying war web application into tomcat docker, Sample Docker Tomcat image, Dockerfile[...]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-04-15T04:23:11+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-10-06T20:07:56+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/ContainerSky.jpeg\" \/>\n\t<meta property=\"og:image:width\" content=\"1081\" \/>\n\t<meta property=\"og:image:height\" content=\"692\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/ContainerSky.jpeg\",\"width\":1081,\"height\":692,\"caption\":\"Docker tomcat Container\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/\",\"name\":\"Docker Tomcat Example - Dockerfile for Tomcat, Docker Tomcat Image\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#primaryimage\"},\"datePublished\":\"2019-04-15T04:23:11+00:00\",\"dateModified\":\"2022-10-06T20:07:56+00:00\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Docker Tomcat Example &#8211; Dockerfile for Tomcat, Docker Tomcat Image\",\"datePublished\":\"2019-04-15T04:23:11+00:00\",\"dateModified\":\"2022-10-06T20:07:56+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#primaryimage\"},\"keywords\":\"Deploy Tomcat in Docker,Docker Tomcat,Docker Tomcat Container,Docker Tomcat Example,Tomcat In Docker\",\"articleSection\":\"Docker\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3028"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=3028"}],"version-history":[{"count":6,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3028\/revisions"}],"predecessor-version":[{"id":9150,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3028\/revisions\/9150"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/3309"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=3028"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=3028"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=3028"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}