{"id":7359,"date":"2021-10-17T00:59:45","date_gmt":"2021-10-16T19:29:45","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=7359"},"modified":"2022-01-12T01:50:52","modified_gmt":"2022-01-11T20:20:52","slug":"ansible-playbook-to-delete-old-log-files-windows","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/","title":{"rendered":"Ansible Playbook to Delete OLD Log files &#8211; Windows | Devops Junction"},"content":{"rendered":"<p>Ansible for Windows has grown a lot from what it used to be, and the <a href=\"https:\/\/docs.ansible.com\/ansible\/2.9\/modules\/list_of_windows_modules.html\">number of modules<\/a> for windows is also increasing steadily.<\/p>\n<p>So Ansible is the right choice going forward for Windows Server Automation tasks.\u00a0 Of course, you need to use Powershell commands here and there. but collectively the task can be done with efficiency if you choose ansible.<\/p>\n<p>This article and the other few articles yet to be published are going to be on the <strong>Windows and Ansible Combo<\/strong>. Stay connected to get updates.<\/p>\n<p>Onward to the objective<\/p>\n<p>In this article, we are going to share an Ansible playbook that finds the following tasks.<\/p>\n<ul>\n<li>Traverse through the <strong>list of directories<\/strong> and find the <strong>list of old log files<\/strong> based on the <strong>Modified time (Age)<\/strong> and <strong>Regex<\/strong> <strong>Pattern<\/strong>.<\/li>\n<li>Traverse through the collected list of files and <strong>remove<\/strong> them<\/li>\n<\/ul>\n<p>This playbook would be helpful for sysadmins and DevOps engineers who are managing Windows Servers<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find.jpg\"><img class=\"post-img alignnone wp-image-7368 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find.jpg\" alt=\"ansible windows\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find.jpg 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find-300x213.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find-1024x726.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find-768x545.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find-1536x1090.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find-90x65.jpg 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<h2><span style=\"color: #e32071;\">Ansible<\/span> Playbook to <span style=\"color: #e32071;\">Find and delete<\/span> old log files <span style=\"color: #e32071;\">Windows<\/span><\/h2>\n<p>Here is the source code of the playbook.\u00a0 We will see each task on this playbook in detail.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">---\r\n- name: House Keeping old log files\r\n  hosts: win\r\n  vars:\r\n    directories: ['C:\\inetpub\\logs\\LogFiles','C:\\IBM\\WebSphere\\AppServer\\profiles\\AppSrv01\\logs']\r\n    filepattern: ['*.log']\r\n    age: 3d\r\n  tasks:\r\n    - name: Find Log LogFiles\r\n      tags: always\r\n      win_find:\r\n        paths: \"{{directories}}\"\r\n        age: \"{{age}}\"\r\n        age_stamp: mtime\r\n        patterns: \"{{filepattern}}\"\r\n        recurse: yes\r\n      register: filestoremove\r\n\r\n    - name: list of files to be removed\r\n      tags: always\r\n      vars:\r\n        files: \"{{ filestoremove.files | json_query('[].path') }}\"\r\n      debug: var=files\r\n      when: filestoremove.matched &gt; 0\r\n\r\n    - name: remove the files found - this would work only when you call the &#8211; tags=delete\r\n      tags: never,delete\r\n      vars:\r\n        files: \"{{ filestoremove.files | json_query('[].path') }}\"\r\n      win_file:\r\n        path: \"{{item}}\"\r\n        state: absent\r\n      with_items:\r\n        - \"{{files}}\"\r\n      when: filestoremove.matched &gt; 0<\/pre>\n<p>Let us decode the key elements and tasks in our playbook<\/p>\n<p><code>hosts<\/code> we are running these tasks against a host group named <strong>win<\/strong><\/p>\n<p><code>vars<\/code> we are defining necessary variables at the beginning of the playbook.<\/p>\n<ul>\n<li><code>directories<\/code>\u00a0 List (or) An array of directories in Fully Qualified path within single quotes ( as Windows Paths sometimes contains Spaces)<\/li>\n<li><code>filepattern<\/code>\u00a0 List (or) An array of patterns with Wildcard\/RegEx like <code>*.log *.out<\/code> etc.<\/li>\n<li><code>age<\/code> A number of seconds\/minutes\/hours\/days\/weeks old files would only be considered. You can choose seconds, minutes, hours, days or weeks by specifying the first letter of an of those words (e.g., &#8220;2s&#8221;, &#8220;10d&#8221;, &#8220;1w&#8221;).<\/li>\n<\/ul>\n<p>Now we have declared the necessary variables and host group.<\/p>\n<p>It is a time for putting them to the right use within our tasks. In our playbook, we have three tasks, we will see each of them in detail<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Task1: Find the matching files with <span style=\"color: #e32071;\">win_find<\/span> module<\/h3>\n<p>In this task, we are using the Ansible windows module <code>win_find<\/code> an equivalent to the ansible linux <code>find<\/code> module<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">- name: Find Log LogFiles\r\n  tags: always\r\n  win_find: \r\n    paths: \"{{directories}}\"\r\n    age: \"{{age}}\"\r\n    age_stamp: mtime\r\n    patterns: \"{{filepattern}}\"\r\n    recurse: yes\r\n  register: filestoremove\r\n<\/pre>\n<p>there is a special tag named <code>always<\/code> used in this task. It is used to tell ansible that this task can be executed all the time safely.<\/p>\n<p>Like <code>always<\/code> we have one more special tag called <code>never<\/code> which helps us to run the task only when explicitly called for with <code>--tags<\/code>.\u00a0 we have used both always and never in this playbook.<\/p>\n<p>Read more about <a href=\"https:\/\/docs.ansible.com\/ansible\/latest\/user_guide\/playbooks_tags.html#special-tags-always-and-never\">Ansible Special tags always and never<\/a><\/p>\n<ul>\n<li><code>paths<\/code>\u00a0 List of directories as a list, we are passing the variable named directories declared earlier<\/li>\n<li><code>age<\/code>\u00a0 Age of files to consider seconds\/days\/weeks. the value given earlier for the <strong>age<\/strong> variable would be passed here<\/li>\n<li><code>patterns<\/code>\u00a0 One or more (PowerShell or regex) patterns to compare filenames with.<\/li>\n<li><code>recurse<\/code> to let windows find module to know that sub directories should be considered while looking for the files.<\/li>\n<li><code>age_stamp<\/code>\u00a0 there are various methods to calculate the age of the files as follows\n<ul>\n<li><code>ctime<\/code> based on the created time<\/li>\n<li><code>mtime<\/code> modified time<\/li>\n<li><code>atime<\/code> based on the last accessed time<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>in our case we chose <code>mtime<\/code> to find the files based on the modified time of the file. which is a default value for the <code>age_stamp<\/code> too.<\/p>\n<p>we are saving the output of this task into a register variable named <code>filestoremove<\/code><\/p>\n<p>&nbsp;<\/p>\n<h3>Task2:\u00a0 Display the list of files found to purge\/remove<\/h3>\n<p>The Second task in our playbook is a simple Debug to list the files found by the previous task.<\/p>\n<p>we are simply displaying the filenames stored on the first task&#8217;s register variable.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">- name: list of files to be removed\r\n  tags: always\r\n  vars: \r\n    files: \"{{ filestoremove.files | json_query('[].path') }}\"\r\n  debug: var=files\r\n  when: filestoremove.matched &gt; 0<\/pre>\n<p>we have a conditional element here and it would let the task be executed only when there are any matched files present on the register variable.<\/p>\n<p>it is done with the help of <code>when<\/code> conditional parameter and a simple comparison statement.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-changed_when-and-failed_when-examples\/\">You can learn more about conditional execution in ansible from this article.<\/a><\/p>\n<p>when the value of <code>filestoremove.matched<\/code> is greater than <code>0<\/code> the task would be executed otherwise skipped.<\/p>\n<p>we are using <code>JSONQuery<\/code> filter of ansible to list only the filenames from the entire output.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible_json_query\/\">we have a dedicated article on Ansible JSONQuery with Examples<\/a> you can refer<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Task3:\u00a0 A Task to remove the found or matched files &#8211; <span style=\"color: #e32071;\">win_file<\/span> module<\/h3>\n<p>This task is to delete the files that we have found on the first task.<\/p>\n<p>As I have mentioned earlier, we have used a special tag named <code>never<\/code> which would make sure that there would not be any accident \/ unintended file deletion when the playbook is executed.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"godzilla\" data-enlighter-linenumbers=\"false\">- name: remove the files found - this would work only when you call the &#8211; tags=delete\r\n  tags: never,delete\r\n  vars: \r\n    files: \"{{ filestoremove.files | json_query('[].path') }}\"\r\n  win_file: \r\n    path: \"{{item}}\"\r\n    state: absent\r\n  with_items: \r\n    - \"{{files}}\"\r\n  when: filestoremove.matched &gt; 0<\/pre>\n<p>Since we have the third task as <code>never<\/code> and would only to work when explicitly invoked with <code>--tags=delete<\/code><\/p>\n<p>The Default behaviour of our playbook is to run the first two tasks only. thereby it would only find the list of files and display it NOT delete it.<\/p>\n<p>So even if the playbook gets accidentally executed you are covered.<\/p>\n<p>we are using the same json query we have used in the previous section to filter only the file names along with the path and save them to a variable named <code>files<\/code><\/p>\n<p>the <code>files<\/code> variables are being iterated using <code>with_items<\/code> loop and each entry in the files list would be removed using <code>win_file<\/code> module.<\/p>\n<p>&nbsp;<\/p>\n<h2><span style=\"color: #db146e;\">Conclusion<\/span><\/h2>\n<p>Hope this playbook helps you automate the Log management and keeping your windows server&#8217;s disk space stable.<\/p>\n<p>In this article, Besides our primary Objective, we have also covered a few interesting features of ansible you might want to read further to get a full understanding<\/p>\n<p>I have summarized the list of items here<\/p>\n<ul>\n<li>using special tags <code>never<\/code> and <code>always<\/code><\/li>\n<li>using <code>json_query<\/code> to select elements from the dictionary ( we can use <code>selectattr<\/code> function also for this with map)<\/li>\n<li>looping through the dictionary with <code>with_items<\/code><\/li>\n<li>conditional execution of a task in ansible using <code>when<\/code> etc<\/li>\n<\/ul>\n<p>Hope this helps.<\/p>\n<p>If you are looking for any professional support long term \/ short term in DevOps \/ Cloud.<\/p>\n<p>Please try <a href=\"https:\/\/gritfy.com\">Gritfy<\/a><\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>Cheers<br \/>\nSarav<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578247\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"7359\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578247\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578247\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Ansible for Windows has grown a lot from what it used to be, and the number of modules for windows is also increasing steadily. So Ansible is the right choice going forward for Windows Server Automation tasks.\u00a0 Of course, you need to use Powershell commands here and there. but collectively[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":7368,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible Playbook to Delete OLD Log files - Windows | Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible Windows example and playbook to delete aged log files. Ansible win_find and win_file module example. Ansible Windows Disk management house keeping playbook.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible Playbook to Delete OLD Log files - Windows | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible Windows example and playbook to delete aged log files. Ansible win_find and win_file module example. Ansible Windows Disk management house keeping playbook.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2021-10-16T19:29:45+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-11T20:20:52+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/10\/ansible-windows-find.jpg\",\"width\":1748,\"height\":1240,\"caption\":\"ansible windows\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/\",\"name\":\"Ansible Playbook to Delete OLD Log files - Windows | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#primaryimage\"},\"datePublished\":\"2021-10-16T19:29:45+00:00\",\"dateModified\":\"2022-01-11T20:20:52+00:00\",\"description\":\"Ansible Windows example and playbook to delete aged log files. Ansible win_find and win_file module example. Ansible Windows Disk management house keeping playbook.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible Playbook to Delete OLD Log files &#8211; Windows | Devops Junction\",\"datePublished\":\"2021-10-16T19:29:45+00:00\",\"dateModified\":\"2022-01-11T20:20:52+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-to-delete-old-log-files-windows\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7359"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=7359"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7359\/revisions"}],"predecessor-version":[{"id":7381,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7359\/revisions\/7381"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/7368"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=7359"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=7359"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=7359"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}