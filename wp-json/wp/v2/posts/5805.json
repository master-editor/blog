{"id":5805,"date":"2020-11-30T03:55:08","date_gmt":"2020-11-29T22:25:08","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=5805"},"modified":"2022-07-02T12:03:04","modified_gmt":"2022-07-02T06:33:04","slug":"kubernetes-sidecar-logging-with-fluentd-to-efk","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/","title":{"rendered":"Kubernetes Sidecar &#8211; Logging with FluentD to EFK"},"content":{"rendered":"<h2>Introduction<\/h2>\n<p>Log management in Infrastructure has changed tremendously in recent few years and we are a having wonderful products in the market to manage, parse, analyze log files<\/p>\n<p>These tools are being used extensively for incident management, alerting, security analysis and application performance monitoring etc.<\/p>\n<p>In the Opensource market, Elastic Search or <a href=\"https:\/\/www.elastic.co\/what-is\/elk-stack\">ELK Stack <\/a>is leading and makes it possible for small to medium companies to afford this wonderful log management solutions. while Splunk leads the enterprise market.<\/p>\n<p>If you are not already aware, ELK stack is a combination of three open source projects, Elastic Search, Log Stash and Kibana and they come together to give you a combined log management experience and each one of them has a job to do.<\/p>\n<ul>\n<li><strong>Elastic Search<\/strong> &#8211; Search and Data analytics Engine just like <a href=\"https:\/\/lucene.apache.org\/solr\/\">Apache Solr<\/a>, <a href=\"https:\/\/lucene.apache.org\/\">Lucene<\/a><\/li>\n<li><strong>Log Stash<\/strong> &#8211; Data processing and ingesting tool sends\/stash to Elastic search<\/li>\n<li><strong>Kibana<\/strong> &#8211; A Visualizing tool for the data stored in Elastic create graphs, alerts etc.<\/li>\n<\/ul>\n<p>Hope this gives you a quick intro to ELK. but we are going to use <strong>EFK<\/strong>. what is EFK?<\/p>\n<h2>ELK vs EFK<\/h2>\n<p>You know what is ELK already and what is this EFK. It is an acronym of<strong> Elastic FluentD Kibana<\/strong><\/p>\n<p><img class=\"n3VNCb alignnone\" title=\"post-img\" src=\"https:\/\/www.cncf.io\/wp-content\/uploads\/2020\/07\/image3.png\" alt=\"Logging in Kubernetes: EFK\" width=\"784\" height=\"176\" data-noaft=\"1\" \/><\/p>\n<p>If you have not heard\/read about <a href=\"https:\/\/www.fluentd.org\/\">fluentD<\/a> yet. This is your lucky day.<\/p>\n<p>FluentD is a wonderful Log Collector tool just like Log Stash ( far better than) and it serves as unified logging platform yet Simple<\/p>\n<p>Based on my personal experience. I found Log stash really hard to implement with <strong>GROK<\/strong> patterns and FluentD saved me. ( I mean it )<\/p>\n<p>There is a lightweight log shipping product from Elastic named <a href=\"https:\/\/www.elastic.co\/beats\/\">Beats<\/a> as an alternate for LogStash. but it does not meet the efficiency and simplicity of <code>fluentd<\/code><\/p>\n<p>With no further ado, let us talk about our objective of implementing the Kubernetes FluentD Sidecar container.<\/p>\n<p>&nbsp;<\/p>\n<h2>Our Objective<\/h2>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-10.38.49-PM.png\"><img class=\"post-img alignnone wp-image-6518 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-10.38.49-PM.png\" alt=\"Elastic Search Kubernetes FluentD Tomcat\" width=\"979\" height=\"585\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-10.38.49-PM.png 979w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-10.38.49-PM-300x179.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-10.38.49-PM-768x459.png 768w\" sizes=\"(max-width: 979px) 100vw, 979px\" \/><\/a><\/p>\n<p>We have a tomcat based web application container to be deployed into Kubernetes.<\/p>\n<p>I would like to collect and ship my tomcat logs and application logs from kubernetes to a remote elastic search server.<\/p>\n<p>we are going to use the <strong>Elastic FluentD Kibana (EFK)<\/strong> stack using Kubernetes sidecar container strategy.<\/p>\n<blockquote><p><strong>Why Sidecar logging and not K8s Cluster level logging<\/strong><\/p>\n<p>Not all the containers we deploy to K8s is writing logs to stdout, though it is recommended, It does not suit all requirements<\/p>\n<p>Let&#8217;s say I containerize my Java web app deployed on tomcat writes its own log files like Audit log, Application log etc.<\/p>\n<p>I cannot obviously redirect all of them to the same stream.<\/p>\n<p>Additionally, what if I want these log files to go to different Indexes in my Elastic Search for Monitoring and auditing.<\/p>\n<p>Well, that&#8217;s where Sidecar comes to help.<\/p><\/blockquote>\n<p>FluentD should have access to the log files written by tomcat and it is being achieved through Kubernetes <strong>Volume<\/strong> and <strong>volume mounts<\/strong><\/p>\n<p>FluentD would ship the logs to the remote Elastic search server using the IP and port along with credentials.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Steps to deploy fluentD as a Sidecar Container<\/h2>\n<p>To deploy fluentD as a sidecar container on Kubernetes POD. we need to create a few configuration elements like ConfigMap, Volumes, Deployment etc.<\/p>\n<p>We will see all of them in detail one by one.<\/p>\n<h3><\/h3>\n<h3>ConfigMap &#8211; to store fluentd config file<\/h3>\n<p>Our first task is to create a Kubernetes <a href=\"https:\/\/kubernetes.io\/docs\/concepts\/configuration\/configmap\/\">ConfigMap<\/a> object to store the fluentd configuration file. You can store any non-confidential key-value data in ConfigMap object including files.<\/p>\n<p>Here we are creating a ConfigMap named <code>fluentdconf<\/code> with the key name equivalent to the\u00a0 resulting filename <code>fluent.conf<\/code><\/p>\n<p>This ConfigMap with <code>key:value<\/code> data set would later be mounted into the POD. where the key would be the file name and the value would be stored into the file.<\/p>\n<p>We have defined three major tags (or) root elements in the fluent.conf file<\/p>\n<ul>\n<li>Source &#8211; to define the file details to monitor\/lookup and to set format to look out for<\/li>\n<li>filter &#8211;\u00a0 customizing the event collected and overwriting fields (or) adding fields<\/li>\n<li>Match &#8211; to define what to do with the matching data\/log events and where to stash.<\/li>\n<\/ul>\n<p>you can write your own format using RUBY Regular Expression (or) use built-in formats like <code>apache2<\/code> to event filtering.<\/p>\n<p>Under the <code>match<\/code> root element, we have to define our Elastic Search server details and credentials along with the index name to which we are sending the logs.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3 none repeat scroll 0% 0%; color: #000000;\"><span class=\"hljs-attr\" style=\"color: #5c2699;\">apiVersion:<\/span> v1\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">kind:<\/span> ConfigMap\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">metadata:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  name:<\/span> fluentdconf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  namespace:<\/span> development\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">data:<\/span>\r\n  fluent.conf: <span class=\"hljs-string\" style=\"color: #c41a16;\">|\r\n      &lt;source&gt;\r\n        @type tail\r\n        time_key time\r\n        format multiline\r\n        format_firstline \/^\\[[[A-Z]|\\s]+\\]\/\r\n        format1 \/^\\[(?&lt;LogLevel&gt;[[A-Z]|\\s]+)\\]\\[(?&lt;time&gt;[0-9]{4}-[0-9]{2}-[0-9]{2}\\s[0-9]{2}\\:[0-9]{2}\\:[0-9]{2}\\,[0-9]{3})\\]\\s-\\s(?&lt;message&gt;.*+)$\/\r\n        path \/opt\/tomcat\/webapps\/ROOT\/WEB-INF\/log\/myapp.log\r\n        pos_file \/tmp\/myapp.log.pos\r\n        tag dev.myapp.applogs\r\n      &lt;\/source&gt;\r\n\r\n      &lt;filter dev.myapp.applogs&gt;\r\n        @type record_transformer\r\n        &lt;record&gt;\r\n        hostname ${hostname}\r\n        &lt;\/record&gt;\r\n      &lt;\/filter&gt;\r\n\r\n      &lt;match dev.myapp.applogs&gt;\r\n        @type elasticsearch\r\n        host 172.99.1.218\r\n        port 59200\r\n        user elasticusr\r\n        password Pa$$w0rd\r\n        index_name fluentd.${tag}\r\n        logstash_format true\r\n        logstash_prefix dev.myapp.applogs\r\n        flush_interval 1s\r\n      &lt;\/match&gt;\r\n\r\n      &lt;source&gt;\r\n        @type tail\r\n        path \/opt\/tomcat\/logs\/localhost_access_log.%Y-%m-%d.txt\r\n        pos_file \/tmp\/tomcataccesslog.pos\r\n        tag dev.myapp.tomcatlogs\r\n        format apache2\r\n      &lt;\/source&gt;\r\n\r\n      &lt;filter dev.myapp.tomcatlogs&gt;\r\n        @type record_transformer\r\n        &lt;record&gt;\r\n        hostname ${hostname}\r\n        &lt;\/record&gt;\r\n      &lt;\/filter&gt;\r\n\r\n      &lt;match dev.myapp.tomcatlogs&gt;\r\n        @type elasticsearch\r\n        host 172.99.1.218\r\n        port 59200\r\n        user elasticusr\r\n        password Pa$$w0rd\r\n        logstash_format true\r\n        logstash_prefix dev.myapp.tomcatlogs\r\n      &lt;\/match&gt;\r\n<\/span><\/pre>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h3>Creating our Docker Container Images<\/h3>\n<p>As discussed earlier, we are going to have two containers in our POD. <code>Tomcat<\/code> as a primary container with our application pre-deployed and a sidecar container <code>fluentd<\/code><\/p>\n<h4><strong>Tomcat Docker file<\/strong><\/h4>\n<p>this is the Dockerfile content for our tomcat image and it has been discussed in detail in <a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-tomcat-example-dockerfile-sample\">our previous article here<\/a><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"dockerfile\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">FROM centos\r\n\r\nRUN mkdir \/opt\/tomcat\/\r\n\r\nWORKDIR \/opt\/tomcat\r\nRUN curl -O https:\/\/downloads.apache.org\/tomcat\/tomcat-8\/v8.5.76\/bin\/apache-tomcat-8.5.76.tar.gz\r\nRUN tar xvfz apache*.tar.gz\r\nRUN mv apache-tomcat-8.5.76\/* \/opt\/tomcat\/.\r\nRUN sed -i -e \"s|mirrorlist=|#mirrorlist=|g\" \/etc\/yum.repos.d\/CentOS-*; sed -i -e \"s|#baseurl=http:\/\/mirror.centos.org|baseurl=http:\/\/vault.centos.org|g\" \/etc\/yum.repos.d\/CentOS-*\r\nRUN yum -y install java\r\nRUN java -version\r\n\r\nWORKDIR \/opt\/tomcat\/webapps\r\nRUN curl -O -L https:\/\/github.com\/AKSarav\/SampleWebApp\/raw\/master\/dist\/SampleWebApp.war\r\n\r\nEXPOSE 8080\r\n\r\nCMD [\"\/opt\/tomcat\/bin\/catalina.sh\", \"run\"]<\/pre>\n<p>&nbsp;<\/p>\n<p>You can make changes to the image and build it with your desired name like this<\/p>\n<pre>docker build -t tomcat8 .<\/pre>\n<p>If you do not want to make customizations you can pull it locally (or) just use my image name globally <a href=\"https:\/\/hub.docker.com\/u\/saravak\">available from docker hub<\/a><\/p>\n<pre>docker pull saravak\/tomcat8<\/pre>\n<p>&nbsp;<\/p>\n<blockquote><p>\u00a0<strong>Note*:<\/strong>\u00a0 The URL we have used in the Dockerfile to download tomcat often be updated by tomcat or there could be different download url available for different regions across the world.<\/p>\n<p>If you are getting any issues with the link.<\/p>\n<p>Please visit <a href=\"https:\/\/tomcat.apache.org\/download-80.cgi\">https:\/\/tomcat.apache.org\/download-80.cgi<\/a> to get the latest download URL and update it, in your dockerfile.<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<h4><strong>FluentD Docker file<\/strong><\/h4>\n<p>Content for fluentD container&#8217;s Dockerfile is given below.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3 none repeat scroll 0% 0%; color: #000000;\"><span class=\"hljs-keyword\" style=\"color: #aa0d91;\">FROM<\/span> ubuntu:<span class=\"hljs-number\" style=\"color: #1c00cf;\">16.04<\/span> \r\n<span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\">apt-get update \r\n<\/span><span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\"><span class=\"hljs-built_in\" style=\"color: #5c2699;\">ulimit<\/span> -n 65536 \r\n<\/span><span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\">apt-get install -y curl \r\n<\/span><span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\">curl https:\/\/packages.treasuredata.com\/GPG-KEY-td-agent | apt-key add -\r\n<\/span><span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\"><span class=\"hljs-built_in\" style=\"color: #5c2699;\">echo<\/span> <span class=\"hljs-string\" style=\"color: #c41a16;\">\"deb http:\/\/packages.treasuredata.com\/3\/ubuntu\/xenial\/ xenial contrib\"<\/span> &gt; \/etc\/apt\/sources.list.d\/treasure-data. list\r\n<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\">apt-get update &amp;&amp; apt-get install -y -q curl make g++ &amp;&amp; apt-get clean &amp;&amp; apt-get install -y td-agent &amp;&amp; rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* \r\n<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\">sed -i <span class=\"hljs-_\">-e<\/span> <span class=\"hljs-string\" style=\"color: #c41a16;\">\"s\/USER=td-agent\/USER=root\/\"<\/span> <span class=\"hljs-_\">-e<\/span> <span class=\"hljs-string\" style=\"color: #c41a16;\">\"s\/GROUP=td-agent\/GROUP=root\/\"<\/span> \/etc\/init.d\/td-agent \r\n<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #aa0d91;\">RUN<\/span> <span class=\"bash\">\/usr\/sbin\/td-agent-gem install fluent-plugin-aws-elasticsearch-service -v 1.0.0 CMD \/usr\/sbin\/td-agent <span class=\"hljs-variable\" style=\"color: #666600;\">$FLUENTD_ARGS<\/span><\/span><\/pre>\n<p>&nbsp;<\/p>\n<p>As said earlier you can build your own docker image out of this file (or) simply use my globally available image <code>saravak\/fluentd<\/code><\/p>\n<p>So before proceeding further, you need to have the docker images ready.<\/p>\n<p>Either your custom-built docker image available in your local (or) you can choose to use my globally available docker images from docker hub<\/p>\n<p>I am going with the global image for this article.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Creating a Kubernetes Deployment Manifest Yaml file<\/h3>\n<p>Our Container images are ready and we can use the images in our Kubernetes Deployment manifest.<\/p>\n<p>Rather than using the POD manifest, Deployment kind has various advantages including the creation of replication controller,\u00a0 application roll-out, pod replacement etc<\/p>\n<p><code>Deployment<\/code> is the ideal way to deploy Microservices to Production Kubernetes<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3 none repeat scroll 0% 0%; color: #000000;\"><span class=\"hljs-attr\" style=\"color: #5c2699;\">apiVersion:<\/span> apps\/v1\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">kind:<\/span> Deployment\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">metadata:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  name:<\/span> myapp-dpl\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  namespace:<\/span> development\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  labels:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    app:<\/span> myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">spec:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  replicas:<\/span> <span class=\"hljs-number\" style=\"color: #1c00cf;\">1<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  selector:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    matchLabels:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      app:<\/span> myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  template:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    metadata:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      labels:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        environment:<\/span> DEV\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        managedby:<\/span> K8s\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        app:<\/span> myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    spec:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      containers:<\/span>\r\n\r\n      <span class=\"hljs-comment\" style=\"color: #006a00;\"># Primary Container<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> tomcat\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        image:<\/span>  saravak\/tomcat8\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        volumeMounts:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          - name:<\/span> applog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">            mountPath:<\/span> \/opt\/tomcat\/webapps\/ROOT\/WEB-INF\/log\/\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          - name:<\/span> tomcatlog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">            mountPath:<\/span> \/opt\/tomcat\/logs\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        ports:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - containerPort:<\/span> <span class=\"hljs-number\" style=\"color: #1c00cf;\">8080<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        resources:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          limits:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">            memory:<\/span> <span class=\"hljs-number\" style=\"color: #1c00cf;\">1028<\/span>Mi\r\n\r\n      <span class=\"hljs-comment\" style=\"color: #006a00;\"># This is for FluentD Logging Container<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> fluentd\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        env:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> FLUENT_UID\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          value:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> FLUENT_CONF\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          value:<\/span> fluent.conf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> FLUENTD_ARGS\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          value:<\/span> -c \/fluentd\/etc\/fluent.conf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        image:<\/span> saravak\/fluentd:elastic\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        volumeMounts:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> applog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          mountPath:<\/span> \/opt\/tomcat\/webapps\/ROOT\/WEB-INF\/log\/\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span>  fdconf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          mountPath:<\/span>  \/fluentd\/etc\/\r\n\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      volumes:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> applog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        emptyDir:<\/span> {}\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> tomcatlog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        emptyDir:<\/span> {}\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> fdconf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        configMap:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          name:<\/span> fluentdconf<\/pre>\n<p>&nbsp;<\/p>\n<p>In the preceding manifest file, we are creating an application named <code>myapp<\/code> with two containers under the <code>development<\/code> namespace<\/p>\n<p>The container names are <code>tomcat<\/code> and <code>fluentd<\/code> and the latter one is our primary objective here<\/p>\n<p>For fluentd to function properly we need to pass a few values during the container startup such as<\/p>\n<ul>\n<li><code>FLUENT_UID<\/code> &#8211; to define what user the fluent should start<\/li>\n<li><code>FLUENT_CONF<\/code> &#8211; represents the configuration file name<\/li>\n<li><code>FLUENTD_ARGS<\/code> &#8211; to define the fully qualified path of the <code>fluent.conf<\/code> file while starting the fluent with <code>-c<\/code> flag<\/li>\n<\/ul>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Volumes and Volume Mounts<\/h3>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM.png\"><img class=\"post-img alignnone wp-image-6517 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM.png\" alt=\"Kubernetes FluentD Tomcat\" width=\"640\" height=\"427\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM.png 640w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM-300x200.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM-120x80.png 120w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM-360x240.png 360w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM-600x400.png 600w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-9.58.46-PM-480x320.png 480w\" sizes=\"(max-width: 640px) 100vw, 640px\" \/><\/a><\/p>\n<p>Another important item in our deployment manifest YAML file is <code>volumes<\/code>\u00a0 and<code>Volume_mounts<\/code><\/p>\n<p>you can notice that we are creating three volumes named <code>applog<\/code>, <code>tomcatlog<\/code> and <code>fdconf<\/code><\/p>\n<ul>\n<li><code>applog<\/code> &#8211; an empty Directory volume to share the application logs directory between Tomcat and FluentD<\/li>\n<li><code>tomcatlog<\/code> &#8211; an empty Directory volume to share the tomcat logs directory between Tomcat and fluentD<\/li>\n<li><code>configMap<\/code> &#8211; ConfigMap type of volume to inject config data into the POD. in our case it is a file content stored in configMap<\/li>\n<\/ul>\n<p>These volumes would be mounted with the help of <code>volumeMounts<\/code> within the containers Tomcat and FluentD.<\/p>\n<p>When the volume is being mounted. It can be mounted to any physical location\/path. This is similar to the Unix mounts.<\/p>\n<p>Just to keep things clean I am using the same path on both containers. but it is not necessary.<\/p>\n<p>the <code>applog<\/code> and <code>tomcatlogs<\/code> volumes should be mounted to the location specified in the <code>fluent.conf<\/code> file and it should match.<\/p>\n<h3><\/h3>\n<h3>Deploying our YAML for Kubernetes FluentD Sidecar setup<\/h3>\n<p>So far we have seen how Kubernetes FluentD sidecar container is setup and the necessary elements like ConfigMap, Volume etc<\/p>\n<p>Here I have collected all these codes and compiled as a single file with one addition.<\/p>\n<p>Just to make my application available externally and to expose it, I have added a <code>service<\/code> to my final YAML file and I can deploy it right now to Kubernetes cluster<\/p>\n<p>This is the complete file with <strong>ConfigMap + Service + Deployment<\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3 none repeat scroll 0% 0%; color: #000000;\"><span class=\"hljs-attr\" style=\"color: #5c2699;\">---\r\napiVersion:<\/span> v1\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">kind:<\/span> ConfigMap\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">metadata:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  name:<\/span> fluentdconf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  namespace:<\/span> development\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">data:<\/span>\r\n  fluent.conf: <span class=\"hljs-string\" style=\"color: #c41a16;\">|\r\n      &lt;source&gt;\r\n        @type tail\r\n        time_key time\r\n        format multiline\r\n        format_firstline \/^\\[[[A-Z]|\\s]+\\]\/\r\n        format1 \/^\\[(?&lt;LogLevel&gt;[[A-Z]|\\s]+)\\]\\[(?&lt;time&gt;[0-9]{4}-[0-9]{2}-[0-9]{2}\\s[0-9]{2}\\:[0-9]{2}\\:[0-9]{2}\\,[0-9]{3})\\]\\s-\\s(?&lt;message&gt;.*+)$\/\r\n        path \/opt\/tomcat\/webapps\/ROOT\/WEB-INF\/log\/myapp.log\r\n        pos_file \/tmp\/myapp.log.pos\r\n        tag dev.myapp.applogs\r\n      &lt;\/source&gt;\r\n\r\n      &lt;filter dev.myapp.applogs&gt;\r\n        @type record_transformer\r\n        &lt;record&gt;\r\n        hostname ${hostname}\r\n        &lt;\/record&gt;\r\n      &lt;\/filter&gt;\r\n\r\n      &lt;match dev.myapp.applogs&gt;\r\n        @type elasticsearch\r\n        host 172.99.1.218\r\n        port 59200\r\n        user elasticusr\r\n        password Pa$$w0rd\r\n        index_name fluentd.${tag}\r\n        logstash_format true\r\n        logstash_prefix dev.myapp.applogs\r\n        flush_interval 1s\r\n      &lt;\/match&gt;\r\n\r\n      &lt;source&gt;\r\n        @type tail\r\n        path \/opt\/tomcat\/logs\/localhost_access_log.%Y-%m-%d.txt\r\n        pos_file \/tmp\/tomcataccesslog.pos\r\n        tag dev.myapp.tomcatlogs\r\n        format apache2\r\n      &lt;\/source&gt;\r\n\r\n      &lt;filter dev.myapp.tomcatlogs&gt;\r\n        @type record_transformer\r\n        &lt;record&gt;\r\n        hostname ${hostname}\r\n        &lt;\/record&gt;\r\n      &lt;\/filter&gt;\r\n\r\n      &lt;match dev.myapp.tomcatlogs&gt;\r\n        @type elasticsearch\r\n        host 172.99.1.218\r\n        port 59200\r\n        user elasticusr\r\n        password Pa$$w0rd\r\n        logstash_format true\r\n        logstash_prefix dev.myapp.tomcatlogs\r\n      &lt;\/match&gt;\r\n\r\n---\r\n<\/span><span class=\"hljs-attr\" style=\"color: #5c2699;\">kind:<\/span> Service\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">apiVersion:<\/span> v1\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">metadata:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  name:<\/span>  myapp-svc\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  namespace:<\/span> development\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  labels:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    app:<\/span> myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">spec:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  selector:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    app:<\/span>  myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  type:<\/span> NodePort\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  ports:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  - port:<\/span>  <span class=\"hljs-number\" style=\"color: #1c00cf;\">80<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    targetPort:<\/span>  <span class=\"hljs-number\" style=\"color: #1c00cf;\">8080<\/span>\r\n<span class=\"hljs-meta\" style=\"color: #1c00cf;\">\r\n---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">apiVersion:<\/span> apps\/v1\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">kind:<\/span> Deployment\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">metadata:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  name:<\/span> myapp-dpl\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  namespace:<\/span> development\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  labels:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    app:<\/span> myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">spec:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  replicas:<\/span> <span class=\"hljs-number\" style=\"color: #1c00cf;\">1<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  selector:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    matchLabels:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      app:<\/span> myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">  template:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    metadata:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      labels:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        environment:<\/span> DEV\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        managedby:<\/span> K8s\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        app:<\/span> myapp\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">    spec:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      containers:<\/span>\r\n\r\n      <span class=\"hljs-comment\" style=\"color: #006a00;\"># Primary Container<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> tomcat\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        image:<\/span>  saravak\/tomcat8\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        volumeMounts:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          - name:<\/span> applog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">            mountPath:<\/span> \/opt\/tomcat\/webapps\/ROOT\/WEB-INF\/log\/\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          - name:<\/span> tomcatlog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">            mountPath:<\/span> \/opt\/tomcat\/logs\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        ports:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - containerPort:<\/span> <span class=\"hljs-number\" style=\"color: #1c00cf;\">8080<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        resources:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          limits:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">            memory:<\/span> <span class=\"hljs-number\" style=\"color: #1c00cf;\">1028<\/span>Mi\r\n\r\n      <span class=\"hljs-comment\" style=\"color: #006a00;\"># This is for FluentD Logging Container<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> fluentd\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        env:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> FLUENT_UID\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          value:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> FLUENT_CONF\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          value:<\/span> fluent.conf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> FLUENTD_ARGS\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          value:<\/span> -c \/fluentd\/etc\/fluent.conf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        image:<\/span> saravak\/fluentd:elastic\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        volumeMounts:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> applog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          mountPath:<\/span> \/opt\/tomcat\/webapps\/ROOT\/WEB-INF\/log\/\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> tomcatlog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          mountPath:<\/span> \/opt\/tomcat\/logs\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span>  fdconf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          mountPath:<\/span>  \/fluentd\/etc\/\r\n\r\n      <span class=\"hljs-comment\" style=\"color: #006a00;\"># Logrotating containers:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> LogRotate\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        image:<\/span> saravak\/logrotatek8s\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        volumeMounts:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        - name:<\/span> tomcatlog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          mountPath:<\/span> \/logs\/\r\n\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      volumes:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> applog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        emptyDir:<\/span> {}\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> tomcatlog\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        emptyDir:<\/span> {}\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">      - name:<\/span> fdconf\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">        configMap:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #5c2699;\">          name:<\/span> fluentdconf<\/pre>\n<p>I save this entire configuration file as <code>myapp-deployment.yml<\/code> and creating a deployment using kubectl<\/p>\n<pre>kubectl create -f myapp-deployment.yml<\/pre>\n<p>You can also use<\/p>\n<pre>kubectl apply -f myapp-deployment.yml<\/pre>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Validating Kubernetes FluentD and Tomcat Containers in POD<\/h3>\n<p>After creating the deployment. Once you get the message &#8220;deployment created&#8221; in your terminal.<\/p>\n<p>You can give it a few seconds for the POD to get created and check if the pod is ready<\/p>\n<p><span style=\"color: #000080;\"><strong>Check if the pod is created and running with 2 containers<\/strong><\/span><\/p>\n<pre># kubectl get podsNAME                       READY STATUS  RESTARTS AGE\r\nmyapp-dpl-5f5bf998c7-m4p79 2\/2   Running 0        128d<\/pre>\n<p>you can see the status is <code>Running<\/code> and both fluentd and tomcat containers are ready<\/p>\n<p>If you see anything other than <code>2\/2<\/code> it means an issue with container startup. One of the containers might have failed.<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #000080;\"><strong>Container wise status<br \/>\n<\/strong><\/span><\/p>\n<p>If you have <code>jq<\/code> installed in your terminal. you can parse the kubectl output and display a container-wise status like this along with their name.<\/p>\n<pre><code id=\"&quot;precode\">\u2717 kubectl get pods myapp-dpl-5f5bf998c7-m4p79 -o json|jq '.status.containerStatuses[] |{Name: .name, Status: .state} '\r\n{\r\n  \"Name\": \"fluentd\",\r\n  \"Status\": {\r\n    \"running\": {\r\n      \"startedAt\": \"2020-11-16T18:44:40Z\"\r\n    }\r\n  }\r\n}\r\n{\r\n  \"Name\": \"tomcat\",\r\n  \"Status\": {\r\n    \"running\": {\r\n      \"startedAt\": \"2020-11-16T18:44:40Z\"\r\n    }\r\n  }\r\n}<\/code><\/pre>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #003366;\"><strong>Describe pod to know more information<\/strong><\/span><\/p>\n<p>If you need to more information about your POD like the volume names and the volume mount names etc<\/p>\n<p>you can use the following command<\/p>\n<pre><code>kubectl describe <code id=\"&quot;precode\">myapp-dpl-5f5bf998c7-m4p79<\/code><\/code><\/pre>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"color: #003366;\">Check the logs of Kubernetes fluentD container for any Error<\/span><br \/>\n<\/strong><\/p>\n<p>Just to make sure there are no connectivity issues and FluentD is able to connect to the Elastic Search server at the remote.<\/p>\n<p>We need to check the logs of fluentd container running inside the pod<\/p>\n<pre><code>kubectl logs <code id=\"&quot;precode\">myapp-dpl-5f5bf998c7-m4p79 fluentd<\/code><\/code><\/pre>\n<p>Since there are two containers in the POD, you have to explicitely mention the pod name after the POD name.<\/p>\n<p>&nbsp;<\/p>\n<h3>Validating the arrival of the logs at Elastic<\/h3>\n<p>Now you can log in to Kibana dashboard and validate if you are able to see the logs coming in<\/p>\n<p>The hostname on each event would match your POD name<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-30-at-2.11.09-AM.png\"><img class=\"post-img alignnone wp-image-6521 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-30-at-2.11.09-AM.png\" alt=\"Kubernetes FluentD Sidecar\" width=\"1920\" height=\"659\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-30-at-2.11.09-AM.png 1920w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-30-at-2.11.09-AM-300x103.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-30-at-2.11.09-AM-1024x351.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-30-at-2.11.09-AM-768x264.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-30-at-2.11.09-AM-1536x527.png 1536w\" sizes=\"(max-width: 1920px) 100vw, 1920px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>Hope this article helps you to understand a few concepts like Sidecar container and our primary objective of collecting and shipping the logs to Elastic Search has also been achieved.<\/p>\n<p>Kubernetes FluentD &#8211; EFK logging is really efficient and microservices ready and this would be helpful in various other microservice setups as well.<\/p>\n<p>If you have any questions or tips to make this article better. Please feel free to let me know in comments<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670576936\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"5805\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670576936\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670576936\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Introduction Log management in Infrastructure has changed tremendously in recent few years and we are a having wonderful products in the market to manage, parse, analyze log files These tools are being used extensively for incident management, alerting, security analysis and application performance monitoring etc. In the Opensource market, Elastic[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":6518,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[419,151],"tags":[420,421],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Kubernetes Sidecar - Logging with FluentD to EFK | Devops Junction<\/title>\n<meta name=\"description\" content=\"Kubernetes FluentD setup as a Sidecar container. Ship App logs to Elastic Search with FluentD. Tomcat and FluentD as a Side car container in Kubernetes POD\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Kubernetes Sidecar - Logging with FluentD to EFK | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Kubernetes FluentD setup as a Sidecar container. Ship App logs to Elastic Search with FluentD. Tomcat and FluentD as a Side car container in Kubernetes POD\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2020-11-29T22:25:08+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-07-02T06:33:04+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-10.38.49-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"979\" \/>\n\t<meta property=\"og:image:height\" content=\"585\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/11\/Screenshot-2020-11-29-at-10.38.49-PM.png\",\"width\":979,\"height\":585},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/\",\"name\":\"Kubernetes Sidecar - Logging with FluentD to EFK | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#primaryimage\"},\"datePublished\":\"2020-11-29T22:25:08+00:00\",\"dateModified\":\"2022-07-02T06:33:04+00:00\",\"description\":\"Kubernetes FluentD setup as a Sidecar container. Ship App logs to Elastic Search with FluentD. Tomcat and FluentD as a Side car container in Kubernetes POD\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Kubernetes Sidecar &#8211; Logging with FluentD to EFK\",\"datePublished\":\"2020-11-29T22:25:08+00:00\",\"dateModified\":\"2022-07-02T06:33:04+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#primaryimage\"},\"keywords\":\"fluent bit kubernetes example,kubernetes fluentd\",\"articleSection\":\"FluentD,Kubernetes\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-sidecar-logging-with-fluentd-to-efk\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5805"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=5805"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5805\/revisions"}],"predecessor-version":[{"id":8781,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5805\/revisions\/8781"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/6518"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=5805"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=5805"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=5805"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}