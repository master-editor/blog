{"id":3098,"date":"2019-03-24T14:26:07","date_gmt":"2019-03-24T08:56:07","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=3098"},"modified":"2022-02-11T01:15:36","modified_gmt":"2022-02-10T19:45:36","slug":"ansible-lineinfile-multiple-lines-replace-multiple-lines","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/","title":{"rendered":"Ansible lineinfile multiple lines &#8211; Replace multiple Lines | Devops Junction"},"content":{"rendered":"<p>In this post, we are going to see how to use Ansible lineinfile module to replace multiple Lines at the same time. How to use Multiple Regular Expressions or Regex at the same time. How to Match Multiple lines.<\/p>\n<p>For this example, we are going to take apache <code>httpd.conf<\/code> file as our base file and we are going to Replace all the WebSite related configuration in the file to make it as new WebSite.<\/p>\n<p>Simply put, we are going to migrate our Existing website\/virtualhost to the new website\/virtualhost<\/p>\n<p>Before any modification, A Quick Ad Hoc Command to Check What is the Current Configuration Values<\/p>\n<p>&nbsp;<\/p>\n<h3>Quick Command to Check What is the Current Configuration<\/h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\">$ ansible web -m shell -a 'egrep -in \"^ServerName|^ServerAdmin|^LogLevel|^DocumentRoot\" \/etc\/httpd\/conf\/httpd.conf' -i ansible_hosts \r\nmwiweb02 | CHANGED | rc=0 &gt;&gt; \r\n88:ServerAdmin aksarav@middlewareinventory.com \r\n99:ServerName www.middlewareinventory.com:80 \r\n123:DocumentRoot \"\/var\/www\/html\" \r\n193:LogLevel warn<\/pre>\n<p>&nbsp;<\/p>\n<p>With a help of ansible, ad hoc command and grep we were able to get the Current Configuration values on the remote server httpd.conf file.<\/p>\n<p>Now let us write a Playbook to Change these values all at once in a Multiple Search and Replace manner.<\/p>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Ansible Lineinfile Playbook to Replace Multiple Lines<\/h3>\n<p>Here is the playbook to replace multiple lines using lineinfile module. We have used <code>with_items<\/code> iteration\/loop statement to pass multiple values to the <code>regex<\/code> and <code>line<\/code>\u00a0 parameters at the same time.<\/p>\n<p>In lineinfile module, regex parameter used to hold the String that we are searching for and line is to hold the line which we want to replace with.<\/p>\n<p>Having said that. Now look at the Playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n  - name: Examples of lineinfile\r\n    hosts: web\r\n    tasks:\r\n      - name: \"Ansible Lineinfile Multiple Lines\"\r\n        become: yes\r\n        become_user: root\r\n        lineinfile:\r\n          path: \/etc\/httpd\/conf\/httpd.conf\r\n          # Line to Search\/Match against\r\n          regexp: '{{item.From}}'\r\n          # Line to Replace with\r\n          line: '{{item.To}}'\r\n          state: present  \r\n          # To validate the Changes Before Committing\/Saving\r\n          validate: \"httpd -t -f %s\"\r\n        with_items:\r\n         - { From: 'ServerName www.middlewareinventory.com:80', To: 'ServerName www.devopsjunction.com:80'}\r\n         - { From: 'ServerAdmin aksarav@middlewareinventory.com', To: 'ServerAdmin aksarav@devopsjunction.com'}\r\n         - { From: '^LogLevel .*', To: 'LogLevel debug'}\r\n         - { From: '^DocumentRoot .*', To: 'DocumentRoot \"\/var\/www\/devopsjunction\"'}<\/pre>\n<p>&nbsp;<\/p>\n<p>In with_items, Each Item is having two values\u00a0 <code>From<\/code> and <code>To<\/code>.<\/p>\n<p>Here,<\/p>\n<p><code>From<\/code> would be referred as <code>{{item.From}}<\/code> in the <code>regexp<\/code> parameter and the<\/p>\n<p><code>To<\/code> would be referred as\u00a0<code>{{item.To}}<\/code>\u00a0in the line parameter<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h3>Validate the Configuration using AD HOC command<\/h3>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">$ ansible web -m shell -a 'egrep -in \"^ServerName|^ServerAdmin|^LogLevel|^DocumentRoot\" \/etc\/httpd\/conf\/httpd.conf' -i ansible_hosts \r\nmwiweb02 | CHANGED | rc=0 &gt;&gt; \r\n88:ServerAdmin aksarav@devopsjunction.com \r\n99:ServerName www.devopsjunction.com:80 \r\n123:DocumentRoot \"\/var\/www\/devopsjunction\" \r\n193:LogLevel debug<\/pre>\n<p>&nbsp;<\/p>\n<p>You can see Our Requirement is Completed. We have successfully migrated the Virtual Host\/Website from one domain to another Domain. Thanks to Ansible lineinfile.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<p><strong>A Quick Caveat<\/strong> I would like to give here is that Ansible lineinfile would consider only the last matching line,<\/p>\n<p>when there are more than one entries you want to replace of the same string\/keyword. You should use <code>replace<\/code> module<\/p>\n<p>Here is the quick example.<\/p>\n<p>&nbsp;<\/p>\n<h3>Replace multiple lines and entires with Replace module<\/h3>\n<p>Sometimes you would want to replace multiple entries of some string or word.\u00a0 Additionally you would have a list of strings to be replaced.<\/p>\n<p>for example let us suppose you want to replace multiple strings and their multiple entries. You cannot use <code>line in file<\/code> module as mentioned earlier.<\/p>\n<p>Let us consider the traditional <code>Fox and Grape<\/code> story saved into a file named <code>story<\/code><\/p>\n<pre>A Fox one day spied a beautiful bunch of ripe grapes hanging from a vine trained along the branches of a tree. The grapes seemed ready to burst with juice, and the Fox's mouth watered as he gazed longingly at them.\r\n\r\nThe bunch hung from a high branch, and the Fox had to jump for it. The first time he jumped he missed it by a long way. So he walked off a short distance and took a running leap at it, only to fall short once more. Again and again he tried, but in vain.\r\n\r\nNow he sat down and looked at the grapes in disgust.\r\n\r\n\"What a fool I am,\" he said. \"Here I am wearing myself out to get a bunch of sour grapes that are not worth gaping for.\"\r\n\r\nAnd off he walked very, very scornfully.\r\n\r\nThere are many who pretend to despise and belittle that which is beyond their reach.<\/pre>\n<p>&nbsp;<\/p>\n<p>Here If you would like to make few changes like this<\/p>\n<ul>\n<li><code>Fox<\/code> to <code>Bear<\/code><\/li>\n<li><code>Grapes<\/code> to <code>Apples<\/code><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>You can notice there are multiple entries of the word <code>Fox<\/code> and <code>Grapes<\/code> in that story.<\/p>\n<p>With the follwing playbook you can change the entire story.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Change Fox to Bear and Grape to Apple\r\n  hosts: localhost\r\n  tasks:\r\n\r\n  - name: Replace multiple lines and entries\r\n    replace:\r\n      path: story\r\n      # Line to Search\/Match against\r\n      regexp: '{{item.From}}'\r\n      # Line to Replace with\r\n      replace: '{{item.To}}'\r\n    with_items:\r\n      - { From: '[fF]ox', To: 'Bear'}\r\n      - { From: '[Gg]rapes', To: 'Apples'}\r\n\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>This is a simple example I have kept to make things easy to understand.\u00a0 Ansible replace and line in file modules both support <code>regex<\/code> and <code>backrefs<\/code><\/p>\n<p>Additionally the replace module supports selection elements like <code>before<\/code> and <code>after<\/code> as well.<\/p>\n<p>Refer the following articles to know more details and examples about Replace and line in file<\/p>\n<ul>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-examples\/\">Ansible Line in file Examples <\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/\">Ansible Replace Examples<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>This is how we can do the Multiple Search and Replace using Ansible lineinfile and replace modules<\/p>\n<p>Hope this helps<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577810\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"3098\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577810\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577810\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to see how to use Ansible lineinfile module to replace multiple Lines at the same time. How to use Multiple Regular Expressions or Regex at the same time. How to Match Multiple lines. For this example, we are going to take apache httpd.conf file[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":3108,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[231,228,229,230,227],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible lineinfile multiple lines - Replace multiple Lines | Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible lineinfile multiple lines, In this post we are going to see how to replace multiple matching lines and use multiple regular expressions or regex in ansible lineinfile. How to replace line in file using ansible lineinfile playbook exampe with with_items loop. How to do Multiple Search and Replace in lineinfile\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible lineinfile multiple lines - Replace multiple Lines | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible lineinfile multiple lines, In this post we are going to see how to replace multiple matching lines and use multiple regular expressions or regex in ansible lineinfile. How to replace line in file using ansible lineinfile playbook exampe with with_items loop. How to do Multiple Search and Replace in lineinfile\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-03-24T08:56:07+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-10T19:45:36+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-24-at-2.27.35-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"831\" \/>\n\t<meta property=\"og:image:height\" content=\"544\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-24-at-2.27.35-PM.png\",\"width\":831,\"height\":544,\"caption\":\"ansible lineinfile multiple lines\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/\",\"name\":\"Ansible lineinfile multiple lines - Replace multiple Lines | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#primaryimage\"},\"datePublished\":\"2019-03-24T08:56:07+00:00\",\"dateModified\":\"2022-02-10T19:45:36+00:00\",\"description\":\"Ansible lineinfile multiple lines, In this post we are going to see how to replace multiple matching lines and use multiple regular expressions or regex in ansible lineinfile. How to replace line in file using ansible lineinfile playbook exampe with with_items loop. How to do Multiple Search and Replace in lineinfile\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible lineinfile multiple lines &#8211; Replace multiple Lines | Devops Junction\",\"datePublished\":\"2019-03-24T08:56:07+00:00\",\"dateModified\":\"2022-02-10T19:45:36+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#primaryimage\"},\"keywords\":\"ansible lineinfile example playbook,ansible lineinfile multiple lines,ansible lineinfile multiple regex,ansible multiple search and replace,ansible replace multiple lines\",\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-multiple-lines-replace-multiple-lines\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3098"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=3098"}],"version-history":[{"count":9,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3098\/revisions"}],"predecessor-version":[{"id":7222,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3098\/revisions\/7222"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/3108"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=3098"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=3098"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=3098"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}