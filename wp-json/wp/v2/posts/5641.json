{"id":5641,"date":"2020-09-06T03:14:57","date_gmt":"2020-09-05T21:44:57","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=5641"},"modified":"2022-06-19T11:19:20","modified_gmt":"2022-06-19T05:49:20","slug":"terraform-import-securitygroup-aws","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/","title":{"rendered":"Terraform import All AWS Security Groups  &#8211; How to"},"content":{"rendered":"<p>In this post, we are going to see how to manage existing and already created AWS Security groups with Terraform. The new era of Infrastructure revolution has begun already and we already started provisioning, managing, administrating our Infra as a code with help of Configuration management tools like Ansible, Terraform, SaltStack etc.<\/p>\n<p>If you are new to Terraform and to know how to use Terraform with AWS basics, Refer this article and come back here.<\/p>\n<p>With no further ado, let us jump into today&#8217;s mission.<\/p>\n<h2>The Problem we are trying to Solve<\/h2>\n<p>We know how powerful terraform and how efficient we can manage or create the Entire AWS\/GCP\/DigitalOcean Cloud Infrastructure with Terraform but we often find ourselves having a few additional resources which are created earlier often manually and not managed by Terraform.<\/p>\n<p>To bring all of these unmanaged resources (security groups) into Terraform and make them as Infra as code. We can use <code>Terraform import<\/code> command.<\/p>\n<p>But it is not productive to import these resources one by one. So I tried to automate it with Ansible and this is how it goes.<\/p>\n<p>&nbsp;<\/p>\n<h2>Importing and Managing Existing AWS Security Groups with Terraform<\/h2>\n<p>Still, many DevOps engineers are logging into AWS Management console to update the Security group Inbound and Outbound traffic routes manually like opening ports, enabling traffic route etc. There is nothing wrong about it but the problem is you cannot track the changes your team is making unless you have it under revision control. that is where the Infra as code is winning.<\/p>\n<p>Imagine you have your security group as a code and every change you make is properly committed and manged in your Git repositories like BitBucket or Github.\u00a0 Every change would be tracked with git log and commit message and there would be a backup of the configuration too in case you want to roll back. Not just that. I listed a few reasons why you should be managing your AWS Security group as a code.<\/p>\n<ul>\n<li>It enables you to track all your changes like Open\/Close ports and the reasons for the changes.<\/li>\n<li>You can do better Security Auditing with Commit messages<\/li>\n<li>Easy and efficient management<\/li>\n<li>Enabling you to automate your infrastructure further<\/li>\n<li>Easily find your publically open routes and prevent any security incident before happening<\/li>\n<li>Better Continuity of Business\/Disaster Recovery strategy.<\/li>\n<li>Allow\/Disallow IP\/Port\/Group with a single click of Jenkins job<\/li>\n<\/ul>\n<p>So I cannot insist enough to manage your AWS Security groups as a code. so now let us see how I managed to import my existing AWS security groups ( All of them ) into Terraform and manging it.<\/p>\n<p>Let us see it in a practical way. how it is possible<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible + Terraform &#8211; to the help<\/h3>\n<p>I am a fan of both Ansible and Terraform, Both are wonderful when it comes to managing the infrastructure, while Ansible is pythonic, Terraform has its own language called Hashicorp Configuration Language and supports JSON too.<\/p>\n<p>The reason why we are going to use Python here is that we are going to fetch all the Security groups and its information using Ansible&#8217;s <code>ec2_group_facts<\/code> module this can be done with the AWS CLI too but I preferred this way for better data processing.<\/p>\n<p>here is the pictorial representation of how our design is going to be.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/TerraformImport.jpg\"><img class=\"alignnone size-full wp-image-5669\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/TerraformImport.jpg\" alt=\"\" width=\"3475\" height=\"2692\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/TerraformImport.jpg 3475w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/TerraformImport-300x232.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/TerraformImport-768x595.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/TerraformImport-1024x793.jpg 1024w\" sizes=\"(max-width: 3475px) 100vw, 3475px\" \/><\/a><\/p>\n<p>If you are not able to understand my handwriting in the picture, Here I write the same for additional reference.<\/p>\n<p>In our setup. Ansible playbook is the main component which invokes both Terraform and EC2 data collection using <code>ec2_group_facts<\/code> module.<\/p>\n<p>For Ansible to be able to access AWS you need to have AWS programmatic access enabled and Authentication keys in your environment variable.<\/p>\n<pre class=\"hljs\">$ <span class=\"hljs-built_in\">export<\/span> AWS_ACCESS_KEY_ID=AK************IEVXQ\r\n$ <span class=\"hljs-built_in\">export<\/span> AWS_SECRET_ACCESS_KEY=gbaIbK*********************iwN0dGfS<\/pre>\n<p>This is enough to enable Ansible and Terraform to access your AWS Infrastructure. But however, there are few hidden details and problems you may encounter ( like i did ) you can refer the following articles in case you are stuck or let me know in comments, I will try to help as soon as I can<\/p>\n<ul>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#Environment_Setup_for_Ansible_to_work_with_AWS_EC2_module\">Setup Boto python for Ansible AWS <\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-aws-example-ec2\/#Setup_Programmatic_Access\">Setup programmatic Access for AWS \u2013 Key and Secret<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-cli-ec2\/#Install_AWS_CLI\">Install and configure AWS CLI<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-aws-example-ec2\/\">Terraform AWS Configuration Basics <\/a><\/li>\n<\/ul>\n<p>Having your environment ready for Ansible and Terraform we can proceed further.<\/p>\n<p><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png\" \/><\/p>\n<p>&nbsp;<\/p>\n<h2>How Ansible and Terraform works together<\/h2>\n<p>Having completed the Access setup for AWS and Ansible integration,\u00a0 You would be able to reach your AWS account from ansible and execute all AWS related modules.<\/p>\n<p>In this playbook also we are going to use such a module named <code>ec2_group_facts<\/code> which helps us to fetch all the information about the security groups.\u00a0 that is going to be our first step<\/p>\n<p>Then we will create a directory for each security group we are fetching from the AWS account and creating the terraform configuration files using the <code>terraform import<\/code> command and the security group id<\/p>\n<p>Once the import is complete, we need to remove a few configuration elements in the terraform configuration file such as <strong>ownerid, arn, group id<\/strong> etc, these values\/elements should be auto-populated by Terraform so terraform would not let you define it prior.<\/p>\n<p>Once we have removed these auto-generated elements\/variables from the configuration file, we are going to validate the file using the <code>terraform validate<\/code> command<\/p>\n<p>So these are the four steps we are going to perform in order to get all your Security groups managed by Terraform.<\/p>\n<p>&nbsp;<\/p>\n<h2>The Ansible Playbook to import all security groups and add to Terraform<\/h2>\n<p>So, The time has come for some code, Enough with the theory.<\/p>\n<p>Few Points to remember before executing the playbook<\/p>\n<ul>\n<li>You need to update the <code>destdir<\/code> variable where ansible would create new directories for each security group it is fetching. the directory name would be as same the security group name ( if there are spaces in the security group name it would be converted to <code>-<\/code> hyphen )<\/li>\n<li>You need to replace the vpc-id variable of your corresponding vpc<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p><strong>The Playbook<\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323 none repeat scroll 0% 0%; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\"> - name:<\/span> Security Group Playbook\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">   hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">   vars:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      destdir:<\/span> \/apps\/gritfy\/Terraform\/SecGroups\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      itemstochange:<\/span> [<span class=\"hljs-string\" style=\"color: #a5c261;\">'arn\\s+=.+$'<\/span>,<span class=\"hljs-string\" style=\"color: #a5c261;\">'\\sid\\s+=.+$'<\/span>,<span class=\"hljs-string\" style=\"color: #a5c261;\">'owner_id\\s+=.+$'<\/span>]\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">   tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> ec2 security group information fetch\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      ec2_group_facts:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        filters:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          vpc-id:<\/span> vpc<span class=\"hljs-bullet\" style=\"color: #6d9cbe;\">-0<\/span>a8ae2c90f5ca6cfa\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      register:<\/span> result\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> Creating a dictionary of Security Group IDs and Names\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      set_fact:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        secdict:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ secdict | default ([]) + [ { 'name': item.group_name.replace(' ','-'), 'id': item.group_id } ] }}<\/span> \"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      with_items:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{result.security_groups}}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      loop_control:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        label:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ item.group_name}}<\/span>\"<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> Create the Directory  \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      file:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          path:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{destdir}}<\/span>\/<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.name}}<\/span><span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.id[0:7]}}<\/span>\"<\/span> <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># required. Path to the file being managed.<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          state:<\/span> directory \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      register:<\/span> dircrt\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      loop:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{secdict}}<\/span>\"<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> Terraform Import\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">|\r\n        git init\r\n        echo 'provider \"aws\" {\\n\\tregion = \"us-east-1\"\\n} \\n\\nresource  \"aws_security_group\" \"elb_sg\" {\\n\\n}' &gt; main.tf\r\n        terraform init\r\n        terraform import aws_security_group.elb_sg <span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.id}}<\/span> \r\n        echo 'provider \"aws\" {\\n\\tregion = \"us-east-1\"\\n} \\n' &gt; main.tf\r\n        terraform show -no-color &gt;&gt; main.tf\r\n        git add .\r\n        git status\r\n        git commit -m \"Updated Git\"\r\n        pwd &amp;&amp; ls -lrt\r\n<\/span><span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      args:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        chdir:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{destdir}}<\/span>\/<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.name}}<\/span><span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.id[0:7]}}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      loop:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{secdict}}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      when:<\/span> dircrt is changed\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> Change config\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      lineinfile:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          path:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{destdir}}<\/span>\/<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.0.name}}<\/span><span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.0.id[0:7]}}<\/span>\/main.tf\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ item.1 }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          state:<\/span> absent\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          backup:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      with_nested:<\/span>\r\n<span class=\"hljs-bullet\" style=\"color: #6d9cbe;\">        -<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ secdict }}<\/span>\"<\/span>\r\n<span class=\"hljs-bullet\" style=\"color: #6d9cbe;\">        -<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ itemstochange }}<\/span>\"<\/span>\r\n      \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> Terraform Validate\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">|\r\n        terraform validate \r\n<\/span><span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      args:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        chdir:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{destdir}}<\/span>\/<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.name}}<\/span><span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{item.id[0:7]}}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      loop:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{secdict}}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      register:<\/span> tfvalidate\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      failed_when:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"'Success' not in tfvalidate.stdout\"<\/span>\r\n<\/pre>\n<p>&nbsp;<\/p>\n<h2>Ansible Playbook tasks explained<\/h2>\n<p>Let us go through the playbook and understand what each task is designed to do.<\/p>\n<h3><span style=\"color: #0b4f70;\"><strong>Task1: EC2 information fetch<\/strong><\/span><\/h3>\n<p>This task is using the module named <code>ec2_group_facts<\/code> and it uses the AWS access key and secret from your environment directly to connect to your AWS account and fetch all the security groups belong to the specific <code>vpc<\/code> which is mentioned in the arguments.\u00a0 make sure to update the <code>vpc-id<\/code> filter value before running the playbook.<\/p>\n<p>&nbsp;<\/p>\n<h3><strong><span style=\"color: #0b4f70;\">Task2:\u00a0 Creating a Dictionary with the Collected Values <\/span><br \/>\n<\/strong><\/h3>\n<p>ec2_group_facts module would result in a lot of information about the security group but all we need is a <code>security group name<\/code> and <code>security group id<\/code><\/p>\n<p>So we are iterating through the collected output from the previous task and creating a dictionary named <code>secdict<\/code> we are using <code>set_fact<\/code> module to create a variable during the runtime<\/p>\n<p>&nbsp;<\/p>\n<h3><strong><span style=\"color: #0b4f70;\">Task3:\u00a0 Creating a Directory for each security group &#8211; Naming Convention<\/span> <\/strong><\/h3>\n<p>As mentioned earlier, we would be creating dedicated directories for each security group where the Terraform configuration file of that corresponding sec group would be saved.<\/p>\n<p>The Name of this directory would be combo of the security group name and the first 7 characters of the security group id, this is to avoid duplicates. AWS does not have unique name constraint for the security group naming, so there can be one more security groups with the same name.<\/p>\n<p>&nbsp;<\/p>\n<h3><span style=\"color: #0b4f70;\"><strong>Task4:\u00a0 Terraform Importing tasks<br \/>\n<\/strong><\/span><\/h3>\n<p>in this task, we are running multiple commands one after another just like we type in a shell prompt. using <a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-shell-examples\/\">ansible shell module<\/a>\u00a0 These are list of tasks we are going to do with this task<\/p>\n<ol>\n<li>we initialize a git repo under the newly created sec group directory<\/li>\n<li>create a terraform configuration file named <code>main.tf<\/code> with AWS provider specifications<\/li>\n<li>Performing <code>terraform init<\/code> to initialize terraform on the directory<\/li>\n<li>Performing the import process with <code>terraform import<\/code> command and the corresponding security group&#8217;s id<\/li>\n<li>Writing the imported configuration back into <code>main.tf<\/code> configuration file we have created at step2<\/li>\n<li>Rest of the steps are for version controlling changes like add, commit etc.<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h3><span style=\"color: #0b4f70;\"><strong>Task5:\u00a0 Terraform file correction and removing the unwanted fields<br \/>\n<\/strong><\/span><\/h3>\n<p>In this task, we are removing the unwanted lines from the created <code>main.tf<\/code> configuration file which otherwise makes the file syntactically incorrect<\/p>\n<h3><\/h3>\n<h3><strong><span style=\"color: #0b4f70;\">Task6:\u00a0 Validate the configuration after the changes<\/span><br \/>\n<\/strong><\/h3>\n<p>Finally, we can validate if the Terraform configuration file <code>main.tf<\/code> is valid for each security group using the <code>terraform validate<\/code> command which would be executed inside all the security group directories. It has been designed to fail when the validate command returns a failure message using ansible <a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-changed_when-and-failed_when-examples\/\">failed_when<\/a><\/p>\n<h3><\/h3>\n<h2>Playbook Execution and Result<\/h2>\n<p>If you have done everything correct. You would be able to import all the security groups belong to the specific VPC in your AWS account and would be able to manage using Terraform.<\/p>\n<p>You would have directories created with the security group names beneath the workspace(destdir) directory you have defined in the playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-1.51.24-AM.png\"><img class=\"alignnone size-full wp-image-5681\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-1.51.24-AM.png\" alt=\"\" width=\"2438\" height=\"1720\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-1.51.24-AM.png 2438w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-1.51.24-AM-300x212.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-1.51.24-AM-768x542.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-1.51.24-AM-1024x722.png 1024w\" sizes=\"(max-width: 2438px) 100vw, 2438px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Make Changes in Terraform File and Apply it to verify<\/h2>\n<p>Once the configuration files are imported and ready go to any of the security group directory created and edit the <code>main.tf<\/code> file and make changes like adding a new ingress rule or changing the CIDR IP address for the allowed port number etc<\/p>\n<p>Once you have done the changes. you are good to go and <code>terraform plan<\/code> and then <code>terraform apply<\/code> it<\/p>\n<p>You would be able to see that your security group is successfully managed by Terraform.<\/p>\n<p>Any further change you would like to make to the security group can be done with Terraform Infrastructure as code technique. (Refer the video for more information)<\/p>\n<p>Congratulations.<\/p>\n<p>&nbsp;<\/p>\n<h2>Video Guide &#8211; Screen record<\/h2>\n<p>Here is the screen record of me, talking about this setup and testing this playbook in my aws account.<\/p>\n<div class=\"lyte-wrapper\" style=\"width:640px;max-width:100%;margin:5px;\"><div class=\"lyMe\" id=\"WYL_IyrGFo4Se5c\"><div id=\"lyte_IyrGFo4Se5c\" data-src=\"\/\/i.ytimg.com\/vi\/IyrGFo4Se5c\/hqdefault.jpg\" class=\"pL\"><div class=\"tC\"><div class=\"tT\"><\/div><\/div><div class=\"play\"><\/div><div class=\"ctrl\"><div class=\"Lctrl\"><\/div><div class=\"Rctrl\"><\/div><\/div><\/div><noscript><a href=\"https:\/\/youtu.be\/IyrGFo4Se5c\"><img src=\"https:\/\/i.ytimg.com\/vi\/IyrGFo4Se5c\/0.jpg\" alt=\"\" width=\"640\" height=\"340\" \/><br \/>Watch this video on YouTube<\/a><\/noscript><\/div><\/div><div class=\"lL\" style=\"max-width:100%;width:640px;margin:5px;\"><\/div><\/p>\n<p>&nbsp;<\/p>\n<p>Hope this article is helpful<\/p>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov \u0b9a\u0bb0\u0bb5\u0ba3\u0ba9\u0bcd \u0b85.\u0b95<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577663\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"5641\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577663\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577663\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to see how to manage existing and already created AWS Security groups with Terraform. The new era of Infrastructure revolution has begun already and we already started provisioning, managing, administrating our Infra as a code with help of Configuration management tools like Ansible, Terraform,[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":5683,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98,234,233],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Terraform import All AWS Security Groups - How to | Devops Junction<\/title>\n<meta name=\"description\" content=\"Import and Manage existing AWS Security groups with Terraform, Terraform import existing AWS security groups and manage them. How to import all or multiple security groups at once to terraform using ansible. Terraform Import example. Manage already created security groups with Terraform. Terraform AWS Import example.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Terraform import All AWS Security Groups - How to | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Import and Manage existing AWS Security groups with Terraform, Terraform import existing AWS security groups and manage them. How to import all or multiple security groups at once to terraform using ansible. Terraform Import example. Manage already created security groups with Terraform. Terraform AWS Import example.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2020-09-05T21:44:57+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T05:49:20+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-2.39.15-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"3278\" \/>\n\t<meta property=\"og:image:height\" content=\"1768\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-06-at-2.39.15-AM.png\",\"width\":3278,\"height\":1768,\"caption\":\"Terraform Import\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/\",\"name\":\"Terraform import All AWS Security Groups - How to | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#primaryimage\"},\"datePublished\":\"2020-09-05T21:44:57+00:00\",\"dateModified\":\"2022-06-19T05:49:20+00:00\",\"description\":\"Import and Manage existing AWS Security groups with Terraform, Terraform import existing AWS security groups and manage them. How to import all or multiple security groups at once to terraform using ansible. Terraform Import example. Manage already created security groups with Terraform. Terraform AWS Import example.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Terraform import All AWS Security Groups &#8211; How to\",\"datePublished\":\"2020-09-05T21:44:57+00:00\",\"dateModified\":\"2022-06-19T05:49:20+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#primaryimage\"},\"articleSection\":\"Ansible,AWS,Terraform\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/terraform-import-securitygroup-aws\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5641"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=5641"}],"version-history":[{"count":17,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5641\/revisions"}],"predecessor-version":[{"id":7187,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5641\/revisions\/7187"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/5683"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=5641"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=5641"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=5641"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}