{"id":9099,"date":"2022-10-10T03:11:59","date_gmt":"2022-10-09T21:41:59","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=9099"},"modified":"2022-10-10T03:20:46","modified_gmt":"2022-10-09T21:50:46","slug":"kubernetes-configmap-examples","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/","title":{"rendered":"Kubernetes Configmap Examples &#8211; How to Guide | Devops Junction"},"content":{"rendered":"<p>In this article, let us explore Kubernetes configmap and how to create, edit, update, and use them with examples.<\/p>\n<p>Configmap as the name suggests holds some configuration information, It can be a fine-grained string or an entire file.<\/p>\n<p>It eliminates the need to hardcode the configuration information into the container or the deployment definition.<\/p>\n<p>Configmap allows the reuse of images and deployment descriptors across environments like dev, QA, and prod.<\/p>\n<p>As we are isolating the configuration away from the application and managing it as a separate object (configmap),\u00a0 we can update the config without having to restart the application<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_.png\"><img class=\"post-img alignnone wp-image-9100 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_.png\" alt=\"kubernetes configmap\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_.png 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_-300x213.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_-1024x726.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_-768x545.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_-1536x1090.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_-400x284.png 400w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_-1080x766.png 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Draw.io_-90x65.png 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<p>In the preceding diagram you can see, on the left side, we have environments and workloads with config values hardcoded<\/p>\n<p>To the right, you can see they are moved\/isolated into a configmap and have a name <code>configmap-&lt;env<\/code> which would be referred to later in the definition<\/p>\n<p>&nbsp;<\/p>\n<h2>Types of Kubernetes Configmap<\/h2>\n<p>Kubernetes Configmap can be considered and used as one of these<\/p>\n<ul>\n<li><strong>FileSystem<\/strong> object &#8211; You can mount configmap and each key would be created as a file with the corresponding value as a content<\/li>\n<li><strong>Environment<\/strong> variable &#8211; A key and value pair that you want to pass to the container dynamically<\/li>\n<li><strong>Commandline<\/strong> Argument &#8211; You can change the default <code>CMD<\/code> of the container using the Commandline argument<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap.png\"><img class=\"post-img alignnone wp-image-9107 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap.png\" alt=\"\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap.png 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap-300x213.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap-1024x726.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap-768x545.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap-1536x1090.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap-400x284.png 400w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap-1080x766.png 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction-configmap-90x65.png 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<p>So far we have seen what are the types of configmap. Now let us see different ways to create configmap<\/p>\n<p>&nbsp;<\/p>\n<h2>How to Create Kubernetes Configmap &#8211; Introduction<\/h2>\n<p>Like many objects in Kubernetes, you can create Configmap in two ways<\/p>\n<ul>\n<li><strong>Imperative<\/strong> way &#8211; from the command line<\/li>\n<li><strong>Manifest<\/strong> &#8211; from a file on the disk<\/li>\n<\/ul>\n<p>Unless you are completely new to programming, you might already know that the map\/dictionary is a collection of <code>key: value<\/code>\u00a0 pairs ( more like JSON)<\/p>\n<p>Here is a simple javascript code that explains what is <code>map<\/code> datatype.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">const wrongMap = new Map();\r\nwrongMap['bla'] = 'blaa';\r\nwrongMap['bla2'] = 'blaaa2';\r\n\r\nconsole.log(wrongMap); \/\/ Map { bla: 'blaa', bla2: 'blaaa2' }<\/pre>\n<p>&nbsp;<\/p>\n<p>During the Configmap creation, There are a few ways to read the data that goes into the configmap<\/p>\n<p>You can read data directly from the<strong> file<\/strong> or from the <strong>command line\u00a0<\/strong>or recursively read all the files from a <strong>directory<\/strong><\/p>\n<p>You can use the special command line options with <strong>kubectl create configmap<\/strong> command to define how to read the data<\/p>\n<blockquote><p><code><span style=\"font-family: terminal, monaco, monospace; color: #003366;\"><em>--from-file=filename<\/em> <\/span><\/code> &#8211; Read data directly from the file and the filename is the key<\/p>\n<p><code><span style=\"color: #003366; font-family: terminal, monaco, monospace;\"><em>--from-file=key=filename<\/em><\/span> <\/code> &#8211; Read data from the file but we define the key<\/p>\n<p><code><span style=\"color: #003366; font-family: terminal, monaco, monospace;\"><em>--from-file=directory<\/em> <\/span><\/code> &#8211; Read all the files in a directory and the filenames are the keys<\/p>\n<p><code><span style=\"color: #003366; font-family: terminal, monaco, monospace;\"><em>--from-literal=key=value<\/em><\/span><\/code> &#8211; Create a single key=value as a string literal<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<p>We have seen the types of configmap and methods of creating configmap.<\/p>\n<p>Let us put them into practice and see how to create each type with different methods<\/p>\n<p>&nbsp;<\/p>\n<h2>Creating Kubernetes Configmap with <span style=\"color: #f01a70;\">Kubectl<\/span><\/h2>\n<p>In this section, we will see how to create a configmap imperatively using the <strong>Kubectl<\/strong> command<\/p>\n<h3><code><span style=\"font-family: terminal, monaco, monospace; color: #003366;\"><em>--from-file=filename<\/em><\/span><\/code><\/h3>\n<p>Now we are going to create a configmap of <code>filesystem<\/code> type using <code>--from-file=filename<\/code> option. with no explicit keys defined for the configmap.<\/p>\n<p>When no keys are defined, the file name would be taken as the key name.<\/p>\n<p>Here is a glimpse of my terminal, where I am creating configmap<\/p>\n<p><script id=\"asciicast-bf1sr2vcyvabPm92VDU9Zus7B\" src=\"https:\/\/asciinema.org\/a\/bf1sr2vcyvabPm92VDU9Zus7B.js\" async><\/script><\/p>\n<p>If you look at the preceding video, you can see that I have created a file named samplefile.txt and tried to create a configmap from a file using <code>--from-file<\/code><\/p>\n<p>Since I have not defined any key explicitly the filename was taken as a key.<\/p>\n<p>Here are the commands I have used to create the configmap<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">devopsjunction|\u21d2 cat &gt; samplefile.txt\r\nthis is configmap sample file,\r\ncontent in this file would be used as a value\r\nto a configmap key\r\n\r\ndevopsjunction|\u21d2 kubectl create configmap test-config &#8211; from-file=samplefile.txt -n sre01\r\nconfigmap\/test-config created<\/pre>\n<p>Let us validate how it is created using the <strong>kubectl get configmap<\/strong> command<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">devopsjunction|\u21d2 kubectl get configmap test-config -n sre01 -o yaml\r\napiVersion: v1\r\ndata:\r\n  samplefile.txt: |\r\n    this is configmap sample file,\r\n    content in this file would be used as a value\r\n    to a configmap key\r\nkind: ConfigMap\r\nmetadata:\r\n  creationTimestamp: \"2022-10-02T13:47:14Z\"\r\n  name: test-config\r\n  namespace: sre01\r\n  resourceVersion: \"340219653\"\r\n  uid: 2ad318a8-ff75-481a-987e-2299f69c92af<\/pre>\n<p>&nbsp;<\/p>\n<h3><code><span style=\"font-family: terminal, monaco, monospace; color: #003366;\"><em>--from-file=key=filename<\/em><\/span><\/code><\/h3>\n<p>Now we are going to create a configmap of <code>filesystem<\/code> type using <code>--from-file=key=filename<\/code> option<\/p>\n<p>As you can see, this time we are going to define a key for the configmap<\/p>\n<p>Let us see it in action<\/p>\n<div style=\"width: 840px;\" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement('video');<\/script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-9099-1\" width=\"840\" height=\"538\" preload=\"metadata\" controls=\"controls\"><source type=\"video\/mp4\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screen-Recording-2022-10-03-at-12.34.13-AM.mp4?_=1\" \/><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screen-Recording-2022-10-03-at-12.34.13-AM.mp4\">https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screen-Recording-2022-10-03-at-12.34.13-AM.mp4<\/a><\/video><\/div>\n<p>&nbsp;<\/p>\n<p>As you have seen in the preceding video, we have used the following kubectl command to create a configmap of <code>filesystem<\/code> type with <code>--from-file=key=filename<\/code> option<\/p>\n<pre>$ kubectl create configmap test-configmap-02 &#8211; from-file=configdata=samplefile.txt -n sre01<\/pre>\n<p>Like last time we have not let the filename be the key name, we have explicitly set the key name rather.<\/p>\n<p>Once created, the output looked like this.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubernetes-configmap.png\"><img class=\"post-img alignnone wp-image-9135 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubernetes-configmap.png\" alt=\"kubernetes configmap\" width=\"1499\" height=\"963\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubernetes-configmap.png 1499w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubernetes-configmap-300x193.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubernetes-configmap-1024x658.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubernetes-configmap-768x493.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubernetes-configmap-1080x694.png 1080w\" sizes=\"(max-width: 1499px) 100vw, 1499px\" \/><\/a><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>If you look at the highlighted portion of the image, you can notice that the configmap is not created with the filename as the key. but the custom key we have set <code>configdata<\/code><\/p>\n<p>&nbsp;<\/p>\n<h3><code><span style=\"font-family: terminal, monaco, monospace; color: #003366;\"><em>--from-file=directory<\/em><\/span><\/code><\/h3>\n<p>With this option, we can create a configmap in bulk.<\/p>\n<p>This reads all the files in the given directory and creates a configmap for each file.\u00a0 The filename would be the corresponding key name and the content of the file would become the value<\/p>\n<p>Let us see how this works in real-time<\/p>\n<div style=\"width: 840px;\" class=\"wp-video\"><video class=\"wp-video-shortcode\" id=\"video-9099-2\" width=\"840\" height=\"594\" preload=\"metadata\" controls=\"controls\"><source type=\"video\/mp4\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubectl_configmap-short.mp4?_=2\" \/><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubectl_configmap-short.mp4\">https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/kubectl_configmap-short.mp4<\/a><\/video><\/div>\n<p>&nbsp;<\/p>\n<p>As shown in the preceding video, we have different types of files under a directory and we are importing all of them into our configmap during the creation using <code>--from-file=directory<\/code> option<\/p>\n<p>filename becomes the <code>key<\/code> and the content inside becomes the <code>value<\/code><\/p>\n<p>Here is the command we have used<\/p>\n<pre>$ kubectl create configmap configfiles &#8211; from-file=configmaps\/<\/pre>\n<p>In this command <code>configmaps\/<\/code> is the directory name.<\/p>\n<p>Refer to the following image which shows the files in the <code>configmaps<\/code> directory and and the configmap creation and how it looks after the creation.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-06-at-11.55.51-PM.png\"><img class=\"post-img alignnone wp-image-9145 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-06-at-11.55.51-PM.png\" alt=\"kubectl configmap \" width=\"1492\" height=\"956\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-06-at-11.55.51-PM.png 1492w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-06-at-11.55.51-PM-300x192.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-06-at-11.55.51-PM-1024x656.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-06-at-11.55.51-PM-768x492.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-06-at-11.55.51-PM-1080x692.png 1080w\" sizes=\"(max-width: 1492px) 100vw, 1492px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3><code><span style=\"font-family: terminal, monaco, monospace; color: #003366;\"><em>--from-literal=key=value<\/em><\/span><\/code><\/h3>\n<p>The final option to use with kubectl configmap creation is <code>--from-literal=key=value<\/code><\/p>\n<p>So far we have seen how to read the file and create a configmap <code>key: value<\/code> pair<\/p>\n<p>It was helpful to store long file objects inside a configmap and later be used when we want to <code>filesystem<\/code> type configmap and to mount it as a filesystem<\/p>\n<p>but how to create a simple <code>key: value<\/code> based configmap<\/p>\n<p>we are going to do the same, using <code>--from-literal=key=value<\/code> option of <code>kubectl create configmap<\/code> command<\/p>\n<pre>$ kubectl create configmap testconfigmap &#8211; from-literal=ENV=DEV<\/pre>\n<p>the preceding command creates a new configmap named <code>testconfigmap<\/code> and just add a single <code>key: value<\/code> entry inside it<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-07-at-12.17.36-AM.png\"><img class=\"post-img alignnone wp-image-9146 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-07-at-12.17.36-AM.png\" alt=\"kubectl configmap &#8211; from-literal\" width=\"1486\" height=\"594\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-07-at-12.17.36-AM.png 1486w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-07-at-12.17.36-AM-300x120.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-07-at-12.17.36-AM-1024x409.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-07-at-12.17.36-AM-768x307.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-07-at-12.17.36-AM-1080x432.png 1080w\" sizes=\"(max-width: 1486px) 100vw, 1486px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Creating<span style=\"color: #228dd4;\"> Kubernetes <\/span>Configmap using <span style=\"color: #f01a70;\">Manifest<\/span><\/h2>\n<p>We have seen how to create configmap using kubectl, Now let us see how to create configmap using Kubernest Manifest<\/p>\n<p>You don&#8217;t have to memorize or write the manifest from scratch. you can let kubectl create the config file for you<\/p>\n<p>Execute the same Imperative command but with two additional options<\/p>\n<ul>\n<li><strong>--dry-run<\/strong> &#8211; to instruct kubectl to not create the resource<\/li>\n<li><strong>-o yaml<\/strong> &#8211; to display the manifest in the YAML format<\/li>\n<\/ul>\n<p>See it in action<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1.png\"><img class=\"alignnone size-full wp-image-9125\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1.png\" alt=\"\" width=\"2434\" height=\"746\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1.png 2434w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1-300x92.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1-1024x314.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1-768x235.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1-1536x471.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1-2048x628.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-02-at-11.45.47-PM-1-1080x331.png 1080w\" sizes=\"(max-width: 2434px) 100vw, 2434px\" \/><\/a><\/p>\n<p>You can see with a dry run you can actually generate the manifest. but you might need some cleanup.<\/p>\n<p>To remove the unwanted lines and make the output usable as it is. You can use a <code>kubectl neat<\/code> command<\/p>\n<p>It comes from a special package manager called <code>krew<\/code> refer to our another article on <a href=\"https:\/\/www.middlewareinventory.com\/blog\/cpu-memory-usage-nodes-k8s\/#What_is_Krew_and_how_to_download\">Krew and krew plugins here<\/a><\/p>\n<p>For those who want to copy the source code of this Configmap. here you go<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">apiVersion: v1\r\ndata:\r\n  samplefile.txt: |\r\n    this is configmap sample file,\r\n    content in this file would be used as a value\r\n    to a configmap key\r\nkind: ConfigMap\r\nmetadata:\r\n  name: test-config\r\n  namespace: sre01<\/pre>\n<p>This is a simple configmap YAML with one key: value pair.<\/p>\n<p>We can add more <code>key: value<\/code> pairs to this configmap like the sample given below.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">apiVersion: v1\r\ndata:\r\n  samplefile.txt: |\r\n    this is configmap sample file,\r\n    content in this file would be used as a value\r\n    to a configmap key\r\n  config.ini: |\r\n    [analytics]\r\n    check_for_updates = true\r\n    [grafana_net]\r\n    url = https:\/\/grafana.net\r\n    [log]\r\n    mode = console\r\n    [paths]\r\n    data = \/var\/lib\/grafana\/data\r\n    logs = \/var\/log\/grafana\r\n    plugins = \/var\/lib\/grafana\/plugins\r\n    provisioning = \/etc\/grafana\/provisioning\r\n  google_token: xxxxxxxxxxxxxxxxxxxx\r\n  salesforce_token: xxxxxxxxxxxxxxxxx\r\n  LOG_LEVEL: DEBUG\r\n  ENVIRONMENT: DEV\r\n  run.sh: |\r\n    @test \"Test Health\" {\r\n    url=\"http:\/\/prometheus-grafana\/api\/health\"\r\n\r\n    code=$(wget &#8211; server-response &#8211; spider &#8211; timeout 10 &#8211; tries 1 ${url} 2&gt;&amp;1 | awk '\/^  HTTP\/{print $2}')\r\n    [ \"$code\" == \"200\" ]\r\n    }\r\nkind: ConfigMap\r\nmetadata:\r\n  name: test-config\r\n  namespace: sre01<\/pre>\n<p>In the preceding sample configmap manifest, you can see we have various keys and values.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h2>Creating Configmap vs Using Configmap<\/h2>\n<p>As the title of this chapter convey <code>Creating Configmap<\/code> is different from <code>Using Configmap<\/code><\/p>\n<p>So far we have seen how to Create a configmap with different command line options like<\/p>\n<ul>\n<li>--from-file=key=value<\/li>\n<li>--from-file=filename<\/li>\n<li>--from-file=directory\/<\/li>\n<li>--from-literal<\/li>\n<\/ul>\n<p>Also, we have seen how to create a configmap from a manifest\/YAML file.<\/p>\n<p>Now that&#8217;s all to it and the configmap is ready its like a Database of your configuration how you are going to use\/consume the data stored in this configmap makes all the difference<\/p>\n<p>Now let us see, how we can consume\/use the config data from the configmap<\/p>\n<ul>\n<li>you can use it as <code>file object<\/code><\/li>\n<li>you can use it as <code>command line argument<\/code><\/li>\n<li>or simply an <code>environment variable<\/code> to support your container<\/li>\n<\/ul>\n<p>Hope you have understood the difference between the creation options and how to use configmap in your workloads.<\/p>\n<p>&nbsp;<\/p>\n<h2>Kubesample &#8211; \u00a0 SourceCode and Docker Image<\/h2>\n<p>Let us see how to use the configmap in our deployments and workloads.<\/p>\n<p>To demonstrate this, I have created some sample Applications and named it <code>kubesample<\/code><\/p>\n<p>You can find the source code of that kubesample <a href=\"https:\/\/github.com\/AKSarav\/kubesample.git\">in this GitHub repository<\/a> (Optional)<\/p>\n<pre>$ git clone https:\/\/github.com\/AKSarav\/kubesample.git<\/pre>\n<p>Downloading the source code is optional as I have already published the <code>kubesample<\/code> application image into Dockerhub<\/p>\n<p>You can simply pull the image from <a href=\"https:\/\/hub.docker.com\/r\/saravak\/kubesample\">Dockerhub<\/a>\u00a0using the following image name<\/p>\n<pre>saravak\/kubesample<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>How the Kubesample Application is designed and works<\/h2>\n<p>The Application is designed on express node js<\/p>\n<p>It simply loads the static and default <code>index.html<\/code> file under the corresponding <code>environment(dev\/qa\/prod)<\/code> directory<\/p>\n<p>This Environment is not going to be hardcoded on the deployment manifest, rather would come from the Configmap &#8211; This is an example of Configmap as an <strong>Environment variable<\/strong><\/p>\n<p>During the deployment of this application to Kubernetes, we add extra options like <code>cpu-profiling<\/code> or <code>increased node heap<\/code> etc.\u00a0 This also comes from Configmap &#8211; This is an example of Configmap as a <strong>Commandline Argument<\/strong><\/p>\n<p>We also add an extra HTML file <code>status.html<\/code> into the corresponding environment directory at runtime using Configmap as a <strong>FileSystem<\/strong><\/p>\n<p>Before we go further and look at the Yaml files for Configmap and Deployment.<\/p>\n<p>Take a look at the following image, where I have depicted How we are using the configmap in our workload\/deployment<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap.jpg\"><img class=\"post-img alignnone wp-image-9155 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap.jpg\" alt=\"Kubernetes Configmap\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap.jpg 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap-300x213.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap-1024x726.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap-768x545.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap-1536x1090.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap-400x284.jpg 400w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap-1080x766.jpg 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap-90x65.jpg 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>Deploying the KubeSample Application and Configmap<\/h2>\n<p>Here are the source code or the manifest files for the Kubesample Application Deployment and Configmap<\/p>\n<p>The files are also available on the Github repository, If you have cloned them already you can find them here<\/p>\n<h3><strong><span style=\"color: #003366;\">create-configmap.yml<\/span><\/strong><\/h3>\n<p>Here is the manifest for configmap<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">apiVersion: v1\r\ndata:\r\n  environment: dev\r\n  node_options: &#8211; prof\r\n  port: \"3000\"\r\n  status.html: |\r\n    &lt;html&gt;\r\n    &lt;body&gt;this is some status page from DEV&lt;\/body&gt;\r\n    &lt;\/html&gt;\r\nkind: ConfigMap\r\nmetadata:\r\n  name: kubesample\r\n  namespace: default<\/pre>\n<p>&nbsp;<\/p>\n<h3><strong><span style=\"color: #003366;\">create-deployment.yml<\/span><\/strong><\/h3>\n<p>Here is the manifest for Deployment<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">apiVersion: apps\/v1\r\nkind: Deployment\r\nmetadata:\r\n  labels:\r\n    app: kubesample\r\n  name: kubesample\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: kubesample\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: kubesample\r\n    spec:\r\n      containers:\r\n      - image: saravak\/kubesample\r\n        name: kubesample\r\n        imagePullPolicy: Always\r\n        resources:\r\n          limits: \r\n            cpu: '0.5'\r\n            memory: 100Mi\r\n        command:\r\n          - \"node\"\r\n          - \"$(OPTIONS)\"\r\n          - \"index.js\"\r\n        env: \r\n          - name: appport\r\n            valueFrom:\r\n              configMapKeyRef:\r\n                name: kubesample\r\n                key: port\r\n          - name: ENVIRONMENT\r\n            valueFrom:\r\n              configMapKeyRef:\r\n                name: kubesample\r\n                key: environment\r\n          - name: OPTIONS\r\n            valueFrom:\r\n              configMapKeyRef:\r\n                name: kubesample\r\n                key: node_options\r\n        volumeMounts:\r\n          - mountPath: \/app\/dev\/status.html\r\n            name: staticfile\r\n            subPath: status.html\r\n      volumes:\r\n        - name: staticfile\r\n          configMap: \r\n            name: kubesample\r\n              \r\n<\/pre>\n<p>You can use copy this sourcecode and save them on your local disk and apply<\/p>\n<pre>$ kubectl apply -f create-configmap.yml\r\n\r\n$ kubectl apply -f create-deployment.yml<\/pre>\n<p>This will create the deployment and configmap.<\/p>\n<p>These are the initial values we have set for the configmap, you can change these values and observe the behaviour<\/p>\n<blockquote><p>Note*: While you can change the <strong>node_options<\/strong>, <strong>port<\/strong> and <strong>status.html<\/strong> values as you choose\/desire to.<\/p>\n<p>But the value for the <strong>environment<\/strong> should be one of\u00a0 <strong>prod, dev, qa\u00a0<\/strong>as this property controlls what directory\/files to be loaded at runtime.<\/p>\n<p>As you can see in our Sourcecode, we have only these three directories ( environments ) defined.<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<div>\n<ul>\n<li>environment: <code>dev<\/code><\/li>\n<li>node_options: <code>--prof<\/code><\/li>\n<li>port: <code>3000<\/code><\/li>\n<li>status.html:\n<div>\n<pre>&lt;html&gt;\r\n&lt;body&gt;this is some status page from DEV&lt;\/body&gt;\r\n&lt;\/html&gt;<\/pre>\n<\/div>\n<\/li>\n<\/ul>\n<\/div>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>Validating the Application Setup<\/h2>\n<p>As we have created the necessary configmap and deployments Now let us validate our setup and test<\/p>\n<p>Let us first validate the deployment and configmap are intact using the following commands<\/p>\n<pre>## Validate configmap and Deployments\r\n\r\n$ kubectl get configmap kubesample -o yaml\r\n$ kubectl get deployments kubesample -o yaml\r\n\r\n## Validate the pod\r\n\r\n$ kubectl get pods\r\n\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>Once you know the pod name, you can do the <code>port-forward<\/code><\/p>\n<pre>$ kubectl port-forward kubesample-c7bc8ddd5-d966q 3000:3000<\/pre>\n<p>Here is a video of me doing the above validation steps on my end.<\/p>\n<div class=\"lyte-wrapper\" style=\"width:640px;max-width:100%;margin:5px;\"><div class=\"lyMe\" id=\"WYL_Gq1GAMVyBAQ\"><div id=\"lyte_Gq1GAMVyBAQ\" data-src=\"\/\/i.ytimg.com\/vi\/Gq1GAMVyBAQ\/hqdefault.jpg\" class=\"pL\"><div class=\"tC\"><div class=\"tT\"><\/div><\/div><div class=\"play\"><\/div><div class=\"ctrl\"><div class=\"Lctrl\"><\/div><div class=\"Rctrl\"><\/div><\/div><\/div><noscript><a href=\"https:\/\/youtu.be\/Gq1GAMVyBAQ\"><img src=\"https:\/\/i.ytimg.com\/vi\/Gq1GAMVyBAQ\/0.jpg\" alt=\"\" width=\"640\" height=\"340\" \/><br \/>Watch this video on YouTube<\/a><\/noscript><\/div><\/div><div class=\"lL\" style=\"max-width:100%;width:640px;margin:5px;\"><\/div><\/p>\n<p>&nbsp;<\/p>\n<p>Once the port forward is done, you can access the <code>kubesample<\/code> Application on <code>http:\/\/localhost:3000<\/code><\/p>\n<p>Here are the screenshots of kubesample application taken at my end.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM.png\"><img class=\"post-img alignnone wp-image-9165 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM.png\" alt=\"kubesample kubernetes sample app\" width=\"1798\" height=\"1088\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM.png 1798w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM-300x182.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM-1024x620.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM-768x465.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM-1536x929.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.10-AM-1080x654.png 1080w\" sizes=\"(max-width: 1798px) 100vw, 1798px\" \/><\/a><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM.png\"><img class=\"post-img alignnone wp-image-9166 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM.png\" alt=\"kubesample kubernetes sample app\" width=\"2058\" height=\"1086\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM.png 2058w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM-300x158.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM-1024x540.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM-768x405.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM-1536x811.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM-2048x1081.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.06.31-AM-1080x570.png 1080w\" sizes=\"(max-width: 2058px) 100vw, 2058px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>Now you can change the values in our Configmap and retry.<\/p>\n<pre>$ kubectl edit configmap kubesample<\/pre>\n<p>After updating the values. here is the snapshot of my current configmap<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.42.17-AM.png\"><img class=\"alignnone size-full wp-image-9171\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.42.17-AM.png\" alt=\"kubectl configmap update\" width=\"1252\" height=\"592\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.42.17-AM.png 1252w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.42.17-AM-300x142.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.42.17-AM-1024x484.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.42.17-AM-768x363.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.42.17-AM-1080x511.png 1080w\" sizes=\"(max-width: 1252px) 100vw, 1252px\" \/><\/a><\/p>\n<p>As you can see I have updated the Environment from <code>dev<\/code> to <code>prod<\/code> and made changes on the <code>status.html<\/code> too.<\/p>\n<p>Now let us restart the pods for the application to take the new configmap changes and retry<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM.png\"><img class=\"post-img alignnone wp-image-9172 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM.png\" alt=\"kubectl configmap examples\" width=\"1732\" height=\"1050\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM.png 1732w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM-300x182.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM-1024x621.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM-768x466.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM-1536x931.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/Screenshot-2022-10-10-at-2.49.08-AM-1080x655.png 1080w\" sizes=\"(max-width: 1732px) 100vw, 1732px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>In summary,\u00a0 we have learnt different ways to create configmap and to use it in your workload<\/p>\n<p>We have also tested the configmap in real time by creating a sample application <code>kubesample<\/code><\/p>\n<p>Hope this helps. In case you have any feedback or queries. please do let us know in the comments<\/p>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577178\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"9099\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577178\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577178\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this article, let us explore Kubernetes configmap and how to create, edit, update, and use them with examples. Configmap as the name suggests holds some configuration information, It can be a fine-grained string or an entire file. It eliminates the need to hardcode the configuration information into the container[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":9155,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[151],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Kubernetes Configmap Examples - How to Guide | Devops Junction<\/title>\n<meta name=\"description\" content=\"Kuberentes Configmap Examples. How to create configmap using --from-file --from-literal option. Types of configmap such as filesystem, environment variable, commandline argument.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Kubernetes Configmap Examples - How to Guide | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Kuberentes Configmap Examples. How to create configmap using --from-file --from-literal option. Types of configmap such as filesystem, environment variable, commandline argument.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2022-10-09T21:41:59+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-10-09T21:50:46+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/10\/devopsjunction_kubernetes_configmap.jpg\",\"width\":1748,\"height\":1240,\"caption\":\"Kubernetes Configmap\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/\",\"name\":\"Kubernetes Configmap Examples - How to Guide | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#primaryimage\"},\"datePublished\":\"2022-10-09T21:41:59+00:00\",\"dateModified\":\"2022-10-09T21:50:46+00:00\",\"description\":\"Kuberentes Configmap Examples. How to create configmap using --from-file --from-literal option. Types of configmap such as filesystem, environment variable, commandline argument.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Kubernetes Configmap Examples &#8211; How to Guide | Devops Junction\",\"datePublished\":\"2022-10-09T21:41:59+00:00\",\"dateModified\":\"2022-10-09T21:50:46+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#primaryimage\"},\"articleSection\":\"Kubernetes\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/kubernetes-configmap-examples\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/9099"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=9099"}],"version-history":[{"count":6,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/9099\/revisions"}],"predecessor-version":[{"id":9182,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/9099\/revisions\/9182"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/9155"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=9099"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=9099"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=9099"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}