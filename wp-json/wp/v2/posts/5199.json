{"id":5199,"date":"2020-06-05T20:08:11","date_gmt":"2020-06-05T14:38:11","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=5199"},"modified":"2022-02-10T23:24:37","modified_gmt":"2022-02-10T17:54:37","slug":"ansible-archive-module-examples","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/","title":{"rendered":"Ansible Archive Examples &#8211; Zip files and Directories"},"content":{"rendered":"<p>Ansible archive module is an ansible way of compressing the file and creating an archive. Just like the <code>tar<\/code>\u00a0and <code>gz<\/code>\u00a0command working together. If you are a Linux guy you would easily get this analogy. For windows, Just think of this as a normal <code>winzip<\/code>\u00a0or <code>WinRAR<\/code>\u00a0programs<\/p>\n<p>&nbsp;<\/p>\n<h2>Facts of Ansible <span style=\"color: #ed0e64;\">archive<\/span> module<\/h2>\n<ul>\n<li>This command is the opposite of <code>unarchive<\/code>\u00a0command of ansible<\/li>\n<li>By default, it assumes the source file you are trying to compress does exist.<\/li>\n<li>It will not copy the source file from the local system to the target before archiving.<\/li>\n<li>Source files can be deleted after archival by specifying\u00a0<em>remove=True<\/em><\/li>\n<li>Requires tarfile, zipfile, gzip and bzip2 packages on target host.<\/li>\n<li>Requires lzma or backports.lzma if using xz format.<\/li>\n<li>Can produce\u00a0<em>gzip<\/em>,\u00a0<em>bzip2<\/em>,\u00a0<em>lzma<\/em>\u00a0and\u00a0<em>zip<\/em>\u00a0compressed files or archives.\n<div class=\"admonition note\"><\/div>\n<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h2>Ansible Archive module Examples<\/h2>\n<ul>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example1_Compressing_the_Directory_with_TAR\">Compressing the Directory with <code>tar<\/code><\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example_2Compressing_the_Directory_with_tar_and_gz\">Compressing the Directory with <code>tar<\/code> and <code>gz<\/code><\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example_3_Compress_the_file_Default_File_Compress_format\">Compress the file with default type <code>gz<\/code><\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example_4_Remove_the_Source_files_after_archiving\">Remove the Source files after adding to the archive and compressed<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example_5_Create_a_ZIP_file_archive_File_and_Directory\">How to Create a <code>zip<\/code>\u00a0archive with Ansible archive module<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example_6_Create_a_BZIP_archive_File_and_Directory\">How to Create a <code>bz2<\/code>\u00a0archive\u00a0with Ansible archive module<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example_7_Compressing_and_Archiving_multiple_files_Ansible_archive\">Archive Multiple files from multiple Directories with few exclusions<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/?preview_id=5199&amp;preview_nonce=cf925d9a09&amp;_thumbnail_id=-1&amp;preview=true#Example_8_Ansible_archive_multiples_files_with_loop_multiple_single_files\">Ansible archive multiples files with loop &#8211; multiple single files<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h3>Example1: Compressing the Directory with TAR<\/h3>\n<p>As mentioned above, Ansible creates various types of archives and the most famous and widely used is <code>tar<\/code>\u00a0archive.\u00a0 In this example we show how to compress a directory using tar with Ansible Archive module.<\/p>\n<p>The Playbook is simple and ansible archive module takes only three arguments<\/p>\n<p><code>path<\/code>\u00a0&#8211; Source path on the target machine<\/p>\n<p><code>dest<\/code>\u00a0&#8211; Destination Path on the target machine, the resulting file name<\/p>\n<p><code>format<\/code>\u00a0&#8211; tar file<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress Directory contents\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat.tar  \r\n<span class=\"hljs-attr\">        format:<\/span> tar<\/span><\/pre>\n<p>&nbsp;<\/p>\n<blockquote><p><strong>\u00a0What if the source file is not present on the target ?<\/strong><\/p>\n<p>The Task would fail with path does not exist, Ansible archive just presumes that the\u00a0 \u00a0source file is present<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<h3>Example 2:Compressing the Directory with tar and gz<\/h3>\n<p>If you are familiar with the Linux commands, you might agree with me, we tend to use the <code>tar cvfz<\/code>\u00a0command more than <code>tar -cvf<\/code><\/p>\n<p>because the tar just archive the files and not compress them, rather doing this at two steps, we mostly use <code>tar cvfz<\/code>\u00a0to create the compressed archive file.<\/p>\n<p>In this example,\u00a0 we are going to do the same thing<\/p>\n<p>There are two ways to create the <code>tar.gz<\/code>\u00a0or <code>.tgz<\/code>\u00a0file ( both are same don&#8217;t get confused )<\/p>\n<p><strong>Method1:<\/strong> Mention it Explicitly with the format attribute<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress Directory contents\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat.tar.gz\r\n<span style=\"color: #993300;\"><span class=\"hljs-attr\">        format:<\/span> gz<\/span><\/span><\/pre>\n<p>&nbsp;<\/p>\n<p><strong>Method2:<\/strong> Do not mention any format attribute. As\u00a0<code>tar.gz<\/code>\u00a0is the default when the <code>format<\/code> is not mentioned and the file type is a directory<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress Directory contents\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat.tar.gz\r\n<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h3>Example 3: Compress the file &#8211; Default File Compress format<\/h3>\n<p>As we have mentioned previously on the Example2, the default compression type for the directory when the format is not mentioned is <code>tar.gz<\/code><\/p>\n<p>Likewise, for the file the default compression and archive type is <code>.gz<\/code>\u00a0when no format is explicitly mentioned<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress the file using Default format\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\/conf\/server.xml\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat\/server.xml.gz<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h3>Example 4:\u00a0\u00a0Remove the Source files after archiving<\/h3>\n<p>Most of the time the purpose of doing the archival process is to save some disk space and storage. So once the source file is archived &amp; compressed the source file is no longer needed.<\/p>\n<p>Especially when we are handling the logs and system housekeeping tasks, we would want to remove the old file once the compression is done.<\/p>\n<p>There is a parameter you can use to enable that by default it is disabled.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress the file and remove\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\/logs\/localhost-access.log\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat\/localhost-access.log.gz\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        remove:<\/span> <span class=\"hljs-literal\">yes<\/span><\/span><\/pre>\n<p>&nbsp;<\/p>\n<blockquote><p><strong>Note*<\/strong>\u00a0 When you are compressing the directory with <code>bz2<\/code>\u00a0or <code>gz<\/code>\u00a0Ansible archive module first archive the directory with\u00a0<code>tar<\/code>\u00a0and then apply the compressing technique on the resulting file. So its not necassary that you have to create a tar ball first before trying to compress.<\/p>\n<p>It does not apply to the <code>zip<\/code>\u00a0format. Zip does not create the tarball before compressing it. so if you <code>unzip<\/code>\u00a0the archive file you will directly get the files not the tarball while the farmer two would give you the tarball which you have to further extract<\/p>\n<p>&nbsp;<\/p><\/blockquote>\n<h3>Example 5:\u00a0\u00a0Create a ZIP file archive &#8211; File and Directory<\/h3>\n<p>Note*: for this command to work you should have the <code>zipfile<\/code>\u00a0package installed on the target machine<\/p>\n<p>Here is the ansible-playbook\u00a0 with ansible archive module to <strong>zip a<\/strong> <strong>Single file\u00a0<\/strong>we have also used the remove parameter to delete the original file once the compress is done<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress Directory contents\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\/logs\/catalina<span class=\"hljs-number\">.2019<\/span><span class=\"hljs-bullet\">-07<\/span><span class=\"hljs-bullet\">-24.<\/span>log\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat\/catalina<span class=\"hljs-number\">.2019<\/span><span class=\"hljs-bullet\">-07<\/span><span class=\"hljs-bullet\">-24.<\/span>log.zip<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        format:<\/span> zip<\/span>\r\n<span class=\"hljs-attr\">        remove:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span><\/pre>\n<p>&nbsp;<\/p>\n<p>Here is the ansible-playbook to <strong>zip a directory<\/strong> using ansible unarchive module in the zip format<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress Directory contents using ZIP\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat-bkp.tar.zip\r\n<span class=\"hljs-attr\">        format:<\/span> zip<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h3>Example 6:\u00a0\u00a0Create a BZIP archive &#8211; File and Directory<\/h3>\n<p>In this example, we are going to use the much powerful and reliable Bzip2 to archive the files, bzip2 is by far the best product amongst others and the resulting archive file size would be small than the other ones so you could save some more disk space.<\/p>\n<p>Refer my comparison of all archive formats like <code>bz2<\/code>\u00a0<code>zip<\/code>\u00a0<code>gz<\/code>\u00a0at the end of this post<\/p>\n<p>Back to the subject, Here is the playbook we are going to use to <code>bzip<\/code>\u00a0the file and directory I combined both of the tasks into a Single playbook to save some space<\/p>\n<p>All we have to change here is the format from the previous example. As usual the directory compression would be a compressed tarball.<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Compress the file using BZ2\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\/logs\/catalina<span class=\"hljs-number\">.2019<\/span><span class=\"hljs-bullet\">-07<\/span><span class=\"hljs-bullet\">-24.<\/span>log\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat\/catalina<span class=\"hljs-number\">.2019<\/span><span class=\"hljs-bullet\">-07<\/span><span class=\"hljs-bullet\">-24.<\/span>log.bz2\r\n<span class=\"hljs-attr\">        format:<\/span> bz2<\/span>\r\n    \r\n<span class=\"hljs-attr\">    - name:<\/span> Compress the Directory using BZ2\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\/\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat-bkp.tar.bz2\r\n<span class=\"hljs-attr\">        format:<\/span> bz2<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h3>Example 7:\u00a0\u00a0Compressing and Archiving multiple files Ansible archive<\/h3>\n<p>We saved the little complex and the best for the last and here we have collected few interesting examples as follows<\/p>\n<ul>\n<li>Use a Wild card to select the files<\/li>\n<li>Exclude a few specific files while adding the rest into the archive<\/li>\n<li>Take files from multiple source path while creating the archive<\/li>\n<\/ul>\n<p>Here is the playbook\u00a0 that covers and solves all these three questions<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Using Wild card and choosing the catalina logs only\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\/logs\/catalina*.log<\/span>\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat\/catalinalogs.tar.bz2\r\n<span class=\"hljs-attr\">        format:<\/span> bz2\r\n\r\n<span class=\"hljs-attr\">    - name:<\/span> Using Wild card and choosing the access logs only\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \/apps\/tomcat\/logs\/*access*.txt<\/span>\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat\/accesslogs.tar.bz2\r\n<span class=\"hljs-attr\">        format:<\/span> bz2\r\n\r\n    <span class=\"hljs-comment\" style=\"color: #738191;\"># Archive all the logs except access logs<\/span>\r\n<span class=\"hljs-attr\">    - name:<\/span> Using wild card for Including and Excluding\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        path:<\/span> \r\n<span class=\"hljs-bullet\">        -<\/span> \/apps\/tomcat\/logs\/*\r\n<span class=\"hljs-bullet\">        -<\/span> \/var\/log\/tomcat\/*<\/span>\r\n<span class=\"hljs-attr\">        dest:<\/span> \/apps\/tomcat\/logfiles.tar.bz2\r\n<span class=\"hljs-attr\">        format:<\/span> bz2\r\n<span style=\"color: #800080;\"><span class=\"hljs-attr\">        exclude_path:<\/span>\r\n<span class=\"hljs-bullet\">        -<\/span> \/apps\/tomcat\/logs\/*access*.txt\r\n<span class=\"hljs-bullet\">        -<\/span> \/var\/log\/tomcat\/*access*.txt\r\n<\/span><\/pre>\n<p>The first two are too self-descriptive we just use the wild card character to select specific files for our archiving process but the third one is a little tricky but great.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-5.59.36-PM.png\"><img class=\"alignnone size-full wp-image-5394\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-5.59.36-PM.png\" alt=\"\" width=\"2490\" height=\"1554\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-5.59.36-PM.png 2490w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-5.59.36-PM-300x187.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-5.59.36-PM-768x479.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-5.59.36-PM-1024x639.png 1024w\" sizes=\"(max-width: 2490px) 100vw, 2490px\" \/><\/a><\/p>\n<p>If you look at it, we have two parameters here. One is <code>path<\/code>\u00a0which is to select the files from the different source location and it is too generic as it has just <code>*<\/code>\u00a0 wild card character so it would take everything under those directories irrespective of their type, extension etc.<\/p>\n<p>Now let&#8217;s suppose we are sending these logs to the third party for analysis but don&#8217;t want to give out your user info which is captured in the access log file.\u00a0 we can exclude the access log files alone using <code>exclude_path<\/code>\u00a0parameter.<\/p>\n<p>If you want to know the list of files <code>archived<\/code>\u00a0and <code>excluded<\/code>\u00a0you can write your own debug task in your playbook or you can simply execute your playbook with more verbose\/debug levels like <code>-vvv<\/code><\/p>\n<pre>ansible-playbook\u00a0 playbook.yaml -vvv<\/pre>\n<p>In the result, you would be able to see two return variables named <code>archived<\/code>\u00a0and <code>expanded_exclude_paths<\/code><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-6.24.41-PM.png\"><img class=\"alignnone size-full wp-image-5393\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-6.24.41-PM.png\" alt=\"\" width=\"2400\" height=\"1230\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-6.24.41-PM.png 2400w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-6.24.41-PM-300x154.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-6.24.41-PM-768x394.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-01-at-6.24.41-PM-1024x525.png 1024w\" sizes=\"(max-width: 2400px) 100vw, 2400px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Example 8:\u00a0\u00a0Ansible archive multiples files with loop &#8211; multiple single files<\/h3>\n<p>So far the examples we have seen are about creating a Single Archive file with multiple source files in it. Now we are going to see how to create archive on multiple single files.<\/p>\n<p>Now we are going to see, How to Zip a list of files with Ansible archive module.<\/p>\n<p>To be more precise, let me give a requirement here, Let&#8217;s suppose that we want to compress the yesterday log files exactly at 00:01 AM every day.\u00a0 earlier we used to write Shell scripts to first find the files and then archive each of them. Something like this<\/p>\n<pre>find \/apps\/tomcat\/logs -name \"*.log\" -mtime +1\u00a0-exec gzip {} \\;\r\n\r\n(or)\r\n\r\nfind \/apps\/tomcat\/logs -name \"*.log\" -mtime +1\u00a0| xargs gzip<\/pre>\n<p>Here is the Ansible playbook which exactly does the same thing but using the<a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-find-examples\/\"> Ansible Find module<\/a> and Ansible Archive module instead of the Shell commands<\/p>\n<p>I insist you read the comments on the Playbook to understand it better.<\/p>\n<p>In a Summary. We have two tasks first task\u00a0 is with Ansible find module to find files under <code>\/apps\/tomcat\/logs<\/code>\u00a0with different extensions, this extension filtering is achieved using the <code>patterns<\/code>\u00a0 this task would run and store the file names into a output variable named <code>output<\/code>\u00a0 which will be used by ansible archive.<\/p>\n<p>The second task is with Ansible archive module and <code>with_items<\/code>\u00a0loop iteration where we iterate through the <code>output<\/code>\u00a0variables we got from the ansible find module task and, we are passing each module as a <code>path<\/code>\u00a0parameter and doing the normal compression using <code>bz2<\/code>\u00a0format.<\/p>\n<p>One special thing we added in our second task is appending the date as we are compressing and archiving each file for better tracking. ( Ideally, that&#8217;s what we do in the realtime log management )<\/p>\n<p><code>ansible_date_time.date.replace('-','')<\/code>\u00a0 this is an ansible built-in variable<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #eaeef3; color: #00193a;\"><span class=\"hljs-meta\" style=\"color: #4c81c9;\">---<\/span>\r\n<span class=\"hljs-attr\"> - name:<\/span> Ansible archive Examples\r\n<span class=\"hljs-attr\">   user:<\/span> vagrant\r\n<span class=\"hljs-attr\">   hosts:<\/span> testserver\r\n<span class=\"hljs-attr\">   tasks:<\/span>\r\n\r\n<span class=\"hljs-bullet\" style=\"color: #4c81c9;\">    -<\/span> name : Find files ending with extensions\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">true<\/span>\r\n<span class=\"hljs-attr\">      find:<\/span>\r\n<span class=\"hljs-attr\">       paths:<\/span> \/apps\/tomcat\/logs\r\n<span class=\"hljs-attr\">       file_type:<\/span> file\r\n       <span class=\"hljs-comment\" style=\"color: #738191;\"><span style=\"color: #993366;\"># find files with different extensions<\/span> <\/span>\r\n<span class=\"hljs-attr\">       patterns:<\/span> \r\n<span class=\"hljs-bullet\" style=\"color: #4c81c9;\">         -<\/span> <span class=\"hljs-string\" style=\"color: #0048ab;\">'.*\\.log$'<\/span>\r\n<span class=\"hljs-bullet\" style=\"color: #4c81c9;\">         -<\/span> <span class=\"hljs-string\" style=\"color: #0048ab;\">'.*\\.out$'<\/span>\r\n<span class=\"hljs-bullet\" style=\"color: #4c81c9;\">         -<\/span> <span class=\"hljs-string\" style=\"color: #0048ab;\">'.*\\.txt$'<\/span>\r\n<span class=\"hljs-attr\">       use_regex:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">       age:<\/span> <span class=\"hljs-number\">1<\/span>d\r\n<span class=\"hljs-attr\">       age_stamp:<\/span> mtime\r\n<span class=\"hljs-attr\">      register:<\/span> output\r\n\r\n<span class=\"hljs-attr\">    - name:<\/span> archive the files\r\n<span class=\"hljs-attr\">      become:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n<span class=\"hljs-attr\">      become_user:<\/span> tomcat\r\n<span class=\"hljs-attr\">      archive:<\/span>\r\n<span class=\"hljs-attr\">        remove:<\/span> <span class=\"hljs-literal\" style=\"color: #0048ab;\">yes<\/span>\r\n        <span class=\"hljs-comment\" style=\"color: #993366;\"># Receive Each Element from the Loop<\/span>\r\n<span class=\"hljs-attr\">        path:<\/span> <span class=\"hljs-string\" style=\"color: #0048ab;\">\"<span class=\"hljs-template-variable\" style=\"color: #4c81c9;\">{{ item.path }}<\/span>\"<\/span>\r\n        <span class=\"hljs-comment\" style=\"color: #993366;\"># Creating a file with Date filename-DDMMYY.bz2 format<\/span>\r\n<span class=\"hljs-attr\">        dest:<\/span> <span class=\"hljs-string\" style=\"color: #0048ab;\">\"<span class=\"hljs-template-variable\" style=\"color: #4c81c9;\">{{ item.path }}<\/span>-<span class=\"hljs-template-variable\" style=\"color: #4c81c9;\">{{ansible_date_time.date.replace('-','')}}<\/span>.bz2\"<\/span>\r\n<span class=\"hljs-attr\">        format:<\/span> bz2\r\n      <span class=\"hljs-comment\" style=\"color: #993366;\"># Loop Statement, Goes through the find command output array<\/span>\r\n<span class=\"hljs-attr\">      with_items:<\/span> <span class=\"hljs-string\" style=\"color: #0048ab;\">\"<span class=\"hljs-template-variable\" style=\"color: #4c81c9;\">{{ output.files }}<\/span>\"<\/span>\r\n<\/pre>\n<p>The result would be something like this<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-7.56.48-PM.png\"><img class=\"alignnone size-full wp-image-5399\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-7.56.48-PM.png\" alt=\"\" width=\"1642\" height=\"874\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-7.56.48-PM.png 1642w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-7.56.48-PM-300x160.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-7.56.48-PM-768x409.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-7.56.48-PM-1024x545.png 1024w\" sizes=\"(max-width: 1642px) 100vw, 1642px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>How to Unarchive the files with Ansible &#8211; Additional<\/h2>\n<p>So far we learnt how to archive the files the other part of this equation is to unarchive these files.\u00a0 For unarchiving you should use ansible unarchive module.<\/p>\n<p>I wrote an article on the same. Check that out<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"ll1OpAgr6T\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-unarchive-module-examples\/\">Ansible Unarchive Module Examples<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Ansible Unarchive Module Examples&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-unarchive-module-examples\/embed\/#?secret=ll1OpAgr6T\" data-secret=\"ll1OpAgr6T\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577814\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"5199\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577814\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577814\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Ansible archive module is an ansible way of compressing the file and creating an archive. Just like the tar\u00a0and gz\u00a0command working together. If you are a Linux guy you would easily get this analogy. For windows, Just think of this as a normal winzip\u00a0or WinRAR\u00a0programs &nbsp; Facts of Ansible archive[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":5408,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible Archive Examples - Zip files and Directories | DevOps Junction<\/title>\n<meta name=\"description\" content=\"Ansible archive module is to create archive files just like tar, gzip, bz2, zip, Ansible archive is an ansible way of creating archive files zip, tar etc. compress directories and files with ansible archive, How to create zip file with ansible, how to create gzip tar and bz2 files and Multiple files with ansible.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible Archive Examples - Zip files and Directories | DevOps Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible archive module is to create archive files just like tar, gzip, bz2, zip, Ansible archive is an ansible way of creating archive files zip, tar etc. compress directories and files with ansible archive, How to create zip file with ansible, how to create gzip tar and bz2 files and Multiple files with ansible.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2020-06-05T14:38:11+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-10T17:54:37+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-8.25.52-PM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"3322\" \/>\n\t<meta property=\"og:image:height\" content=\"1656\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/Screenshot-2020-06-05-at-8.25.52-PM.png\",\"width\":3322,\"height\":1656,\"caption\":\"Ansible archive\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/\",\"name\":\"Ansible Archive Examples - Zip files and Directories | DevOps Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#primaryimage\"},\"datePublished\":\"2020-06-05T14:38:11+00:00\",\"dateModified\":\"2022-02-10T17:54:37+00:00\",\"description\":\"Ansible archive module is to create archive files just like tar, gzip, bz2, zip, Ansible archive is an ansible way of creating archive files zip, tar etc. compress directories and files with ansible archive, How to create zip file with ansible, how to create gzip tar and bz2 files and Multiple files with ansible.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible Archive Examples &#8211; Zip files and Directories\",\"datePublished\":\"2020-06-05T14:38:11+00:00\",\"dateModified\":\"2022-02-10T17:54:37+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-archive-module-examples\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5199"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=5199"}],"version-history":[{"count":10,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5199\/revisions"}],"predecessor-version":[{"id":5411,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5199\/revisions\/5411"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/5408"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=5199"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=5199"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=5199"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}