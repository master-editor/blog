{"id":3030,"date":"2019-03-18T01:57:42","date_gmt":"2019-03-17T20:27:42","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=3030"},"modified":"2019-03-18T11:37:30","modified_gmt":"2019-03-18T06:07:30","slug":"secure-tomcat-jdbc","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/","title":{"rendered":"Encrypt tomcat database password &#8211; How to avoid Clear Text Password"},"content":{"rendered":"<p>In this article, We are going to discuss <strong>how to encrypt the Tomcat DataSource Password and avoid clear text password in Context.xml.<\/strong><\/p>\n<p>If you are using Tomcat Application server&#8217;s Datasource Feature, You must be aware that there is a Security issue as the DataSource or Database Connection Password would be in the Clear Text format on the <code>context.xml<\/code> file<\/p>\n<p>Whoever get access to the <code>context.xml<\/code> file Or the Server where the tomcat instance is hosted, Can take the Connection Details like JDBC username, JDBC password including the remote the Database Server and Schema\u00a0 Information.<\/p>\n<blockquote><p>Having, The Username and Connection details as a clear text is OK to some extent but Having the Password Unencrypted or as clear text is really a big Loophole you are leaving for your own Infrastructure Destruction. It is one of the Critical Security Vulnerability.<\/p><\/blockquote>\n<h2>A Quick Fix (or) A Workaround<\/h2>\n<p>These are the list of Steps you can do at an instant basis to Secure your Context.xml and DataSource Password.<\/p>\n<ul>\n<li>Make sure you restrict the file permission of the context.xml (or) all the configuration files associated with tomcat under the <code>$CATALINA_HOME\/conf\/*<\/code>\u00a0 by restricting access to the Group and others.\u00a0 It can be done easily with the chmod command in linux\u00a0<code>chmod\u00a0600 context.xml<\/code><\/li>\n<li>Setup ACL (Access Control List) for that file and Directory, With the help of <code>setfacl<\/code>\u00a0and <code>getfacl<\/code>\u00a0commands in Linux<\/li>\n<li>Have Auditing on who is viewing the file or copying the file<\/li>\n<li>Control who know the password of tomcat user (or) who have SUDO privileges and make sure they are the best people to hold the fort.<\/li>\n<\/ul>\n<p>Despite doing everything, All these workarounds, Your System is still prone to RISK as long as someone can read the password as Clear Text.<\/p>\n<blockquote><p>The Recommended and Reasonable approach is to have the password Encrypted.<\/p><\/blockquote>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5.jpeg\"><img class=\"alignnone size-full wp-image-3051\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5.jpeg\" alt=\"\" width=\"1050\" height=\"700\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5.jpeg 1050w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-300x200.jpeg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-768x512.jpeg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-1024x683.jpeg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-840x560.jpeg 840w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-120x80.jpeg 120w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-360x240.jpeg 360w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-600x400.jpeg 600w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5-480x320.jpeg 480w\" sizes=\"(max-width: 1050px) 100vw, 1050px\" \/><\/a><\/p>\n<h2>How to Encrypt Tomcat DataSource Password<\/h2>\n<p>By Default, the Password in Context.xml is not encrypted and Tomcat does not take that responsibility unlike the other application servers in the market like Weblogic and Websphere.<\/p>\n<p>So we are left out with only one option which is to write our own Encryption and Decryption Mechanism and a DataSource Implementation.<\/p>\n<p>Don&#8217;t panic.\u00a0 We have a Solution.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Protect your JDBC Tomcat Passwords with <em>SecureTomcatJDBC\u00a0<\/em><\/h2>\n<p>We have created a small application with Shell Script and Java and named this project as <code>SecureTomcatJDBC<\/code><\/p>\n<p>This works as an Encryptor and Decryptor of the Password using the Passphrase provided in an AES Algorithm and also act as a DataSource Connection Factory Implementor to Create JDBC Connections using the Encrypted passwords which can be used by the application as usual.<\/p>\n<p>There are two Java files used and they are\u00a0<code><span class=\"s1\">EncDecJDBCPass.java\u00a0<\/span><\/code><span class=\"s1\">and\u00a0\u00a0<\/span><code><span class=\"s1\">SecureTomcatDataSourceImpl.java<\/span><\/code><\/p>\n<p>Here<code><span class=\"s1\">SecureTomcatDataSourceImpl.java<\/span><\/code><span class=\"s1\">\u00a0is a Customized DataSource Connection factory Code which is going to be used in the <strong>context.xml<\/strong> to create the DB Connections for the Applications and on the other hand<code>EncDecJDBCPass.java<\/code>\u00a0is just an Encryptor and Decryptor Class.<\/span><\/p>\n<p>In fact, This DataSource Class\u00a0\u00a0<code><span class=\"s1\">SecureTomcatDataSourceImpl.java<\/span><\/code> replaces the regular\u00a0<code>org.apache.tomcat.jdbc.pool.DataSourceFactory<\/code>\u00a0in <code>context.xml<\/code> .<\/p>\n<p>&nbsp;<\/p>\n<h2>What is Secure Tomcat JDBC in 10 Crisp Points<\/h2>\n<ol class=\"ol1\">\n<li class=\"li1\"><span class=\"s2\">A Solution to use Encrypted Password in tomcat JDBC<\/span><\/li>\n<li class=\"li1\"><span class=\"s4\">An extension of traditional <\/span><code><span class=\"s2\"><i>org.apache.tomcat.jdbc.pool.DataSourceFactory<\/i><\/span><\/code><\/li>\n<li class=\"li1\"><span class=\"s2\">Uses AES Algorithm to Encrypt and Decrypt Password<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">It is a Connection Factory alternative to <\/span><code><span class=\"s5\"><i>org.apache.tomcat.jdbc.pool.DataSourceFactory<\/i><\/span><\/code><i> <\/i><\/li>\n<li class=\"li1\"><span class=\"s2\">All the configuration parameters can be used as usual<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Built with Shell Script and Java files<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Works with <\/span><strong><span class=\"s6\">Tomcat7<\/span><\/strong><span class=\"s2\"> and <\/span><strong><span class=\"s7\">Tomcat8<\/span><\/strong><span class=\"s2\"> and May not be applicable for Tomcat6 as it uses dbcp pool configuration<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Leave No Foot Print of <\/span><span class=\"s8\">SecurityKey<\/span><span class=\"s2\"> or <\/span><span class=\"s9\">Password<\/span><span class=\"s2\"> anywhere on the filesystem<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Enable Additional Logging, and log useful information like ConnectionURL and username upon successful ConnectionPool Creation. Helpful to troubleshoot<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Completely Open Source &#8211; Can be tweaked to suit your needs<\/span><\/li>\n<\/ol>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>So what is the Difference between The Regular DataSource and SecureTomcatJDBC<\/h2>\n<p>As mentioned earlier there is no Major Difference in terms of Creating and managing the Connections to the DB as the Regular and SecureTomcatJDBC both uses\u00a0<code>org.apache.tomcat.jdbc.pool.DataSourceFactory<\/code><\/p>\n<p>SecureTomcatJDBC just adds an additional layer of Security Encryption and Decryption that&#8217;s all<\/p>\n<p>Since we are going to use SecureTomcatJDBC to create connections for us. we need to update the <strong>factory<\/strong><br \/>\nin the context.xml. That&#8217;s All.<\/p>\n<p><strong>In Regular Context.xml<\/strong><\/p>\n<pre>&lt;Resource name=\"jdbc\/TestDB\"\r\n          auth=\"Container\"\r\n          type=\"javax.sql.DataSource\"\r\n<span style=\"color: #db167c;\"><strong>          factory=\"org.apache.tomcat.jdbc.pool.DataSourceFactory\"<\/strong><\/span>\r\n          testWhileIdle=\"true\"\r\n          testOnBorrow=\"true\"\r\n          testOnReturn=\"false\"\r\n          <span style=\"color: #db167c;\"><strong>password=\"s3cuR3\"<\/strong><\/span>\r\n........\r\n........<\/pre>\n<p><strong>With SecureTomcatJDBC in Context.xml<\/strong><\/p>\n<pre>&lt;Resource name=\"jdbc\/TestDB\"\r\n          auth=\"Container\"\r\n          type=\"javax.sql.DataSource\"\r\n<span style=\"color: #db167c;\"><strong>          factory=\"SecureTomcatDataSourceImpl\"<\/strong><\/span>\r\n          testWhileIdle=\"true\"\r\n          testOnBorrow=\"true\"\r\n          testOnReturn=\"false\"\r\n          <span style=\"color: #db167c;\"><strong>password=\"5d89fde03skdkd024oxipasdfiekflzwe9\"<\/strong><\/span>\r\n........\r\n........<\/pre>\n<h2><\/h2>\n<h2>How to use this?<\/h2>\n<ol class=\"ol1\">\n<li class=\"li1\"><span style=\"color: #de1d8d;\"><a style=\"color: #de1d8d;\" href=\"https:\/\/github.com\/AKSarav\/SecureTomcatJDBC\/blob\/master\/SecureTomcatJDBC.zip\"><span class=\"s2\"><span style=\"font-size: 14pt;\">Download the Zip distribution of SecureTomcatJDBC<\/span><\/span><\/a><\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">UnCompress\/Unzip to any Directory<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Start the Script <code><i>SecureTomcatJDBC.sh<\/i><\/code><\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Enter the <code>CATALINA_HOME<\/code> directory as an Input and JAVA_HOME and All other\u00a0<\/span><span class=\"s2\">Required Parameters will be auto fetched<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Enter the Password to Encrypt including the Pass Phrase<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Copy the Generated <code>SecureTomcatJDBC.jar<\/code> into the <\/span><code><span class=\"s3\">$CATALINA_HOME\/lib<\/span><\/code><span class=\"s2\"> directory<\/span><\/li>\n<li class=\"li1\"><span class=\"s2\">Replace the Factory element in Context.xml with <\/span><code><span class=\"s3\">factory=\u201cSecureTomcatDataSourceImpl\u201d<\/span><\/code><\/li>\n<li class=\"li1\"><span class=\"s2\">Replace the Encrypted Password in place of Clear Text Password<\/span><code><span class=\"s3\"> password=\"ENCRYPTED PASSWORD\u201d<\/span><\/code><\/li>\n<\/ol>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Here is a Sample Execution output.<\/h3>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">[tomcat<span class=\"hljs-meta\" style=\"color: #9b859d;\">@mwivmapp<\/span>02 SecureTomcatJDBC]$ <span style=\"color: #ffff00;\">.\/SecureTomcatJDBC.<\/span><span class=\"hljs-function\"><span style=\"color: #ffff00;\">sh<\/span> \r\nEnter the Tomcat Instance <span class=\"hljs-title\" style=\"color: #ffc66d;\">CATALINA_HOME<\/span> <span class=\"hljs-params\" style=\"color: #d0d0ff;\">( A Parent Directory of conf\/ bin\/ webapps\/ )<\/span>\r\n\/apps\/tomcat\/tomcat7    \r\n\r\n\r\nServer version: Apache Tomcat\/7.0.93\r\nJVM Version:    1.7.0_80-b15\r\nUsing JRE_HOME:        \/apps\/tomcat\/jdk1.7.0_80\r\nUsing CATALINA_HOME:   \/apps\/tomcat\/tomcat7\r\nUsing CLASSPATH:       \/apps\/tomcat\/tomcat7\/bin\/bootstrap.jar:\/apps\/tomcat\/tomcat7\/bin\/tomcat-juli.jar\r\nINFO: Java Home Validation Successful. Good to Go\r\n\r\n\r\nINFO: Vaidating the Tomcat Juli and Tomcat JDBC Jar files availability\r\nINFO: Jar files are present. Good to Go\r\nEnter the Password to Encrypt\r\nEnter the Secret PassPhrase\r\nCreating the JAR <span class=\"hljs-keyword\" style=\"color: #c26230;\">module<\/span> and Compiling the code\r\nClass files are created. Good to Go\r\nINFO: Creating a Jar file SecureTomcatJDBC.jar\r\nadding: EncDecJDBCPass.<span class=\"hljs-title\" style=\"color: #ffc66d;\">class<\/span><span class=\"hljs-params\" style=\"color: #d0d0ff;\">(in = <span class=\"hljs-number\" style=\"color: #a5c261;\">3210<\/span>)<\/span> <span class=\"hljs-params\" style=\"color: #d0d0ff;\">(out= <span class=\"hljs-number\" style=\"color: #a5c261;\">1773<\/span>)<\/span><span class=\"hljs-params\" style=\"color: #d0d0ff;\">(deflated <span class=\"hljs-number\" style=\"color: #a5c261;\">44<\/span>%)<\/span>\r\nadding: SecureTomcatDataSourceImpl.<span class=\"hljs-title\" style=\"color: #ffc66d;\">class<\/span><span class=\"hljs-params\" style=\"color: #d0d0ff;\">(in = <span class=\"hljs-number\" style=\"color: #a5c261;\">2975<\/span>)<\/span> <span class=\"hljs-params\" style=\"color: #d0d0ff;\">(out= <span class=\"hljs-number\" style=\"color: #a5c261;\">1463<\/span>)<\/span><span class=\"hljs-params\" style=\"color: #d0d0ff;\">(deflated <span class=\"hljs-number\" style=\"color: #a5c261;\">50<\/span>%)<\/span>\r\nadding: META-INF\/<span class=\"hljs-params\" style=\"color: #d0d0ff;\">(in = <span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>)<\/span> <span class=\"hljs-params\" style=\"color: #d0d0ff;\">(out= <span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>)<\/span><span class=\"hljs-params\" style=\"color: #d0d0ff;\">(stored <span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>%)<\/span>\r\nadding: META-INF\/MANIFEST.<span class=\"hljs-title\" style=\"color: #ffc66d;\">MF<\/span><span class=\"hljs-params\" style=\"color: #d0d0ff;\">(in = <span class=\"hljs-number\" style=\"color: #a5c261;\">49<\/span>)<\/span> <span class=\"hljs-params\" style=\"color: #d0d0ff;\">(out= <span class=\"hljs-number\" style=\"color: #a5c261;\">49<\/span>)<\/span><span class=\"hljs-params\" style=\"color: #d0d0ff;\">(deflated <span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>%)<\/span>\r\nINFO: Jar file Creation Successful. Good to Go\r\n\r\nPassword Encryption Begins\r\n<\/span><span style=\"color: #db167c;\">=&gt; ENCRYPTED PASSWORD : e590bacfa29f5f774365a665d35d2dd0<\/span>\r\nPassword Encryption Completed. Your Encrypted Password is displayed above\r\n\r\nNext Steps:\r\n <span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>) Copy the Generated SecureTomcatJDBC.jar into the \/apps\/tomcat\/tomcat7\/lib directory\r\n <span class=\"hljs-number\" style=\"color: #a5c261;\">2<\/span>) Replace the Factory element in Context.xml with factory=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"SecureTomcatDataSourceImpl\"<\/span>\r\n <span class=\"hljs-number\" style=\"color: #a5c261;\">3<\/span>) Replace the Encrypted Password in place of Clear Text Password password=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"ENCRYPTED PASSWORD\"<\/span>\r\nFor Any Questions about <span class=\"hljs-keyword\" style=\"color: #c26230;\">this<\/span> tool read the product page https:<span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/. Leave a Comment there for any help<\/span>\r\n\r\nGood Bye. Thanks <span class=\"hljs-keyword\" style=\"color: #c26230;\">for<\/span> using SecureTomcatJDBC Application<\/pre>\n<p>After Executing and Encrypting your password you need to perform the following Three steps as shown in the preceding Sample Execution output<\/p>\n<ol>\n<li class=\"p1\"><span class=\"s1\">Copy the Generated SecureTomcatJDBC.jar into the <code>$CATALINA_HOME\/lib<\/code> directory<\/span><\/li>\n<li class=\"p1\">Replace the Factory element in Context.xml with <code>factory=\"SecureTomcatDataSourceImpl\"<\/code><\/li>\n<li class=\"p1\">Replace the Encrypted Password in place of Clear Text Password<code> password=\"ENCRYPTED PASSWORD\"<\/code><\/li>\n<\/ol>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2><strong>The Sample Context.xml with <code>SecureTomcatDataSourceImpl<\/code> Factory<\/strong><\/h2>\n<p>Here is the Context.xml file sample with SecureTomcatDataSourceImpl\u00a0 Class and The Encrypted Password.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"php\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">&lt;?<\/span>xml version=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"1.0\"<\/span> encoding=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"UTF-8\"<\/span><span class=\"hljs-meta\" style=\"color: #9b859d;\">?&gt;<\/span><\/span>\r\n<span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">&lt;!--\r\n  Licensed to the Apache Software Foundation (ASF) under one or more\r\n  contributor license agreements.  See the NOTICE file distributed with\r\n  this work for additional information regarding copyright ownership.\r\n  The ASF licenses this file to You under the Apache License, Version 2.0\r\n  (the \"License\"); you may not use this file except in compliance with\r\n  the License.  You may obtain a copy of the License at\r\n\r\n      http:\/\/www.apache.org\/licenses\/LICENSE-2.0\r\n\r\n  Unless required by applicable law or agreed to in writing, software\r\n  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  See the License for the specific language governing permissions and\r\n  limitations under the License.\r\n--&gt;<\/span>\r\n<span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">&lt;! &#8211; The contents of this file will be loaded for each web application &#8211; &gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">Context<\/span>&gt;<\/span>\r\n\r\n    <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">&lt;! &#8211; Default set of monitored resources. If one of these changes, the    &#8211; &gt;<\/span>\r\n    <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">&lt;! &#8211; web application will be reloaded.                                   &#8211; &gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">WatchedResource<\/span>&gt;<\/span>WEB-INF\/web.xml<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">WatchedResource<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">WatchedResource<\/span>&gt;<\/span>${catalina.base}\/conf\/web.xml<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">WatchedResource<\/span>&gt;<\/span>\r\n\r\n    <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">&lt;! &#8211; Uncomment this to disable session persistence across Tomcat restarts &#8211; &gt;<\/span>\r\n    <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">&lt;!--\r\n    &lt;Manager pathname=\"\" \/&gt;\r\n    &#8211; &gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">Resource<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">name<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"jdbc\/mysqldb\"<\/span>\r\n<span style=\"color: #ffff00;\">          <span class=\"hljs-attr\">factory<\/span>=<span class=\"hljs-string\">\"SecureTomcatDataSourceImpl\"<\/span><\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">auth<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"Container\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">type<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"javax.sql.DataSource\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">maxActive<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"30\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">minIdle<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"10\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">maxWait<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"10000\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">username<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"tomcat7usr\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">initialSize<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"10\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">removeAbandonedTimeout<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"60\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">removeAbandoned<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"true\"<\/span>\r\n<span style=\"color: #ffff00;\">          <span class=\"hljs-attr\">password<\/span>=<span class=\"hljs-string\">\"e590bacfa29f5f774365a665d35d2dd0\"<\/span><\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">driverClassName<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"com.mysql.jdbc.Driver\"<\/span>\r\n          <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">url<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"jdbc:mysql:\/\/192.168.43.42:3306\/mysql?zeroDateTimeBehavior=convertToNull\"<\/span> \/&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">Context<\/span>&gt;<\/span><\/pre>\n<p>In the file, The\u00a0<code>factory<\/code>\u00a0 and <code>password<\/code> elements are highlighted in Yellow colour. Rest of the configuration\u00a0elements would be as same as the Traditional\u00a0<code>org.apache.tomcat.jdbc.pool.DataSourceFactory<\/code>\u00a0configuration.<\/p>\n<p>After performing all these steps It is necessary you need to restart the Subjected Tomcat Instance for the changes to take effect.<\/p>\n<p>&nbsp;<\/p>\n<h3>How to Make Sure the New DataSource is working or docked properly?<\/h3>\n<p>Make sure there is no NO CLASS DEF found errors or any other Major Errors found in the <code>Catalina.out<\/code> file. If everything is all right, you would be able to see the Something Similiar to this<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">INFO: Creating a New Connection Pool for DataSource {name=} with URL \r\njdbc:mysql:\/\/192.168.43.42:3306\/mysql?zeroDateTimeBehavior=convertToNull and the\u00a0 \r\nusername tomcat7usr<\/pre>\n<blockquote><p>Is not it Good?.\u00a0 You can see What Connection Pool Getting created with the JDBC Connection URL and the username.<\/p>\n<p>WhileTroubleshooting an issue where your application is not working properly. Now you can easily eliminate the DataSource as the cause or Go straight to it. I have added this cause I have had issues where DB was the cause and I could not find any log written in <code>Catalina.out<\/code><\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>SecureTomcatJDBC in Action &#8211; Video Guide<\/h2>\n<div class=\"lyte-wrapper\" style=\"width:640px;max-width:100%;margin:5px;\"><div class=\"lyMe\" id=\"WYL_TrC3Gw2g8GI\"><div id=\"lyte_TrC3Gw2g8GI\" data-src=\"\/\/i.ytimg.com\/vi\/TrC3Gw2g8GI\/hqdefault.jpg\" class=\"pL\"><div class=\"tC\"><div class=\"tT\"><\/div><\/div><div class=\"play\"><\/div><div class=\"ctrl\"><div class=\"Lctrl\"><\/div><div class=\"Rctrl\"><\/div><\/div><\/div><noscript><a href=\"https:\/\/youtu.be\/TrC3Gw2g8GI\"><img src=\"https:\/\/i.ytimg.com\/vi\/TrC3Gw2g8GI\/0.jpg\" alt=\"\" width=\"640\" height=\"340\" \/><br \/>Watch this video on YouTube<\/a><\/noscript><\/div><\/div><div class=\"lL\" style=\"max-width:100%;width:640px;margin:5px;\"><\/div><\/p>\n<p>&nbsp;<\/p>\n<p><strong>GitHub Page of this Tool:<\/strong>\u00a0<a href=\"https:\/\/github.com\/AKSarav\/SecureTomcatJDBC\">https:\/\/github.com\/AKSarav\/SecureTomcatJDBC<\/a><\/p>\n<p>The Sample DBApp used in this post is also available in the Github page including the Source codes.<\/p>\n<p>Hope this tool is helpful to you.<\/p>\n<p>If you like this, please spread the word and share this post<\/p>\n<p>Rate this tool and article [ratings] and feel free to comment for any help and queries<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578019\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"3030\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578019\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578019\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In this article, We are going to discuss how to encrypt the Tomcat DataSource Password and avoid clear text password in Context.xml. If you are using Tomcat Application server&#8217;s Datasource Feature, You must be aware that there is a Security issue as the DataSource or Database Connection Password would be[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":3051,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[35,147],"tags":[220,215,218,219,216,217],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Encrypt tomcat database password - How to avoid Clear Text Password<\/title>\n<meta name=\"description\" content=\"How to avoid clear text password and use encrypted password in context.xml for tomcat database connection in the Datasource context. SecureTomcatJDBC is a tool to encrypt and a replacement for the Cleartext password in context.xml. Encrypt tomcat database password is necessary to fix the security vulnerability\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Encrypt tomcat database password - How to avoid Clear Text Password\" \/>\n<meta property=\"og:description\" content=\"How to avoid clear text password and use encrypted password in context.xml for tomcat database connection in the Datasource context. SecureTomcatJDBC is a tool to encrypt and a replacement for the Cleartext password in context.xml. Encrypt tomcat database password is necessary to fix the security vulnerability\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-03-17T20:27:42+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2019-03-18T06:07:30+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5.jpeg\" \/>\n\t<meta property=\"og:image:width\" content=\"1050\" \/>\n\t<meta property=\"og:image:height\" content=\"700\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/photo-1526374965328-7f61d4dc18c5.jpeg\",\"width\":1050,\"height\":700},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/\",\"name\":\"Encrypt tomcat database password - How to avoid Clear Text Password\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#primaryimage\"},\"datePublished\":\"2019-03-17T20:27:42+00:00\",\"dateModified\":\"2019-03-18T06:07:30+00:00\",\"description\":\"How to avoid clear text password and use encrypted password in context.xml for tomcat database connection in the Datasource context. SecureTomcatJDBC is a tool to encrypt and a replacement for the Cleartext password in context.xml. Encrypt tomcat database password is necessary to fix the security vulnerability\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Encrypt tomcat database password &#8211; How to avoid Clear Text Password\",\"datePublished\":\"2019-03-17T20:27:42+00:00\",\"dateModified\":\"2019-03-18T06:07:30+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#primaryimage\"},\"keywords\":\"Encrypt Tomcat Database Password,how to avoid clear text password in tomcat,secure tomcat JDBC configuraiton,SecureTomcatJDBC,tomcat context.xml password encryption,tomcat context.xml with encrypted password\",\"articleSection\":\"tomcat,tools\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/secure-tomcat-jdbc\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3030"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=3030"}],"version-history":[{"count":8,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3030\/revisions"}],"predecessor-version":[{"id":3061,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3030\/revisions\/3061"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/3051"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=3030"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=3030"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=3030"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}