{"id":3822,"date":"2019-04-30T10:41:25","date_gmt":"2019-04-30T05:11:25","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=3822"},"modified":"2022-01-12T01:47:07","modified_gmt":"2022-01-11T20:17:07","slug":"ansible-get_url-examples-how-to-download-file-from-url","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/","title":{"rendered":"Ansible get_url Examples &#8211; How to download file from URL"},"content":{"rendered":"<p>In this post, we are going to see how to download a file from URL using ansible get_url module in other words ansible curl.\u00a0 As we know it already, Ansible has a lot of built-in modules to accomplish all the tasks we might need for configuration management and automation.<\/p>\n<p>Ansible get_url module is one amongst them which helps us to access the remote URL (HTTP\/HTTPS\/FTP) and download a file\/package from there and save it locally.<\/p>\n<p>Let us consider a situation where we need to download a package or a product online as we are provisioning an infrastructure. Let us say we build a machine with Apache or NGINX or Tomcat.<\/p>\n<p>Based on the flavour of OS you choose you always have an option to download these products using their repository and installation management tool like <strong>yum<\/strong> (or) <strong>apt-get<\/strong> etc. But that does not suit all our needs. let us say I want to download a package or a file directly from the URL. How can I do that?<\/p>\n<p>In a Simple approach, we can use the <strong>CURL<\/strong> or <strong>WGET<\/strong> command and get this job done. But why do you have to reinvent something which is already present and provides more features. ( You can always upgrade it )<\/p>\n<p>So let&#8217;s call this ansible get_url as Ansible CURL.<\/p>\n<p>In this post, we are going to see how to use the ansible curl or ansible get_url module with examples.<\/p>\n<p>&nbsp;<\/p>\n<blockquote><p>If you want to simply access the web page or\u00a0 web site or work with SOAP or RESTFUL web services and crawl through the content of the body. you must consider using the ansible <strong><code>uri<\/code><\/strong> module, not <strong><code>get_url<\/code><\/strong> module<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<h2>The ansible <span style=\"color: #eb0e80;\">get_url<\/span> module<\/h2>\n<p>Some Key points about get_url module to get to know it better.<\/p>\n<ul>\n<li>ansible get_url module is being used to download files from <strong>HTTPS<\/strong>, <strong>HTTP<\/strong> and <strong>FTP<\/strong> servers (websites\/URLs)<\/li>\n<li>By Default use the default proxy configuration of the node, You can use custom proxy and you can change the proxy address\/url by setting environment variables such as <strong><code>http_proxy<\/code><\/strong> or <strong><code>https_proxy<\/code><\/strong> or by using the ansible built-in <strong><code>use_proxy<\/code><\/strong> option<\/li>\n<li>you can use get_url to crawl through the page and check if the web page or server is available using <code>--check<\/code> option<\/li>\n<li>Supports HTTPS and Secure Site accessing by letting you define the client certificates<\/li>\n<li>Timeout configuration is available ( something important I believe)<\/li>\n<li>Can pass through or handle the <code>Basic Authentication.<\/code> In other words, you can access the web sites\/pages which are secure with Basic Authentication.<\/li>\n<li>Supports <strong><code>checksum<\/code><\/strong> validation to make sure the downloaded software\/package is uncorrupted and legit.<\/li>\n<\/ul>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible.jpeg\"><img class=\"alignnone wp-image-3843 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible.jpeg\" alt=\"how to download a file from URL in ansible - ansible get_url\" width=\"1050\" height=\"700\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible.jpeg 1050w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-300x200.jpeg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-768x512.jpeg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-1024x683.jpeg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-840x560.jpeg 840w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-120x80.jpeg 120w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-360x240.jpeg 360w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-600x400.jpeg 600w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible-480x320.jpeg 480w\" sizes=\"(max-width: 1050px) 100vw, 1050px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>The ansible <span style=\"color: #eb0e80;\">get_url<\/span> Examples<\/h2>\n<ul>\n<li><span style=\"font-size: 14pt;\">How to download a file from URL [ Download Tomcat version 8.40 from HTTPS URL with checksum validation.(SHA512) ]<\/span>\n<ul>\n<li><span style=\"font-size: 14pt;\">Validate Checksum with\u00a0 SHA256\/MD5 keys<\/span><\/li>\n<\/ul>\n<\/li>\n<li><span style=\"font-size: 14pt;\">Download a file ( tomcat) with checksum validation and take checksum value from remote URL<\/span><\/li>\n<li><span style=\"font-size: 14pt;\">Download a file Secured with Basic Authentication<\/span><\/li>\n<li><span style=\"font-size: 14pt;\">Timeout a Request when the URL is not responding (or) taking longer than usual<\/span><\/li>\n<li><span style=\"font-size: 14pt;\">Downloading a FILE from FTP server using ansible get_url<\/span><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h3>Example #1 &#8211; Ansible &#8211; How to download a file from URL<\/h3>\n<p>Here is a quick playbook that downloads Tomcat 8.40 version from <code>tomcat.apache.org<\/code><\/p>\n<p>Before I write this playbook. I manually have to be aware of the downloadable link and the SHA512 checksum to validate. I have collected them from <a href=\"https:\/\/tomcat.apache.org\/download-80.cgi\">here<\/a><\/p>\n<p>Here <code>appserver<\/code> is the <code>host group<\/code> defined in the <code>ansible_hosts<\/code> file which has one remote node or server underneath. Named <code>mwivmapp01<\/code><\/p>\n<p><span style=\"font-size: 14pt;\"><strong>The Playbook<\/strong><\/span><\/p>\n<p>The Playbook consists of two tasks and a couple of subtasks<\/p>\n<ol>\n<li>\u00a0Create a Directory named \/opt\/tomcat8\n<ol>\n<li>Make Sure the Directory has 0755 permission set<\/li>\n<li>Set the Owner and the Group of the Directory as <strong><code>tomcat<\/code><\/strong><\/li>\n<\/ol>\n<\/li>\n<li>\u00a0Download the Tomcat8 tar.gz file into the \/opt\/tomcat8 directory we created in Step1\n<ol>\n<li>Access the Download link of the tomcat8 using <strong><code>url<\/code><\/strong> parameter of <strong><code>get_url<\/code><\/strong> module<\/li>\n<li>Set the Download location as <strong><code>\/opt\/tomcat8<\/code><\/strong><\/li>\n<li>Make Sure the downloaded file at <strong><code>0755<\/code><\/strong> permission<\/li>\n<li>Make Sure the owner and group of the downloaded tar.gz file are\u00a0\u00a0<strong><code>tomcat<\/code><\/strong><\/li>\n<li>Validate the <strong><code>sha512<\/code><\/strong> checksum of the downloaded file, to make sure the file is valid.<\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<blockquote><p>Here the checksum value was pre declared (or) written in side the playbook. you can optionally specify a URL in which the checksum value of the desired file.<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Download Tomcat8 from tomcat.apache.org\r\n  hosts: appserver\r\n  tasks:\r\n   - name: Create a Directory \/opt\/tomcat8\r\n     become: yes\r\n     file:\r\n       path: \/opt\/tomcat8\r\n       state: directory\r\n       mode: 0755\r\n       owner: tomcat\r\n       group: tomcat\r\n\r\n   - name: Download Tomcat using get_url\r\n     become: yes\r\n     get_url:\r\n       url: https:\/\/www-us.apache.org\/dist\/tomcat\/tomcat-8\/v8.5.40\/bin\/apache-tomcat-8.5.40.tar.gz\r\n       dest: \/opt\/tomcat8\r\n       mode: 0755\r\n       checksum: sha512:5bdea5414713c9ba39e226f062701fa14998b1a798c9750f956a0f59b5edabb8d83af9ec9f81cf9f47fa92c21b560c9b2be1b543d0bd8f1b49579b69101d3a8f\r\n       group: tomcat\r\n       owner: tomcat<\/pre>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size: 14pt;\"><strong>The Execution Output ( <span style=\"color: #339966;\">When the CheckSum Match Perfectly<\/span>)<\/strong><\/span><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #d4113e;\">$ ansible-playbook download-tomcat.yml -i ansible_hosts<\/span>\r\n\r\nPLAY [Download Tomcat8 from tomcat.apache.org] *****************************************\r\n\r\nTASK [Gathering Facts] *****************************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Create a Directory \/opt\/tomcat8] *************************************************\r\nchanged: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Download Tomcat using get_url] ***************************************************\r\nchanged: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nPLAY RECAP *****************************************************************************\r\nmwivmapp01                 : ok=3    changed=2    unreachable=0    failed=0\r\n<\/pre>\n<\/div>\n<p>&nbsp;<\/p>\n<p><span style=\"font-size: 14pt;\"><strong>The Execution Output ( <span style=\"color: #993366;\">When the Checksum Do not match<\/span>)<\/strong><\/span><\/p>\n<p>Since we have given checksum validation as part of the get_url module. When the checksum is not matching, The Task would fail and deployment would not be completed<\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #d4113e;\">$ ansible-playbook download-tomcat.yml -i ansible_hosts<\/span>\r\n\r\nPLAY [Download Tomcat8 from tomcat.apache.org] *****************************************\r\n\r\nTASK [Gathering Facts] *****************************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Create a Directory \/opt\/tomcat8] *************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Download Tomcat using get_url] ***************************************************\r\n<span style=\"color: #ff6600;\">fatal: [mwivmapp01]: FAILED! =&gt; {\"changed\": false, \"msg\": <span style=\"background-color: #fff0f0;\">\"The<\/span> <span style=\"background-color: #fff0f0;\">checksum<\/span> <span style=\"background-color: #fff0f0;\">for<\/span> <span style=\"background-color: #fff0f0;\">\/opt\/tomcat8\/apache-tomcat-8.5.40.tar.gz<\/span> <span style=\"background-color: #fff0f0;\">did<\/span> <span style=\"background-color: #fff0f0;\">not<\/span> <span style=\"background-color: #fff0f0;\">match<\/span> <span style=\"background-color: #fff0f0;\">5bdea5414713c9ba39e226f062701fa14998b1a798c9750f956a0f59b5edabb8d83af9ec9f81cf9f47fa92c21b560c9b2be1b543d0bd8f1b49579b69101d3;<\/span> <span style=\"background-color: #fff0f0;\">it<\/span> <span style=\"background-color: #fff0f0;\">was<\/span> <span style=\"background-color: #fff0f0;\">5bdea5414713c9ba39e226f062701fa14998b1a798c9750f956a0f59b5edabb8d83af9ec9f81cf9f47fa92c21b560c9b2be1b543d0bd8f1b49579b69101d3a8f.\"<\/span><span style=\"background-color: #ffaaaa;\">}<\/span>\r\n\tto retry, use: &#8211; limit @\/apps\/vagrant\/webinfra\/download-tomcat.retry\r\n<\/span>\r\nPLAY RECAP *****************************************************************************\r\nmwivmapp01                 : ok=2    changed=0    unreachable=0    failed=1\r\n<\/pre>\n<\/div>\n<p><span style=\"font-size: 14pt;\"><strong>Quick Validation &#8211; Ad hoc command to check if the file is present<\/strong><\/span><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #d4113e;\">ansible appserver -a \"ls -lrt \/opt\/tomcat8\" -i ansible_hosts\r\n<\/span><\/pre>\n<\/div>\n<p>&nbsp;<\/p>\n<details>\n<summary>How to use SHA256 and MD5 Checksums while downloading the file<\/summary>\n<h3>How to use SHA256 and MD5 Checksums while downloading the file.<\/h3>\n<p>To use SHA256 of MD5 checksums. All you have to do is update the checksum parameter of the <code>get_url<\/code> module<\/p>\n<p>If you want to use SHA256 checksum<\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">checksum: sha256:[sha256 checksum value]\r\n<\/pre>\n<\/div>\n<p>If you want to use MD5 checksum<\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">checksum: MD5:[MD5 checksum value]\r\n<\/pre>\n<\/div>\n<p>You just have to define what is the Key algorithm before the value. That&#8217;s all. It applies to all SHA256,MD5 or SHA256<\/p>\n<\/details>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h3>Example #2 &#8211; Ansible &#8211; Download a file and get checksum from the URL<\/h3>\n<p>In the last example, we have seen how to download a file and do the checksum validation.<\/p>\n<p>If you have noticed, the checksum was hardcoded or written inside the playbook. as we mentioned earlier you can also tell the ansible get_url module to fetch the checksum value from another URL<\/p>\n<p>There is no major difference between example1 and example2 except the value of the checksum option.<\/p>\n<p><strong><span style=\"font-size: 14pt;\">The Playbook<\/span><\/strong><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Download Tomcat8 from tomcat.apache.org\r\n  hosts: appserver\r\n  tasks:\r\n   - name: Create a Directory \/opt\/tomcat8\r\n     become: yes\r\n     file:\r\n       path: \/opt\/tomcat8\r\n       state: directory\r\n       mode: 0755\r\n       owner: tomcat\r\n       group: tomcat\r\n\r\n   - name: Download Tomcat using get_url\r\n     become: yes\r\n     get_url:\r\n       url: https:\/\/www-us.apache.org\/dist\/tomcat\/tomcat-8\/v8.5.40\/bin\/apache-tomcat-8.5.40.tar.gz\r\n       dest: \/opt\/tomcat8\r\n       mode: 0755\r\n       checksum: sha512:https:\/\/www.apache.org\/dist\/tomcat\/tomcat-8\/v8.5.40\/bin\/apache-tomcat-8.5.40.tar.gz.sha512\r\n       group: tomcat\r\n       owner: tomcat<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3>Example #3 &#8211; Ansible &#8211; Download a Protected file with Basic Authentication<\/h3>\n<p>Sometimes, we might need to cross the security layer like Basic Authentication Prompt before downloading the file. In those kinds of scenarios, it is important that we pass the credentials and get authenticated before downloading the file.<\/p>\n<p>Ansible <code>get_url<\/code> provides a way to pass <code>username<\/code> and <code>password<\/code> to Basic Authentication prompts. So that you can cross the security layer and reach and download the file<\/p>\n<p>When you are not passing any credentials to the secured web page\/ web site. You will get <code>401 Unauthorized<\/code> HTTP Response<\/p>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"font-size: 14pt;\">A Sample Basic Authentication Enabled File\/URL<\/span><\/strong><\/p>\n<p>For testing, we have tweaked\u00a0 a simple Apache WebSite configuration to enable Basic Authentication Security for a specific file named <code>\"secure.txt\"<\/code> under the <code>\/var\/www\/html\/admin<\/code> document root<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-28-at-7.40.42-PM.png\"><img class=\"alignnone size-full wp-image-3824\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-28-at-7.40.42-PM.png\" alt=\"Ansible Get_URL download file from Secure URL\" width=\"1104\" height=\"346\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-28-at-7.40.42-PM.png 1104w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-28-at-7.40.42-PM-300x94.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-28-at-7.40.42-PM-768x241.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-28-at-7.40.42-PM-1024x321.png 1024w\" sizes=\"(max-width: 1104px) 100vw, 1104px\" \/><\/a><\/p>\n<p>These are the <strong>apache<\/strong> configuration directives we had to add in<strong> httpd.conf<\/strong> file to achieve the Basic Authentication to a specific directory ( \/var\/www\/html\/admin )<\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">Alias \/admin \/var\/www\/html\/admin\r\n\r\n&lt;Directory \/var\/www\/html\/admin&gt;\r\n  &lt;Files secure.txt&gt;\r\n    AuthType basic\r\n    AuthName \"Secured Files area\"\r\n    AuthUserFile \/etc\/httpd\/conf\/.htpasswd\r\n    Require user sarav\r\n  &lt;\/Files&gt;\r\n  order allow,deny\r\n  deny from all\r\n  satisfy any\r\n&lt;\/Directory&gt;<\/pre>\n<\/div>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p><strong><span style=\"font-size: 14pt;\">The Playbook<\/span><\/strong><\/p>\n<p>Here you can see we have three major tasks<\/p>\n<ol>\n<li>Accessing the URL to make sure it is alive and Secured by validating it returns 401 status_code<\/li>\n<li>Access the same URL with username and password this time to download the file<\/li>\n<li>Display the file contents downloaded using a Basic Shell command<\/li>\n<\/ol>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Get-URL Download the Protected File\r\n  hosts: appserver\r\n  tasks:\r\n    - name: Access the WebSite and make sure the URL is live\r\n      uri:\r\n        url: http:\/\/mwiweb02\/admin\/secure.txt\r\n        status_code: 401\r\n      register: validateurl\r\n\r\n    - name: \"INFO: HTTP Response for the URL\"\r\n      debug: var=validateurl.msg\r\n\r\n    - name: Access the same URL with Basic Authentication and Download the file\r\n      get_url:\r\n        url: http:\/\/mwiweb02\/admin\/secure.txt\r\n        url_password: Test@123 \r\n        url_username: sarav\r\n        dest: \/tmp\/secure.txt\r\n\r\n    - name: Display the File contents\r\n      shell: &gt;\r\n         cat \/tmp\/secure.txt\r\n      register: shellout\r\n\r\n    - name: \"INFO: Display the File Contents\"\r\n      debug: var=shellout.stdout_lines<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"font-size: 14pt;\">The Execution Result<\/span><\/strong><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #d4113e;\">$ ansible-playbook secure_download-basic.yml -i ansible_hosts<\/span>\r\n\r\nPLAY [Get-URL Download the Protected File] ***************************************************************************************************************************************\r\n\r\nTASK [Gathering Facts] ***********************************************************************************************************************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Access the WebSite and make sure the URL is live] **************************************************************************************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [INFO: HTTP Response for the URL] *******************************************************************************************************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>] =&gt; {\r\n    \"validateurl.msg\": <span style=\"background-color: #fff0f0;\">\"HTTP<\/span> <span style=\"background-color: #fff0f0;\">Error<\/span> <span style=\"background-color: #fff0f0;\">401:<\/span> <span style=\"background-color: #fff0f0;\">Unauthorized\"<\/span>\r\n<span style=\"color: #ff0000; background-color: #ffaaaa;\">}<\/span>\r\n\r\nTASK [Access the same URL with Basic Authentication and Download the file] *******************************************************************************************************\r\nchanged: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Display the File contents] *************************************************************************************************************************************************\r\nchanged: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [INFO: Display the File Contents] *******************************************************************************************************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>] =&gt; {\r\n    \"shellout.stdout_lines\": [\r\n        <span style=\"background-color: #fff0f0;\">\"this<\/span> <span style=\"background-color: #fff0f0;\">is<\/span> <span style=\"background-color: #fff0f0;\">a<\/span> <span style=\"background-color: #fff0f0;\">secret<\/span> <span style=\"background-color: #fff0f0;\">file<\/span> <span style=\"background-color: #fff0f0;\">with<\/span> <span style=\"background-color: #fff0f0;\">a<\/span> <span style=\"background-color: #fff0f0;\">secret<\/span> <span style=\"background-color: #fff0f0;\">password<\/span> <span style=\"background-color: #fff0f0;\">to<\/span> <span style=\"background-color: #fff0f0;\">open<\/span> <span style=\"background-color: #fff0f0;\">a<\/span> <span style=\"background-color: #fff0f0;\">Swizz<\/span> <span style=\"background-color: #fff0f0;\">bank<\/span> <span style=\"background-color: #fff0f0;\">locker\"<\/span>,\r\n        <span style=\"background-color: #fff0f0;\">\":)<\/span> <span style=\"background-color: #fff0f0;\">:)<\/span> <span style=\"background-color: #fff0f0;\">\"<\/span>\r\n    ]\r\n<span style=\"color: #ff0000; background-color: #ffaaaa;\">}<\/span>\r\n\r\nPLAY RECAP ***********************************************************************************************************************************************************************\r\nmwivmapp01                 : ok=6    changed=2    unreachable=0    failed=0\r\n\r\n\r\n<\/pre>\n<\/div>\n<h3><\/h3>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h3>Example#4: Timeout When the URL is not responding ( Default is 10 Seconds)<\/h3>\n<p>We will take the same playbook we have used in Example1, and quickly update the timeout option for the get_url module. By default, the ansible get_url module would timeout in 10 seconds if gets no reply from the URL<\/p>\n<p>Here is the modified playbook with the timeout option<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Download Tomcat8 from tomcat.apache.org\r\n  hosts: appserver\r\n  tasks:\r\n   - name: Create a Directory \/opt\/tomcat8\r\n     become: yes\r\n     file:\r\n       path: \/opt\/tomcat8\r\n       state: directory\r\n       mode: 0755\r\n       owner: tomcat\r\n       group: tomcat\r\n\r\n   - name: Download Tomcat using get_url\r\n     become: yes\r\n     get_url:\r\n       url: https:\/\/www-us.apache.org\/dist\/tomcat\/tomcat-8\/v8.5.40\/bin\/apache-tomcat-8.5.40.tar.gz\r\n       dest: \/opt\/tomcat8\r\n       mode: 0755\r\n       group: tomcat\r\n       owner: tomcat\r\n       # the request will timeout after 20 seconds\r\n       timeout: 20<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3>Example#5: Download a file from FTP server using ansible get_url<\/h3>\n<p>I have my FTP server running at\u00a0<code>ftp:\/\/mwiweb02\/<\/code>\u00a0and I need to access a Secure file like we shown in the previous example which is available at the URL\u00a0<code>ftp:\/\/mwiweb02\/admin\/secure.txt<\/code><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-29-at-6.42.35-AM.png\"><img class=\"alignnone size-full wp-image-3826\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-29-at-6.42.35-AM.png\" alt=\"download a file from ftp server ansible\" width=\"546\" height=\"218\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-29-at-6.42.35-AM.png 546w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/Screen-Shot-2019-04-29-at-6.42.35-AM-300x120.png 300w\" sizes=\"(max-width: 546px) 100vw, 546px\" \/><\/a><\/p>\n<p>Just like the other examples, this is also very simple and all we have to do is replace the HTTP URL with an FTP URL. That&#8217;s all.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Get-URL Download the Protected File\r\n  hosts: appserver\r\n  tasks:\r\n\r\n    - name: Access the FTP URL and download the file\r\n      get_url:\r\n        url: ftp:\/\/mwiweb02\/admin\/secure.txt\r\n        dest: \/tmp\/secure.txt\r\n\r\n    - name: Display the File contents\r\n      shell: &gt;\r\n         cat \/tmp\/secure.txt\r\n      register: shellout\r\n\r\n    - name: \"INFO: Display the File Contents\"\r\n      debug: var=shellout.stdout_lines<\/pre>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"font-size: 14pt;\">The Execution Output<\/span><\/strong><\/p>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #e31445;\">$ ansible-playbook download_ftp_url.yml -i ansible_hosts<\/span>\r\n\r\nPLAY [Get-URL Download the Protected File] *********************************************\r\n\r\nTASK [Gathering Facts] *****************************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Access the FTP URL and download the file] ****************************************\r\nchanged: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [Display the File contents] *******************************************************\r\nchanged: [<span style=\"color: #996633;\">mwivmapp01<\/span>]\r\n\r\nTASK [INFO: Display the File Contents] *************************************************\r\nok: [<span style=\"color: #996633;\">mwivmapp01<\/span>] =&gt; {\r\n    \"shellout.stdout_lines\": [\r\n        <span style=\"background-color: #fff0f0;\">\"this<\/span> <span style=\"background-color: #fff0f0;\">is<\/span> <span style=\"background-color: #fff0f0;\">a<\/span> <span style=\"background-color: #fff0f0;\">secret<\/span> <span style=\"background-color: #fff0f0;\">file<\/span> <span style=\"background-color: #fff0f0;\">with<\/span> <span style=\"background-color: #fff0f0;\">a<\/span> <span style=\"background-color: #fff0f0;\">secret<\/span> <span style=\"background-color: #fff0f0;\">password<\/span> <span style=\"background-color: #fff0f0;\">to<\/span> <span style=\"background-color: #fff0f0;\">open<\/span> <span style=\"background-color: #fff0f0;\">a<\/span> <span style=\"background-color: #fff0f0;\">Swizz<\/span> <span style=\"background-color: #fff0f0;\">bank<\/span> <span style=\"background-color: #fff0f0;\">locker\"<\/span>,\r\n        <span style=\"background-color: #fff0f0;\">\":)<\/span> <span style=\"background-color: #fff0f0;\">:)<\/span> <span style=\"background-color: #fff0f0;\">\"<\/span>\r\n    ]\r\n<span style=\"color: #ff0000; background-color: #ffaaaa;\">}<\/span>\r\n\r\nPLAY RECAP *****************************************************************************\r\nmwivmapp01                 : ok=4    changed=2    unreachable=0    failed=0\r\n<\/pre>\n<\/div>\n<p>&nbsp;<\/p>\n<p>Hope this post helps. Read more Ansible articles <a href=\"https:\/\/www.middlewareinventory.com\/blog\/category\/ansible\/\">here\u00a0<\/a><\/p>\n<p>Any help or feedback. Please let us know in comments.<\/p>\n<p>Cheers,<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578169\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"3822\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578169\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578169\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to see how to download a file from URL using ansible get_url module in other words ansible curl.\u00a0 As we know it already, Ansible has a lot of built-in modules to accomplish all the tasks we might need for configuration management and automation. Ansible[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":3843,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[378,271,270,272,268,269],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible get_url Examples - How to download file from URL<\/title>\n<meta name=\"description\" content=\"How to download file from URL in ansible. Ansible Get_url examples. Ansible get_url module is to help when you need to download a file or package, software from HTTP , HTTPS or FTP url. Ansible CURL and Ansible WGET examples. How to use Ansible CURL and Ansible WGET to download a file or browse the URL.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible get_url Examples - How to download file from URL\" \/>\n<meta property=\"og:description\" content=\"How to download file from URL in ansible. Ansible Get_url examples. Ansible get_url module is to help when you need to download a file or package, software from HTTP , HTTPS or FTP url. Ansible CURL and Ansible WGET examples. How to use Ansible CURL and Ansible WGET to download a file or browse the URL.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-04-30T05:11:25+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-11T20:17:07+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible.jpeg\" \/>\n\t<meta property=\"og:image:width\" content=\"1050\" \/>\n\t<meta property=\"og:image:height\" content=\"700\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/04\/download-url-ansible.jpeg\",\"width\":1050,\"height\":700,\"caption\":\"how to download a file from URL in ansible\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/\",\"name\":\"Ansible get_url Examples - How to download file from URL\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#primaryimage\"},\"datePublished\":\"2019-04-30T05:11:25+00:00\",\"dateModified\":\"2022-01-11T20:17:07+00:00\",\"description\":\"How to download file from URL in ansible. Ansible Get_url examples. Ansible get_url module is to help when you need to download a file or package, software from HTTP , HTTPS or FTP url. Ansible CURL and Ansible WGET examples. How to use Ansible CURL and Ansible WGET to download a file or browse the URL.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible get_url Examples &#8211; How to download file from URL\",\"datePublished\":\"2019-04-30T05:11:25+00:00\",\"dateModified\":\"2022-01-11T20:17:07+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#primaryimage\"},\"keywords\":\"ansible curl,ansible download content from URL,ansible download from url,ansible download software from URl,Ansible get_url,ansible get_url examples\",\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-get_url-examples-how-to-download-file-from-url\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3822"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=3822"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3822\/revisions"}],"predecessor-version":[{"id":7935,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/3822\/revisions\/7935"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/3843"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=3822"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=3822"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=3822"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}