{"id":8484,"date":"2022-05-21T22:37:35","date_gmt":"2022-05-21T17:07:35","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=8484"},"modified":"2022-05-23T13:56:32","modified_gmt":"2022-05-23T08:26:32","slug":"aws-activemq-python-stomp-example","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/","title":{"rendered":"AWS ActiveMQ Python STOMP Example &#8211; with SSL |  Devops Junction"},"content":{"rendered":"<p>In this article, we are going to see how to connect to AWS ActiveMQ using Python.<\/p>\n<p>STOMP ( Simple Text Oriented Messaging Protcol)\u00a0 is a protocol supported by Message Oriented Middleware products like ActiveMQ, RabbitMQ for faster and reliable message streaming.<\/p>\n<p>We are going to use STOMP with Python to connect to ActiveMQ in this article.<\/p>\n<p>Python provides a library called <strong>stomp.py<\/strong> which we will be using to connect to our message broker using the <strong>STOMP protocol.<\/strong><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ.jpg\"><img class=\"alignnone size-full wp-image-8511\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ.jpg\" alt=\"aws activemq\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ.jpg 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-300x213.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-1024x726.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-768x545.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-1536x1090.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-90x65.jpg 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<h2>Creating Certificate to present to SSL Stomp connector<\/h2>\n<p>Before you can execute the python code from the EC2 instance, there is a requirement we need to address<\/p>\n<p>Remember that AWS ActiveMQ Supports STOMP with SSL<\/p>\n<p>you can see it in the endpoint itself that it would have <code>ssl+stomp<\/code><\/p>\n<p>In order to connect to this SSL enabled stomp we must produce a certificate.\u00a0 So we are now going to create one dummy certificate using OpenSSL<\/p>\n<p>Run the following code on your EC2 instance to generate the <strong><em>privateKey.key<\/em><\/strong> and <strong><em>cert.pem<\/em><\/strong> required for the SSL connection to ActiveMQ.<\/p>\n<pre>openssl req -newkey rsa:2048 -nodes -keyout privateKey.key -x509 -days 365 -out cert.pem<\/pre>\n<p>This would create a private key and a certificate that we can produce to the STOMP + SSL enabled AWS ActiveMQ.<\/p>\n<p>Now we have the certificate file and the private key ready. Let us move on to copying the Python code and executing it<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Creating AWS ActiveMQ<\/h2>\n<p>As we have mentioned already, we are going to use AWS ActiveMQ and our code is going to be deployed on EC2.<\/p>\n<p>So we have given a quick Video how to create a AWS ActiveMQ with Simple Authentication.<\/p>\n<div style=\"width: 840px;\" class=\"wp-video\"><!--[if lt IE 9]><script>document.createElement('video');<\/script><![endif]-->\n<video class=\"wp-video-shortcode\" id=\"video-8484-1\" width=\"840\" height=\"471\" preload=\"metadata\" controls=\"controls\"><source type=\"video\/mp4\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-aws.mp4?_=1\" \/><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-aws.mp4\">https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ-aws.mp4<\/a><\/video><\/div>\n<p>&nbsp;<\/p>\n<p>Now we have created the AWS ActiveMQ with some user and password and now we can create the python program and can use the STOMP host and Port to connect<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM.png\"><img class=\"alignnone size-full wp-image-8508\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM.png\" alt=\"ActiveMQ AWS\" width=\"2948\" height=\"1150\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM.png 2948w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM-300x117.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM-1024x399.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM-768x300.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM-1536x599.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-3.52.46-PM-2048x799.png 2048w\" sizes=\"(max-width: 2948px) 100vw, 2948px\" \/><\/a><\/p>\n<p>As you can see There are five different type of endpoints available with different protocol support<\/p>\n<p>but we are going with STOMP<\/p>\n<p>&nbsp;<\/p>\n<h2>Python program to connect AWS ActiveMQ<\/h2>\n<p>This program is designed to connect to the AWS ActiveMQ using the STOMP protocol.<\/p>\n<p>Before you can use this program, you need to replace the following variables in the python source code given below.<\/p>\n<ul>\n<li>AMQHOST &#8211; ActiveMQ Stomp Hostname ( stomp+ssl:\/\/ removed)<\/li>\n<li>AMQPORT &#8211; ActiveMQ Stomp port ( usually 61614 or 61613)<\/li>\n<li>AMQUSER &#8211; ActiveMQ userName that we created<\/li>\n<li>AMQPASS &#8211; ActiveMQ Password<\/li>\n<li>TOPICNAME &#8211; ActiveMQ Topic name ( if not exist, it would be created)<\/li>\n<\/ul>\n<p>During the creation of the broker, we created the username and password which we would use as AMQUSER and AMQPASS.<\/p>\n<p>Copy the following code and create a new file named <code>amq-client.py<\/code><\/p>\n<blockquote><p>Note*: Make sure this python file is created\/present on the same directory where we have created the privatekey and certificate pem file<\/p><\/blockquote>\n<p>Here is the source code<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">import time\r\nimport sys\r\nimport stomp\r\nimport ssl\r\n\r\n\r\nclass MsgListener(stomp.ConnectionListener):\r\n\r\n    def on_error(self, message):\r\n        print('received an error \"%s\"' % message.body)\r\n    def on_message(self, frame):\r\n        print('received a message \"%s\"' % frame.body)\r\n\r\n\r\nAMQHOST=&lt;YOUR STOMP HOST, WITH NO PROTOCOL SPECIFIED&gt;\r\nAMQPORT=&lt;AMQ STOM PORT - 61614 usually &gt;\r\nAMQUSER=&lt;USERNAME YOU CREATE IN AWS ACTIVEMQ&gt;\r\nAMQPASS=&lt;PASSWORD OF THE USER NAME MENTIONED ABOVE&gt;\r\nTOPICNAME=topic\/testtopic\r\n\r\nhosts = [(AMQHOST, AMQPORT)]\r\n\r\nconn = stomp.Connection(host_and_ports=hosts)\r\nconn.set_listener('stomp_listener', MsgListener())\r\nconn.set_ssl(for_hosts=[(AMQHOST, AMQPORT)], cert_file='cert.pem', key_file='privateKey.key',ssl_version=ssl.PROTOCOL_TLSv1_2)\r\nconn.connect(AMQUSER, AMQPORT, wait=True,headers = {'client-id': 'clientname'})\r\n\r\nconn.send(body=' '.join(sys.argv[1:]), destination=TOPICNAME)\r\ntime.sleep(320)\r\nconn.subscribe(destination=TOPICNAME, id=1, ack='auto')\r\n\r\n\r\nconn.disconnect()\r\n<\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Install PIP and Stomp<\/h2>\n<p>Now we need to install the Stomp Package on the EC2 instance where we are going to execute the python code.<\/p>\n<p>if you do not have PIP, <a href=\"https:\/\/pip.pypa.io\/en\/stable\/installation\/\">refer to this page<\/a> and get it installed<\/p>\n<p>Once the pip is installed and ready. execute the following command to install the stomp<\/p>\n<pre>pip install stomp.py<\/pre>\n<p>Make sure your EC2 instance has external internet connectivity otherwise you would not be able to install any <strong>PyPI<\/strong> packages.<\/p>\n<p>&nbsp;<\/p>\n<h2>Run the Program<\/h2>\n<p>Now run the Python program by issuing the following command<\/p>\n<pre>python amq-client.py \"hello world\"<\/pre>\n<p>If all goes well you will see your message being published into the topic name you have given and read back by the subscriber\/listener we have configured.<\/p>\n<p>&nbsp;<\/p>\n<h2>Secure Alternative with AWS Parameter Store<\/h2>\n<p>In the preceding program, you might have seen that we are hardcoding the password and other configuration info<\/p>\n<p>It is not a good practice to keep these secrets hardcoded in the production environment.<\/p>\n<p>So the better alternative is to store these in some Secret Manager like<\/p>\n<ul>\n<li>Hashicorp Vault<\/li>\n<li>AWS Secret Manager<\/li>\n<li>AWS parameter Store<\/li>\n<\/ul>\n<p>Since we are using the EC2 instance and an AWS ActiveMQ. Let us choose the AWS Vault mechanism<\/p>\n<p>People usually prefer AWS Secret Manager over AWS Parameter Store but we are taking up AWS Parameter Store in this article.<\/p>\n<p>AWS Parameter Store can be a viable solution to store secrets.<\/p>\n<p>In order to use AWS Parameter Store in our program, we need to use <code>boto3<\/code> the powerful python SDK to connect to AWS<\/p>\n<p>Now here is the modified python code that uses boto3 to connect and fetch secrets\/parameters from the AWS parameter store.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">import time\r\nimport sys\r\nimport stomp\r\nimport ssl\r\nimport boto3\r\n\r\ndef read_param(paramname):\r\n    ssm= boto3.client('ssm','us-east-1')\r\n    parameter = ssm.get_parameter(Name=paramname,WithDecryption=True)\r\n    print(parameter['Parameter']['Value'])\r\n    return parameter['Parameter']['Value']\r\n\r\nclass MsgListener(stomp.ConnectionListener):\r\n\r\n    def on_error(self, message):\r\n        print('received an error \"%s\"' % message.body)\r\n    def on_message(self, frame):\r\n        print('received a message \"%s\"' % frame.body)\r\n\r\n\r\nAMQHOST=read_param(\"AMQ_STOMP_URL\")\r\nAMQPORT=read_param(\"AMQ_STOMP_PORT\")\r\nAMQUSER=read_param(\"AMQ_USERNAME\")\r\nAMQPASS=read_param(\"AMQ_PASSWORD\")\r\nTOPICNAME=read_param(\"AMQ_TOPIC\")\r\n\r\nhosts = [(AMQHOST, AMQPORT)]\r\n\r\nconn = stomp.Connection(host_and_ports=hosts)\r\nconn.set_listener('stomp_listener', MsgListener())\r\nconn.set_ssl(for_hosts=[(AMQHOST, AMQPORT)], cert_file='cert.pem', key_file='privateKey.key',ssl_version=ssl.PROTOCOL_TLSv1_2)\r\nconn.connect(AMQUSER, AMQPORT, wait=True,headers = {'client-id': 'clientname'})\r\n\r\nconn.send(body=' '.join(sys.argv[1:]), destination=TOPICNAME)\r\ntime.sleep(320)\r\nconn.subscribe(destination=TOPICNAME, id=1, ack='auto')\r\n\r\n\r\nconn.disconnect()<\/pre>\n<p>&nbsp;<\/p>\n<h2>AWS Parameter Store.<\/h2>\n<p>Create Parameters using SecureString as the Parameter type. You can also choose other Parameter types but we recommend using SecureString for added security concerns<\/p>\n<ul>\n<li>Go to <a href=\"https:\/\/us-east-1.console.aws.amazon.com\/systems-manager\/parameters\/?region=us-east-1&amp;tab=Table\" target=\"_blank\" rel=\"noopener noreferrer\">Parameter Store<\/a> in AWS.<\/li>\n<li>Create a Parameter and enter the name.<\/li>\n<li>Choose Tier as <strong>Standard<\/strong>, Type as <strong>SecureString<\/strong> and enter the Value of the Parameter.<\/li>\n<\/ul>\n<p>Your parameters would look like this:<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Untitled.png\"><img class=\" wp-image-8485 aligncenter\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Untitled.png\" alt=\"\" width=\"906\" height=\"369\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Untitled.png 1417w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Untitled-300x122.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Untitled-1024x416.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Untitled-768x312.png 768w\" sizes=\"(max-width: 906px) 100vw, 906px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Creating IAM Role and mapping to EC2<\/h2>\n<p>As we are going to read the configuration and secrets from the AWS parameter store. We need to make sure that our EC2 instance has the right IAM role\/permission to be able to do that.<\/p>\n<p>To create IAM Role which is necessary for this objective, follow the steps:<\/p>\n<ul>\n<li>Go to IAM &gt; Roles &gt;\u00a0Create Role.<\/li>\n<li>Select <strong>AWS Service<\/strong> as <strong>Trusted entity type<\/strong> and <strong>EC2<\/strong> as <strong>Use case.<\/strong><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_142803558.png\"><img class=\"alignnone wp-image-8486\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_142803558.png\" alt=\"\" width=\"768\" height=\"447\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_142803558.png 1338w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_142803558-300x174.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_142803558-1024x595.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_142803558-768x447.png 768w\" sizes=\"(max-width: 768px) 100vw, 768px\" \/><\/a><\/li>\n<li>Click <strong>Next<\/strong> and Add <strong>AmazonSSMReadOnlyAccess<\/strong> permission from <strong>Permission policies.<\/strong><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_143008206.png\"><img class=\"alignnone size-full wp-image-8488\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_143008206.png\" alt=\"\" width=\"1361\" height=\"669\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_143008206.png 1361w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_143008206-300x147.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_143008206-1024x503.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-20_143008206-768x378.png 768w\" sizes=\"(max-width: 1361px) 100vw, 1361px\" \/><\/a><\/li>\n<li>Provide the Role name and create the role.<\/li>\n<\/ul>\n<p>Now we have given permission for the Ec2 instance to read Parameters so we are good to test our code now.<\/p>\n<p>&nbsp;<\/p>\n<h2>Run the Program<\/h2>\n<p style=\"text-align: left;\">Run your Python Client to establish the connection to your ActiveMQ Broker using the command:<\/p>\n<pre>python &lt;name_of_your_python_client_file.py&gt; \"message\"<\/pre>\n<p>&nbsp;<\/p>\n<h2>Execution output<\/h2>\n<p>here is the execution output of the program when tried from our end<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM.jpg\"><img class=\"alignnone size-full wp-image-8510\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM.jpg\" alt=\"ActiveMQ Python\" width=\"2214\" height=\"294\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM.jpg 2214w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM-300x40.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM-1024x136.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM-768x102.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM-1536x204.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/Screenshot-2022-05-21-at-10.19.10-PM-2048x272.jpg 2048w\" sizes=\"(max-width: 2214px) 100vw, 2214px\" \/><\/a><\/p>\n<h2><\/h2>\n<h2>Conclusion<\/h2>\n<p>With this article hope you were able to learn how to use ActiveMQ with Python using STOMP protocol<\/p>\n<p>we also covered how securely store and fetch the configuration and credential info from AWS Secret Manager\/ Parameter Store using Boto3<\/p>\n<p>If you have any requirement in DevOps where you need our professional help, please do reach out to us at <a href=\"mailto:rumenlishkoff@gmail.com\">rumenlishkoff@gmail.com<\/a><\/p>\n<p>&nbsp;<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Co Authored By<br \/>\nVishnu &amp; Rumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577103\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"8484\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577103\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577103\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this article, we are going to see how to connect to AWS ActiveMQ using Python. STOMP ( Simple Text Oriented Messaging Protcol)\u00a0 is a protocol supported by Message Oriented Middleware products like ActiveMQ, RabbitMQ for faster and reliable message streaming. We are going to use STOMP with Python to[&#8230;]<\/p>\n","protected":false},"author":272,"featured_media":8511,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[61,234],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>AWS ActiveMQ Python STOMP Example - with SSL | Devops Junction<\/title>\n<meta name=\"description\" content=\"Detailed walkthrough on how to create a Python Stomp client and configure your AWS account to connect your Python client to the Amazon ActiveMQ Broker.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"AWS ActiveMQ Python STOMP Example - with SSL | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Detailed walkthrough on how to create a Python Stomp client and configure your AWS account to connect your Python client to the Amazon ActiveMQ Broker.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2022-05-21T17:07:35+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-05-23T08:26:32+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/activeMQ.jpg\",\"width\":1748,\"height\":1240},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/\",\"name\":\"AWS ActiveMQ Python STOMP Example - with SSL | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#primaryimage\"},\"datePublished\":\"2022-05-21T17:07:35+00:00\",\"dateModified\":\"2022-05-23T08:26:32+00:00\",\"description\":\"Detailed walkthrough on how to create a Python Stomp client and configure your AWS account to connect your Python client to the Amazon ActiveMQ Broker.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/241b2551eabd7453b914be32744fe6b8\"},\"headline\":\"AWS ActiveMQ Python STOMP Example &#8211; with SSL | Devops Junction\",\"datePublished\":\"2022-05-21T17:07:35+00:00\",\"dateModified\":\"2022-05-23T08:26:32+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#primaryimage\"},\"articleSection\":\"ActiveMQ,AWS\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-activemq-python-stomp-example\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/241b2551eabd7453b914be32744fe6b8\",\"name\":\"Vishnu S\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/02fe00895d488470a7b6e38963ba8d36?s=96&d=mm&r=g\",\"caption\":\"Vishnu S\"},\"sameAs\":[\"https:\/\/www.linkedin.com\/in\/vishnu-s-763644196\/\"]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8484"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/272"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=8484"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8484\/revisions"}],"predecessor-version":[{"id":8540,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8484\/revisions\/8540"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/8511"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=8484"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=8484"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=8484"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}