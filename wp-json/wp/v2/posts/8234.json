{"id":8234,"date":"2022-03-19T12:25:16","date_gmt":"2022-03-19T06:55:16","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=8234"},"modified":"2022-03-19T12:38:20","modified_gmt":"2022-03-19T07:08:20","slug":"terraform-ebs_block_device-example","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/","title":{"rendered":"Terraform ebs_block_device example &#8211; Multiple EBS volumes AWS EC2"},"content":{"rendered":"<p>In this article, we will see an example of how to use <code>ebs_block_device<\/code> mapping with AWS EC2 instance<\/p>\n<p>This article would use the template of Multiple EC2 instance creation using <strong>for_each<\/strong> and <strong>count<\/strong> together.<\/p>\n<blockquote><p>\u00a0It is highly recommended that you read our previous article <span style=\"color: #003366;\">on how to create multiple\u00a0 ec2 instances with different configurations<\/span> before following this<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-create-multiple-ec2-different-config\/\">Here is the link\u00a0<\/a><\/p><\/blockquote>\n<p>This can be considered as the upgraded version of the Terraform Manifest discussed in the aforementioned article<\/p>\n<p>This article is specially designed to cover Terraform <strong>ebs_block_device<\/strong> mapping and Terraform <strong>root_block_device<\/strong><code><\/code>mapping with multiple EC2 instance creation<\/p>\n<p>We have also covered <strong>how to add multiple <\/strong>Terraform<strong> ebs_block_device mappings<\/strong> while creating EC2 instances in this terraform manifest<\/p>\n<p>Let&#8217;s go ahead.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume.jpg\"><img class=\"post-img alignnone wp-image-8254 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume.jpg\" alt=\"Terraform ebs_block_device\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume.jpg 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume-300x213.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume-1024x726.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume-768x545.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume-1536x1090.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume-90x65.jpg 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<h2>Creating the <span style=\"color: #e81e83;\">tfvars<\/span> file with server configuration and <span style=\"color: #eb2197;\">EBS<\/span> Volumes<\/h2>\n<p>This is the configuration we are trying to achieve.<\/p>\n<p>As you can see, we are trying to create Multiple EC2 instances with different and multiple EBS Volumes per EC2 instance<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-18-at-3.11.53-AM.png\"><img class=\"alignnone size-full wp-image-8237\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-18-at-3.11.53-AM.png\" alt=\"\" width=\"1248\" height=\"688\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-18-at-3.11.53-AM.png 1248w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-18-at-3.11.53-AM-300x165.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-18-at-3.11.53-AM-1024x565.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-18-at-3.11.53-AM-768x423.png 768w\" sizes=\"(max-width: 1248px) 100vw, 1248px\" \/><\/a><\/p>\n<p>The Same configuration in the preceding table is put in the form of <code>tfvars<\/code> file<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">configuration = [\r\n  {\r\n    \"application_name\" : \"GritfyAppDev\",\r\n    \"ami\" : \"ami-0c02fb55956c7d316\",\r\n    \"no_of_instances\" : \"2\",\r\n    \"instance_type\" : \"t3a.nano\",\r\n    \"subnet_id\" : \"subnet-0f4f294d8404946eb\",\r\n    \"vpc_security_group_ids\" : [\"sg-0d15a4cac0567478c\",\"sg-0d8749c35f7439f3e\"],\r\n    \"root_block_device\": {\r\n      \"volume_size\": \"30\",\r\n      \"volume_type\": \"gp3\"\r\n      \"tags\": {\r\n        \"FileSystem\": \"\/root\"\r\n      }\r\n    }\r\n    \"ebs_block_devices\":[\r\n      {\r\n        \"device_name\" : \"\/dev\/xvdba\"\r\n        \"volume_size\": \"10\"\r\n        \"volume_type\": \"gp3\"\r\n        \"tags\": {\r\n          \"FileSystem\": \"\/hana\/data\"\r\n        }\r\n      },\r\n      {\r\n        \"device_name\" : \"\/dev\/xvdbb\"\r\n        \"volume_size\": \"20\"\r\n        \"volume_type\": \"gp3\"\r\n        \"tags\": {\r\n          \"FileSystem\": \"\/hana\/log\"\r\n        }\r\n      },\r\n      {\r\n        \"device_name\" : \"\/dev\/xvdbc\"\r\n        \"volume_size\": \"20\"\r\n        \"volume_type\": \"gp3\"\r\n        \"tags\": {\r\n          \"FileSystem\": \"\/hana\/shared\"\r\n        }\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    \"application_name\" : \"GritfyWebDev\",\r\n    \"ami\" : \"ami-0c02fb55956c7d316\",\r\n    \"no_of_instances\" : \"2\",\r\n    \"instance_type\" : \"t3a.nano\",\r\n    \"subnet_id\" : \"subnet-0f4f294d8404946eb\",\r\n    \"vpc_security_group_ids\" : [\"sg-0d15a4cac0567478c\",\"sg-0d8749c35f7439f3e\"],\r\n    \"root_block_device\": {\r\n      \"volume_size\": \"30\",\r\n      \"volume_type\": \"gp3\"\r\n      \"tags\": {\r\n        \"FileSystem\": \"\/root\"\r\n      }\r\n    }\r\n    \"ebs_block_devices\":[\r\n      {\r\n        \"device_name\" : \"\/dev\/xvdba\"\r\n        \"volume_size\": \"10\"\r\n        \"volume_type\": \"gp3\"\r\n        \"tags\": {\r\n          \"FileSystem\": \"\/hana\/data\"\r\n        }\r\n      },\r\n      {\r\n        \"device_name\" : \"\/dev\/xvdbc\"\r\n        \"volume_size\": \"20\"\r\n        \"volume_type\": \"gp3\"\r\n        \"tags\": {\r\n          \"FileSystem\": \"\/hana\/shared\"\r\n        }\r\n      },\r\n    ]\r\n  }\r\n]<\/pre>\n<p>&nbsp;<\/p>\n<p>This is the vars file we are going to use for creating 4 machines with different EBS volumes of different sizes.<\/p>\n<p>Now let us take a look at the main Terraform manifest file that uses this vars file and creates the EC2 instances<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>The Terraform <span style=\"color: #e81e83;\">main.tf<\/span> file to create Multiple EC2 with <span style=\"color: #e81e83;\">EBS<\/span> Volumes<\/h2>\n<p>So here is the main.tf file which processes the tfvars file and creates multiple EC2 instances with multiple EBS volumes and with different configurations<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-linenumbers=\"false\" data-enlighter-theme=\"bootstrap4\">provider \"aws\" {\r\n  region = \"us-east-1\"\r\n  profile = \"personal\"\r\n\r\n}\r\n\r\nlocals {\r\n  serverconfig = [\r\n    for srv in var.configuration : [\r\n      for i in range(1, srv.no_of_instances+1) : {\r\n        instance_name = \"${srv.application_name}-${i}\"\r\n        instance_type = srv.instance_type\r\n        subnet_id   = srv.subnet_id\r\n        ami = srv.ami\r\n        rootdisk = srv.root_block_device\r\n        blockdisks = srv.ebs_block_devices\r\n        securitygroupids = srv.vpc_security_group_ids\r\n      }\r\n    ]\r\n  ]\r\n}\r\n\r\n\/\/ We need to Flatten it before using it\r\nlocals {\r\n  instances = flatten(local.serverconfig)\r\n}\r\n\r\nresource \"aws_instance\" \"web\" {\r\n\r\n  for_each = {for server in local.instances: server.instance_name =&gt;  server}\r\n  \r\n  ami           = each.value.ami\r\n  instance_type = each.value.instance_type\r\n  vpc_security_group_ids = each.value.securitygroupids\r\n  key_name =  \"Sarav-Easy\"\r\n  associate_public_ip_address = true\r\n  user_data = \"${file(\"init.sh\")}\"\r\n  subnet_id = each.value.subnet_id\r\n  tags = {\r\n    Name = \"${each.value.instance_name}\"\r\n  }  \r\n  root_block_device {\r\n      volume_type = each.value.rootdisk.volume_type\r\n      volume_size = each.value.rootdisk.volume_size\r\n      tags = each.value.rootdisk.tags\r\n    }\r\n\r\n  dynamic \"ebs_block_device\"{\r\n    for_each = each.value.blockdisks\r\n    content {\r\n      volume_type = ebs_block_device.value.volume_type\r\n      volume_size = ebs_block_device.value.volume_size\r\n      tags = ebs_block_device.value.tags\r\n      device_name = ebs_block_device.value.device_name\r\n    }\r\n  }\r\n  \r\n}\r\noutput \"instances\" {\r\n  value       = \"${aws_instance.web}\"\r\n  description = \"All Machine details\"\r\n}\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>It must be a little confusing at the beginning, what exactly this terraform manifest is doing.<\/p>\n<p>to understand this better. I strongly recommend you to read the other article given at the beginning of this article<\/p>\n<p>Here I have given the<a href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-create-multiple-ec2-different-config\/\">\u00a0link here once again<\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>Inspecting the variables using <span style=\"color: #eb2197;\">terraform console<\/span><\/h2>\n<p>I hope you have read the article and understood what <code>local.serverconfig<\/code> variable does and why we are reading the configuration from the tfvars using <code>foreach<\/code> and <code>for<\/code> together.<\/p>\n<p>To understand what these variables are holding during the runtime.<\/p>\n<p>I am going to use <code>terraform console<\/code>\u00a0 and try to inspect the variables\u00a0before I apply the changes<\/p>\n<p>Here is what the <strong>local.serverconfig<\/strong> looks like<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">&gt; local.serverconfig\r\n[\r\n  [\r\n    {\r\n      \"ami\" = \"ami-0c02fb55956c7d316\"\r\n      \"blockdisks\" = [\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdba\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/hana\/data\"\r\n          }\r\n          \"volume_size\" = \"10\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdbb\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/hana\/log\"\r\n          }\r\n          \"volume_size\" = \"20\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdbc\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/hana\/shared\"\r\n          }\r\n          \"volume_size\" = \"20\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n      ]\r\n      \"instance_name\" = \"GritfyAppDev-1\"\r\n      \"instance_type\" = \"t3a.nano\"\r\n      \"rootdisk\" = {\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/root\"\r\n        }\r\n        \"volume_size\" = \"30\"\r\n        \"volume_type\" = \"gp3\"\r\n      }\r\n      \"securitygroupids\" = [\r\n        \"sg-0d15a4cac0567478c\",\r\n        \"sg-0d8749c35f7439f3e\",\r\n      ]\r\n      \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n    },\r\n    {\r\n      \"ami\" = \"ami-0c02fb55956c7d316\"\r\n      \"blockdisks\" = [\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdba\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/hana\/data\"\r\n          }\r\n          \"volume_size\" = \"10\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdbb\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/hana\/log\"\r\n          }\r\n          \"volume_size\" = \"20\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdbc\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/hana\/shared\"\r\n          }\r\n          \"volume_size\" = \"20\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n      ]\r\n      \"instance_name\" = \"GritfyAppDev-2\"\r\n      \"instance_type\" = \"t3a.nano\"\r\n      \"rootdisk\" = {\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/root\"\r\n        }\r\n        \"volume_size\" = \"30\"\r\n        \"volume_type\" = \"gp3\"\r\n      }\r\n      \"securitygroupids\" = [\r\n        \"sg-0d15a4cac0567478c\",\r\n        \"sg-0d8749c35f7439f3e\",\r\n      ]\r\n      \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n    },\r\n  ],\r\n  [\r\n    {\r\n      \"ami\" = \"ami-0c02fb55956c7d316\"\r\n      \"blockdisks\" = [\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdba\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/web\/data\"\r\n          }\r\n          \"volume_size\" = \"10\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdbc\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/web\/shared\"\r\n          }\r\n          \"volume_size\" = \"20\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n      ]\r\n      \"instance_name\" = \"GritfyWebDev-1\"\r\n      \"instance_type\" = \"t3a.nano\"\r\n      \"rootdisk\" = {\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/root\"\r\n        }\r\n        \"volume_size\" = \"30\"\r\n        \"volume_type\" = \"gp3\"\r\n      }\r\n      \"securitygroupids\" = [\r\n        \"sg-0d15a4cac0567478c\",\r\n        \"sg-0d8749c35f7439f3e\",\r\n      ]\r\n      \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n    },\r\n    {\r\n      \"ami\" = \"ami-0c02fb55956c7d316\"\r\n      \"blockdisks\" = [\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdba\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/web\/data\"\r\n          }\r\n          \"volume_size\" = \"10\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n        {\r\n          \"device_name\" = \"\/dev\/xvdbc\"\r\n          \"tags\" = {\r\n            \"FileSystem\" = \"\/web\/shared\"\r\n          }\r\n          \"volume_size\" = \"20\"\r\n          \"volume_type\" = \"gp3\"\r\n        },\r\n      ]\r\n      \"instance_name\" = \"GritfyWebDev-2\"\r\n      \"instance_type\" = \"t3a.nano\"\r\n      \"rootdisk\" = {\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/root\"\r\n        }\r\n        \"volume_size\" = \"30\"\r\n        \"volume_type\" = \"gp3\"\r\n      }\r\n      \"securitygroupids\" = [\r\n        \"sg-0d15a4cac0567478c\",\r\n        \"sg-0d8749c35f7439f3e\",\r\n      ]\r\n      \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n    },\r\n  ],\r\n]<\/pre>\n<p>as you can see it is kind of messed up with multiple nested lists\/array <code>[ [] [] [] ]<\/code><\/p>\n<p>So we are flattening it and assigning the output to <strong>local.instances<\/strong><\/p>\n<p>Let us inspect the value of <code>local.instances<\/code> too using terraform console<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">&gt; local.instances\r\n[\r\n  {\r\n    \"ami\" = \"ami-0c02fb55956c7d316\"\r\n    \"blockdisks\" = [\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdba\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/hana\/data\"\r\n        }\r\n        \"volume_size\" = \"10\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdbb\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/hana\/log\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdbc\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/hana\/shared\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n    ]\r\n    \"instance_name\" = \"GritfyAppDev-1\"\r\n    \"instance_type\" = \"t3a.nano\"\r\n    \"rootdisk\" = {\r\n      \"tags\" = {\r\n        \"FileSystem\" = \"\/root\"\r\n      }\r\n      \"volume_size\" = \"30\"\r\n      \"volume_type\" = \"gp3\"\r\n    }\r\n    \"securitygroupids\" = [\r\n      \"sg-0d15a4cac0567478c\",\r\n      \"sg-0d8749c35f7439f3e\",\r\n    ]\r\n    \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n  },\r\n  {\r\n    \"ami\" = \"ami-0c02fb55956c7d316\"\r\n    \"blockdisks\" = [\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdba\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/hana\/data\"\r\n        }\r\n        \"volume_size\" = \"10\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdbb\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/hana\/log\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdbc\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/hana\/shared\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n    ]\r\n    \"instance_name\" = \"GritfyAppDev-2\"\r\n    \"instance_type\" = \"t3a.nano\"\r\n    \"rootdisk\" = {\r\n      \"tags\" = {\r\n        \"FileSystem\" = \"\/root\"\r\n      }\r\n      \"volume_size\" = \"30\"\r\n      \"volume_type\" = \"gp3\"\r\n    }\r\n    \"securitygroupids\" = [\r\n      \"sg-0d15a4cac0567478c\",\r\n      \"sg-0d8749c35f7439f3e\",\r\n    ]\r\n    \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n  },\r\n  {\r\n    \"ami\" = \"ami-0c02fb55956c7d316\"\r\n    \"blockdisks\" = [\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdba\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/data\"\r\n        }\r\n        \"volume_size\" = \"10\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdbc\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/shared\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n    ]\r\n    \"instance_name\" = \"GritfyWebDev-1\"\r\n    \"instance_type\" = \"t3a.nano\"\r\n    \"rootdisk\" = {\r\n      \"tags\" = {\r\n        \"FileSystem\" = \"\/root\"\r\n      }\r\n      \"volume_size\" = \"30\"\r\n      \"volume_type\" = \"gp3\"\r\n    }\r\n    \"securitygroupids\" = [\r\n      \"sg-0d15a4cac0567478c\",\r\n      \"sg-0d8749c35f7439f3e\",\r\n    ]\r\n    \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n  },\r\n  {\r\n    \"ami\" = \"ami-0c02fb55956c7d316\"\r\n    \"blockdisks\" = [\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdba\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/data\"\r\n        }\r\n        \"volume_size\" = \"10\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdbc\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/shared\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n    ]\r\n    \"instance_name\" = \"GritfyWebDev-2\"\r\n    \"instance_type\" = \"t3a.nano\"\r\n    \"rootdisk\" = {\r\n      \"tags\" = {\r\n        \"FileSystem\" = \"\/root\"\r\n      }\r\n      \"volume_size\" = \"30\"\r\n      \"volume_type\" = \"gp3\"\r\n    }\r\n    \"securitygroupids\" = [\r\n      \"sg-0d15a4cac0567478c\",\r\n      \"sg-0d8749c35f7439f3e\",\r\n    ]\r\n    \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n  },\r\n]<\/pre>\n<p>as you can see, the list is now flattened ( where it has to be flattened)<\/p>\n<p>This is the final variable that would go to <code>aws_instance<\/code> and be parsed using <code>for_each<\/code><\/p>\n<p>If you take a single element\/item from the <code>local.instances<\/code> list it looks like this<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">{\r\n    \"ami\" = \"ami-0c02fb55956c7d316\"\r\n    \"blockdisks\" = [\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdba\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/data\"\r\n        }\r\n        \"volume_size\" = \"10\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n      {\r\n        \"device_name\" = \"\/dev\/xvdbc\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/shared\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n      },\r\n    ]\r\n    \"instance_name\" = \"GritfyWebDev-2\"\r\n    \"instance_type\" = \"t3a.nano\"\r\n    \"rootdisk\" = {\r\n      \"tags\" = {\r\n        \"FileSystem\" = \"\/root\"\r\n      }\r\n      \"volume_size\" = \"30\"\r\n      \"volume_type\" = \"gp3\"\r\n    }\r\n    \"securitygroupids\" = [\r\n      \"sg-0d15a4cac0567478c\",\r\n      \"sg-0d8749c35f7439f3e\",\r\n    ]\r\n    \"subnet_id\" = \"subnet-0f4f294d8404946eb\"\r\n  }<\/pre>\n<p>Now everything is syntactically correct is processable in this, except the <code>blockdisks<\/code> part.<\/p>\n<p>As ebs_block_device does not accept a list of volumes, unlike securitygroupids.<\/p>\n<p>we need to split the blockdisks variable into multiple <code>ebs_block_device<\/code><\/p>\n<p>since we have already used <code>for_each<\/code> once inside the aws_instance resource we cannot use it once again<\/p>\n<p>So we need to dynamically convert the blockdisks list to individual blocks like this<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">ebs_block_device      \r\n{\r\n        \"device_name\" = \"\/dev\/xvdba\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/data\"\r\n        }\r\n        \"volume_size\" = \"10\"\r\n        \"volume_type\" = \"gp3\"\r\n}\r\n\r\nebs_block_device\r\n{\r\n        \"device_name\" = \"\/dev\/xvdbc\"\r\n        \"tags\" = {\r\n          \"FileSystem\" = \"\/web\/shared\"\r\n        }\r\n        \"volume_size\" = \"20\"\r\n        \"volume_type\" = \"gp3\"\r\n}<\/pre>\n<p>to do the same we are using the <code>dynamic<\/code> block.<\/p>\n<p>the <code>dynamic<\/code> creates a code block with whatever the title we need and the content.<\/p>\n<p>Inside dynamic, we can use the <code>for_each<\/code>to iterate over the <code>blockdisks<\/code> list and create more <code>ebs_block_device<\/code> code blocks<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"json\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">dynamic \"ebs_block_device\"{\r\n  for_each = each.value.blockdisks\r\n  content {\r\n    volume_type = ebs_block_device.value.volume_type\r\n    volume_size = ebs_block_device.value.volume_size\r\n    tags = ebs_block_device.value.tags\r\n    device_name = ebs_block_device.value.device_name\r\n  }\r\n}\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>Not sure how far you are able to follow this but reading it once or twice and trying it out practically might help you.<\/p>\n<p>If you have any specific questions still bugging you. Please do reach out to me in the comments section. I will try to help.<\/p>\n<p>&nbsp;<\/p>\n<h2>The Final Validation &#8211; <span style=\"color: #eb2197;\">Terraform plan<\/span>.<\/h2>\n<p>To understand how our <strong>tfvars<\/strong> and our <strong>main.tf<\/strong> with multiple for_each and dynamic block have transformed before it can be applied on AWS. Terraform plan is the only option<\/p>\n<p>Let us run terraform plan and see how the output looks like<\/p>\n<p>To see the complete result how my terraform plan looked like. please visit this link<\/p>\n<p><a href=\"https:\/\/gist.github.com\/AKSarav\/ddd73d30de8a09f4aa7082e1bbad4aa5\">https:\/\/gist.github.com\/AKSarav\/ddd73d30de8a09f4aa7082e1bbad4aa5<\/a><\/p>\n<p>To reduce article length, I have kept the output of the terraform plan in GIST. you can refer.<\/p>\n<p>&nbsp;<\/p>\n<h2><span style=\"color: #eb2197;\">Apply<\/span>ing the Changes and <span style=\"color: #eb2197;\">Validating<\/span><\/h2>\n<p>Now it&#8217;s a time to Apply our changes using Terraform.<\/p>\n<p>As a best practice. please make sure you are using the right <code>aws<\/code> provisioner config and the right region before entering yes to <code>terraform apply<\/code><\/p>\n<p>Here is the execution result as a quick video clip. you can pause and refer how what my plan and the output looked like<\/p>\n<p><script id=\"asciicast-k9iQQbPZ0X5tlQwh5ibNeJ7zT\" src=\"https:\/\/asciinema.org\/a\/k9iQQbPZ0X5tlQwh5ibNeJ7zT.js\" async><\/script><\/p>\n<p>Once the terraform completes the job.<\/p>\n<p>You can directly head to the AWS console to validate if the EBS volumes are created and mapped right.<\/p>\n<p>Here are the screenshots I have taken from my aws console upon completion<\/p>\n<p>All Four instances are created with the right subnet and Naming convention<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM.png\"><img class=\"post-img alignnone wp-image-8246 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM.png\" alt=\"\" width=\"3344\" height=\"578\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM.png 3344w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM-300x52.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM-1024x177.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM-768x133.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM-1536x265.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.22-AM-2048x354.png 2048w\" sizes=\"(max-width: 3344px) 100vw, 3344px\" \/><\/a><\/p>\n<p>Here is the GritfyWebDev Server with 1 root volume and 2 EBS volumes<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM.png\"><img class=\"post-img alignnone wp-image-8244 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM.png\" alt=\"Terraform ebs_block_device\" width=\"3278\" height=\"908\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM.png 3278w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM-300x83.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM-1024x284.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM-768x213.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM-1536x425.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.59-AM-2048x567.png 2048w\" sizes=\"(max-width: 3278px) 100vw, 3278px\" \/><\/a><\/p>\n<p>Here is the GritfyAppDev Server with 1 root volume and 3 EBS Volumes<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM.png\"><img class=\"post-img alignnone wp-image-8245 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM.png\" alt=\"Terraform ebs_block_device\" width=\"3280\" height=\"966\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM.png 3280w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM-300x88.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM-1024x302.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM-768x226.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM-1536x452.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Screenshot-2022-03-19-at-2.18.51-AM-2048x603.png 2048w\" sizes=\"(max-width: 3280px) 100vw, 3280px\" \/><\/a><\/p>\n<p>All of them are created just the way we wanted.<\/p>\n<p>&nbsp;<\/p>\n<h2>Some <span style=\"color: #eb2197;\">Caveats<\/span> and prerequisites<\/h2>\n<p>There are a few points that you have to remember while using ebs_block_device with terraforming and these are mostly pre-requisites too for the successful execution of your terraform manifest.<\/p>\n<h3>Choosing the right device_name for ebs_block_device<\/h3>\n<p>for <code>ebs_block_device<\/code> device_name to be mandatorily specified and you cannot give the device_name just like that. there is a standard and it varies based on the AMI you are choosing.<\/p>\n<p><a href=\"https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/device_naming.html\">Refer to this article<\/a> to know more about the naming standards of EBS volumes<\/p>\n<h3><\/h3>\n<h3>The EBS block name within the Linux machine<\/h3>\n<p>Despite you are giving the device_name right. the device name would not be the disk once your Linux machines are created.<\/p>\n<p>Again based on the AMI you are using, internally the name would change<\/p>\n<p><a href=\"https:\/\/docs.aws.amazon.com\/AWSEC2\/latest\/UserGuide\/device_naming.html#device-name-limits\">Read more about the Device name limitations\u00a0<\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>EBS volumes are only attached not mounted<\/h3>\n<p>This terraform manifest and the ebs_block_device stops at creating the EBS volumes and attaching them to your EC2 instance.<\/p>\n<p>Except for the root volume, no volumes defined under the ebs_block_device would be mounted automatically. You need to login to the machine and mount them to the right filesystem<\/p>\n<p>you can use the following commands to list the disks after you login to EC2 and mount them manually<\/p>\n<pre>lsblk\r\n\r\nor\r\n\r\nfdisk -l<\/pre>\n<p>the mount command might vary based on the OS you are using.<\/p>\n<p>&nbsp;<\/p>\n<h2>All of this code available on <span style=\"color: #eb2197;\">Github<\/span><\/h2>\n<p>If you feel any issues in copying the source code from here. you can directly clone the github repo or copy the code from there<\/p>\n<p><a href=\"https:\/\/github.com\/AKSarav\/Terraform-Multiple-Ec2-DifferentConfig-EBSVolumes\">here is the github repo link<\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>In this article, we have seen terraform ebs_block_device example and how to add storage volumes to aws_instance<\/p>\n<p>we have also learnt how to use terraform for_each, for loop and dynamic blocks<\/p>\n<p>If you have any questions or further please let us know in the comments<\/p>\n<p>For any professional support and long term projects do reach out to us at rumenlishkoff@gmail.com<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<h2>Stay Connected<\/h2>\n<p>You can choose to follow me on Linked in for more articles and updates<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578022\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"8234\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578022\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578022\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In this article, we will see an example of how to use ebs_block_device mapping with AWS EC2 instance This article would use the template of Multiple EC2 instance creation using for_each and count together. \u00a0It is highly recommended that you read our previous article on how to create multiple\u00a0 ec2[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":8254,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[1],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Terraform ebs_block_device example - Multiple EBS volumes AWS EC2<\/title>\n<meta name=\"description\" content=\"Terraform ebs_block_device example. How to create Multiple Ec2 instances with multiple Storage GP2, GP3 EBS volumes. How to add storage to aws_instance.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Terraform ebs_block_device example - Multiple EBS volumes AWS EC2\" \/>\n<meta property=\"og:description\" content=\"Terraform ebs_block_device example. How to create Multiple Ec2 instances with multiple Storage GP2, GP3 EBS volumes. How to add storage to aws_instance.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2022-03-19T06:55:16+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-19T07:08:20+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/03\/Terraform-ebs-volume.jpg\",\"width\":1748,\"height\":1240,\"caption\":\"Terraform ebs_block_device\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/\",\"name\":\"Terraform ebs_block_device example - Multiple EBS volumes AWS EC2\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#primaryimage\"},\"datePublished\":\"2022-03-19T06:55:16+00:00\",\"dateModified\":\"2022-03-19T07:08:20+00:00\",\"description\":\"Terraform ebs_block_device example. How to create Multiple Ec2 instances with multiple Storage GP2, GP3 EBS volumes. How to add storage to aws_instance.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Terraform ebs_block_device example &#8211; Multiple EBS volumes AWS EC2\",\"datePublished\":\"2022-03-19T06:55:16+00:00\",\"dateModified\":\"2022-03-19T07:08:20+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#primaryimage\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/terraform-ebs_block_device-example\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8234"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=8234"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8234\/revisions"}],"predecessor-version":[{"id":8262,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8234\/revisions\/8262"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/8254"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=8234"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=8234"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=8234"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}