{"id":2986,"date":"2019-03-10T17:45:20","date_gmt":"2019-03-10T12:15:20","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=2986"},"modified":"2022-06-19T11:30:24","modified_gmt":"2022-06-19T06:00:24","slug":"docker-nodejs-example","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/","title":{"rendered":"Docker NodeJS Example &#8211; Run NodeJS on Docker | Devops Junction"},"content":{"rendered":"<p>In this post, we are going to see how to Design and Develop a Simple NodeJS web application and Deploy the NodeJS web application to Docker and How to create Docker Images and start the container from the images and How to manage the docker container and publish your images to docker hub etc.<\/p>\n<p>Docker Node JS Example Web Application.<\/p>\n<p>NodeJS is a JavaScript runtime environment,\u00a0 widely used and popular for its asynchronous request handling. It is one of the latest and futuristic technologies being used in modern web development.<\/p>\n<p>Docker is a container management system, It helps us to create, manage and administrate containers in an easy and efficient way.<\/p>\n<p>Shortly put, This post is all about Docker NodeJS.<\/p>\n<p>To know more about what is container and containerisation, <a href=\"https:\/\/www.middlewareinventory.com\/blog\/what-is-container-and-containerization-a-basic-notes\/\">Refer this link<\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>The Index<\/h2>\n<p>This is the summary of topics we are going to see in this article.<\/p>\n<ol>\n<li>What we are going to build &#8211; Docker NodeJS Website<\/li>\n<li>Installing Docker and NodeJS<\/li>\n<li>\u00a0Node JS Configuration and Setup\n<ol>\n<li>Create a package.json file<\/li>\n<li>Create the Application&#8217;s Primary JavaScript file<\/li>\n<li>Create HTML pages for your website<\/li>\n<\/ol>\n<\/li>\n<li>Test Our Website Locally Before Packing it as Container<\/li>\n<li>\u00a0Docker Configuration and Setup\n<ol>\n<li>Create a Dockerfile<\/li>\n<li>Creating Image from Dockerfile<\/li>\n<li>Create and Start the Container from the Image we have created<\/li>\n<li>Validate the web application Running inside Container.<\/li>\n<li>Publish your Image to the DockerHUB (optional)<\/li>\n<\/ol>\n<\/li>\n<li>Commands to Manager your Container ( Additional)<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h2>What we are going to build &#8211; Docker NodeJS Example Web App<\/h2>\n<p>This is the demo or sample Docker NodeJS example website we are going to build.<\/p>\n<p>Before proceeding to the steps of design and development of Node JS website and Docker Image. Let us see how is our desired result is going to be<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM.png\"><img class=\"alignnone size-full wp-image-2993\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM.png\" alt=\"\" width=\"1421\" height=\"545\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM.png 1421w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM-300x115.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM-768x295.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM-1024x393.png 1024w\" sizes=\"(max-width: 1421px) 100vw, 1421px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Installing Docker and NodeJS<\/h2>\n<p>In order to follow this article, It is good to have the following environment set at your host machine or this is the technology stack being used in this article.<\/p>\n<blockquote><p>Note*: This is not inside the container. This is a Host machine ( Local Environment) where you have Docker installed (or) going to install.<\/p><\/blockquote>\n<p><strong>Machine:<\/strong> Mac\/Windows<\/p>\n<p><strong>Docker Installation:<\/strong> Docker CE<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">aksarav<span class=\"hljs-variable\" style=\"color: #a5c261;\">@middlewareinventory:<\/span>\/tmp$ docker version\r\n<span class=\"hljs-attribute\" style=\"color: #cda869;\">Client<\/span>:\r\n <span class=\"hljs-attribute\" style=\"color: #cda869;\">Version<\/span>:           <span class=\"hljs-number\" style=\"color: #a5c261;\">18.06<\/span>.<span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>-ce\r\n API <span class=\"hljs-attribute\" style=\"color: #cda869;\">version<\/span>:       <span class=\"hljs-number\" style=\"color: #a5c261;\">1.38<\/span>\r\n Go <span class=\"hljs-attribute\" style=\"color: #cda869;\">version<\/span>:        go1.<span class=\"hljs-number\" style=\"color: #a5c261;\">10.3<\/span>\r\n Git <span class=\"hljs-attribute\" style=\"color: #cda869;\">commit<\/span>:        e68fc7a\r\n <span class=\"hljs-attribute\" style=\"color: #cda869;\">Built<\/span>:             Tue Aug <span class=\"hljs-number\" style=\"color: #a5c261;\">21<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">17<\/span>:<span class=\"hljs-number\" style=\"color: #a5c261;\">21<\/span>:<span class=\"hljs-number\" style=\"color: #a5c261;\">31<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">2018<\/span>\r\n OS\/<span class=\"hljs-attribute\" style=\"color: #cda869;\">Arch<\/span>:           darwin\/amd64\r\n <span class=\"hljs-attribute\" style=\"color: #cda869;\">Experimental<\/span>:      false\r\n\r\n<span class=\"hljs-attribute\" style=\"color: #cda869;\">Server<\/span>:\r\n <span class=\"hljs-attribute\" style=\"color: #cda869;\">Engine<\/span>:\r\n  <span class=\"hljs-attribute\" style=\"color: #cda869;\">Version<\/span>:          <span class=\"hljs-number\" style=\"color: #a5c261;\">18.06<\/span>.<span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>-ce\r\n  API <span class=\"hljs-attribute\" style=\"color: #cda869;\">version<\/span>:      <span class=\"hljs-number\" style=\"color: #a5c261;\">1.38<\/span> (minimum version <span class=\"hljs-number\" style=\"color: #a5c261;\">1.12<\/span>)\r\n  Go <span class=\"hljs-attribute\" style=\"color: #cda869;\">version<\/span>:       go1.<span class=\"hljs-number\" style=\"color: #a5c261;\">10.3<\/span>\r\n  Git <span class=\"hljs-attribute\" style=\"color: #cda869;\">commit<\/span>:       e68fc7a\r\n  <span class=\"hljs-attribute\" style=\"color: #cda869;\">Built<\/span>:            Tue Aug <span class=\"hljs-number\" style=\"color: #a5c261;\">21<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">17<\/span>:<span class=\"hljs-number\" style=\"color: #a5c261;\">29<\/span>:<span class=\"hljs-number\" style=\"color: #a5c261;\">02<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">2018<\/span>\r\n  OS\/<span class=\"hljs-attribute\" style=\"color: #cda869;\">Arch<\/span>:          linux\/amd64\r\n  <span class=\"hljs-attribute\" style=\"color: #cda869;\">Experimental<\/span>:     true<\/pre>\n<p><strong>Package Manager: <\/strong>NPM<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">aksarav@middlewareinventory:\/tmp$ npm <span class=\"hljs-keyword\" style=\"color: #c26230;\">version<\/span>\r\n{ dockernodejsapp: <span class=\"hljs-string\" style=\"color: #a5c261;\">'1.0.0'<\/span>,\r\n  npm: <span class=\"hljs-string\" style=\"color: #a5c261;\">'6.4.1'<\/span>,\r\n  are<span class=\"hljs-variable\" style=\"color: #a5c261;\">s:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'1.15.0'<\/span>,\r\n  cldr: <span class=\"hljs-string\" style=\"color: #a5c261;\">'33.1'<\/span>,\r\n  http_parser: <span class=\"hljs-string\" style=\"color: #a5c261;\">'2.8.0'<\/span>,\r\n  icu: <span class=\"hljs-string\" style=\"color: #a5c261;\">'62.1'<\/span>,\r\n  module<span class=\"hljs-variable\" style=\"color: #a5c261;\">s:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'64'<\/span>,\r\n  napi: <span class=\"hljs-string\" style=\"color: #a5c261;\">'3'<\/span>,\r\n  nghttp2: <span class=\"hljs-string\" style=\"color: #a5c261;\">'1.34.0'<\/span>,\r\n  node: <span class=\"hljs-string\" style=\"color: #a5c261;\">'10.15.0'<\/span>,\r\n  openss<span class=\"hljs-variable\" style=\"color: #a5c261;\">l:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'1.1.0j'<\/span>,\r\n  tz: <span class=\"hljs-string\" style=\"color: #a5c261;\">'2018e'<\/span>,\r\n  unicode: <span class=\"hljs-string\" style=\"color: #a5c261;\">'11.0'<\/span>,\r\n  <span class=\"hljs-keyword\" style=\"color: #c26230;\">u<\/span><span class=\"hljs-variable\" style=\"color: #a5c261;\">v:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'1.23.2'<\/span>,\r\n  v8: <span class=\"hljs-string\" style=\"color: #a5c261;\">'6.8.275.32-node.45'<\/span>,\r\n  zli<span class=\"hljs-variable\" style=\"color: #a5c261;\">b:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'1.2.11'<\/span> }\r\n<\/pre>\n<p><strong>Server Framework:<\/strong> NodeJS<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">aksarav<span class=\"hljs-variable\" style=\"color: #a5c261;\">@middlewareinventory:<\/span>\/tmp$ node &#8211; version\r\nv10.<span class=\"hljs-number\" style=\"color: #a5c261;\">15.0<\/span><\/pre>\n<p><strong>IDE:\u00a0\u00a0<\/strong>Visual Studio Code in my case.<\/p>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>NodeJS Configuration and Setup<\/h2>\n<p>In this segment, we are going to see the Node JS specific configuration steps like how to create a Node JS website from the scratch<\/p>\n<p>We are going to use an EXPRESS\u00a0 web application framework of Node js to build websites as it can easily render the HTML pages and do everything we need for modern website development.<\/p>\n<blockquote><p>Note*: Before performing the following steps, you must create a workspace (or) project directory anywhere in your file system.\u00a0 In my case,\u00a0 workspace or Project Root is\u00a0\u00a0<code><span class=\"s1\"><b>\/apps\/docker\/DockerNodeJSProject<\/b><\/span><\/code><\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<h3>Step1: Create a package.json file<\/h3>\n<p>package.json file generally resides in the project root directory and it contains the METADATA and all the project specific information and dependencies of your project.<\/p>\n<p>Inside the project root directory\u00a0 create a new file named <strong>package.json<\/strong> with the following Contents<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">{\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"dependencies\"<\/span>: {\r\n    <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"express\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"*\"<\/span>\r\n  },\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"scripts\"<\/span>: {\r\n    <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"start\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"node app.js\"<\/span>\r\n  },\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"dockernodejsproject\"<\/span>,\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"version\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"1.0.0\"<\/span>,\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"main\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"app.js\"<\/span>,\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"devDependencies\"<\/span>: {},\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"author\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"SaravAK\"<\/span>,\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"license\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"MIT\"<\/span>,\r\n  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">\"description\"<\/span>: <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Sample NodeJS Project with Expres FrameWork and Running in Docker Container\"<\/span>\r\n}<\/pre>\n<p>You can change the Author name and License and the project name according to your need.<\/p>\n<p>If you notice, there is a property\/key named <em>main<\/em> holding the <strong>&#8220;app.js&#8221;<\/strong> as the value. This is our index file or the primary JavaScript file where we are going to create our web application specific configuration.<\/p>\n<p>&nbsp;<\/p>\n<h3>Step2:\u00a0\u00a0Create the Application&#8217;s Primary JavaScript file (app.js)<\/h3>\n<p>This is the primary JavaScript file for our web application. which is the core file for the NODE to set up our web application<\/p>\n<p>This file would be having all the site-specific\u00a0information like the HTML page to render or the HTML code to display along with the server-specific information like the port number and listen-address etc.<\/p>\n<p>Now in the project root, create a new file named <strong>app.js<\/strong> and paste the following content.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-keyword\" style=\"color: #c26230;\">const<\/span> express = <span class=\"hljs-keyword\" style=\"color: #c26230;\">require<\/span>(<span class=\"hljs-string\" style=\"color: #a5c261;\">'express'<\/span>);\r\n<span class=\"hljs-keyword\" style=\"color: #c26230;\">const<\/span> app = express();\r\n<span class=\"hljs-keyword\" style=\"color: #c26230;\">const<\/span> path = <span class=\"hljs-keyword\" style=\"color: #c26230;\">require<\/span>(<span class=\"hljs-string\" style=\"color: #a5c261;\">'path'<\/span>);\r\n\r\n<span style=\"color: #ffff00;\"><span class=\"hljs-comment\" style=\"font-style: italic;\">\/\/ this will accept all the calls to root URL http:\/\/localhost:8080\/<\/span>\r\n<span class=\"hljs-comment\" style=\"font-style: italic;\">\/\/ It will render the index.html available in the Project root directory as a Response<\/span><\/span>\r\napp.get(<span class=\"hljs-string\" style=\"color: #a5c261;\">'\/'<\/span>, (req,res) =&gt; {\r\n  res.sendFile(path.join(__dirname+<span class=\"hljs-string\" style=\"color: #a5c261;\">'\/index.html'<\/span>));\r\n  <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">\/\/__dirname : It will resolve to your project folder.<\/span>\r\n});\r\n\r\n<span style=\"color: #ffff00;\"><span class=\"hljs-comment\" style=\"font-style: italic;\">\/\/ this will accept all the calls to the URL http:\/\/localhost:8080\/about<\/span>\r\n<span class=\"hljs-comment\" style=\"font-style: italic;\">\/\/ It will render the about.html available in the Project root directory as a Response<\/span><\/span>\r\napp.get(<span class=\"hljs-string\" style=\"color: #a5c261;\">'\/about'<\/span>, (req,res) =&gt; {\r\n    res.sendFile(path.join(__dirname+<span class=\"hljs-string\" style=\"color: #a5c261;\">'\/about.html'<\/span>));\r\n    <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">\/\/__dirname : It will resolve to your project folder.<\/span>\r\n  });\r\n\r\napp.listen(<span class=\"hljs-number\" style=\"color: #a5c261;\">8080<\/span>, () =&gt; {\r\n    console.log(<span class=\"hljs-string\" style=\"color: #a5c261;\">'Listening on port 8080'<\/span>);\r\n});\r\n<\/pre>\n<p>This is a simple code with pretty much information in the comments on what each module is doing.\u00a0 So we are now having two listeners<\/p>\n<ul>\n<li>Listener <strong>&#8220;\/&#8221;<\/strong> &#8212;\u00a0 Home Page &#8211;\u00a0 It renders <strong>index.html<\/strong> page<\/li>\n<li>Listener <strong>&#8220;\/about&#8221;<\/strong> &#8212; About Us Page &#8211; It renders <strong>about.html<\/strong> page<\/li>\n<\/ul>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h3>Step3:\u00a0 \u00a0Place the HTML files required for our Project<\/h3>\n<p>As we have already defined the HTML file names in the JavaScript file. Now it is a time to place the files in the project root directory<\/p>\n<p><strong>The <span style=\"color: #d60d53;\">index.html<\/span> page<\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">&lt;!DOCTYPE html&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title<\/span>&gt;<\/span>Sample Home Page <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">src<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">rel<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"stylesheet\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/css\/bootstrap.min.css\"<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">rel<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"stylesheet\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/css\/bootstrap-theme.min.css\"<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">src<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/js\/bootstrap.min.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">style<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"margin:100px;\"<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">nav<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"navbar navbar-inverse navbar-static-top\"<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"container\"<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"navbar-brand\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\/\"<\/span>&gt;<\/span>Middleware Inventory<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ul<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"nav navbar-nav\"<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"active\"<\/span>&gt;<\/span>\r\n          <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\/\"<\/span>&gt;<\/span>Home<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span>&gt;<\/span>\r\n          <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\/about\"<\/span>&gt;<\/span>About<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ul<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">nav<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"jumbotron\"<\/span>  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">style<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"padding:40px;\"<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h1<\/span>&gt;<\/span>Hello from  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"text-primary\"<\/span>&gt;<\/span>Middleware[i<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"text-danger\"<\/span>&gt;<\/span>]nventory<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h1<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span>It is good to have you here this is a Simple WebSite built in <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"bg-info\"<\/span>&gt;<\/span>Node JS<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span>&gt;<\/span> and Running on <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"bg-success\"<\/span>&gt;<\/span>Docker Container<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">span<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"btn btn-primary btn-lg\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"#\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">role<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"button\"<\/span>&gt;<\/span>What's New<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html<\/span>&gt;<\/span>\r\n<\/span><\/pre>\n<p>&nbsp;<\/p>\n<p><strong>The <span style=\"color: #d60d53;\">about.html<\/span> page<\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"xml\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">&lt;!DOCTYPE html&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title<\/span>&gt;<\/span>About Us Page<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">src<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">rel<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"stylesheet\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/css\/bootstrap.min.css\"<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">link<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">rel<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"stylesheet\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/css\/bootstrap-theme.min.css\"<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">src<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/js\/bootstrap.min.js\"<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">script<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">style<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"margin:100px;\"<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">nav<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"navbar navbar-inverse navbar-static-top\"<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"container\"<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"navbar-brand\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\/\"<\/span>&gt;<\/span>Middleware Inventory<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ul<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"nav navbar-nav\"<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span>&gt;<\/span>\r\n          <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\/\"<\/span>&gt;<\/span>Home<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"active\"<\/span>&gt;<\/span>\r\n          <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\/about\"<\/span>&gt;<\/span>About<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">li<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">ul<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">nav<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"jumbotron\"<\/span>  <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">style<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"padding:40px;\"<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h1<\/span>&gt;<\/span>About Us<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h1<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">strong<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span> An Inventory of Information - Middleware | Devops | Infrastructure Automation and much more<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">strong<\/span>&gt;<\/span>\r\n        <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">class<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"btn btn-primary btn-lg\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">href<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"#\"<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">role<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"button\"<\/span>&gt;<\/span>Click here to Join us<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">a<\/span>&gt;<\/span><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span>\r\n      <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span>&gt;<\/span>\r\n    <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">div<\/span>&gt;<\/span>\r\n  <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html<\/span>&gt;<\/span>\r\n<\/span><\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Test our Web Application Locally Before Packing as Container<\/h2>\n<p>In order to start the web application we have designed,\u00a0 we need to have the dependencies Installed. In our case, we have only one dependency which is express framework<\/p>\n<h3>Step 1:\u00a0 Install the dependencies<\/h3>\n<p>By executing a Simple command you can install all the project dependencies you require for your web application to work well.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span style=\"color: #ffff00;\">npm<\/span> <span class=\"hljs-keyword\" style=\"color: #cc99ff;\">install<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h3>Step 2:\u00a0 Start your Web Application<\/h3>\n<p>With a Single command,\u00a0 your Web Application is ready to test.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">aksarav<span class=\"hljs-variable\" style=\"color: #a5c261;\">@middlewareinventory:<\/span>\/apps\/docker\/DockerNodeJSProject$ <span style=\"color: #ffff00;\">npm<\/span> <span style=\"color: #cc99ff;\">start<\/span>\r\n\r\n&gt; dockernodejsproject<span class=\"hljs-variable\" style=\"color: #a5c261;\">@1<\/span>.<span class=\"hljs-number\" style=\"color: #a5c261;\">0.0<\/span> start \/apps\/docker\/DockerNodeJSProject\r\n&gt; node app.js\r\n\r\nListening on port <span class=\"hljs-number\" style=\"color: #a5c261;\">8080<\/span><\/pre>\n<p>Now go to your browser and access http:\/\/localhost:8080 and make sure you see somthing like this<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM.png\"><img class=\"alignnone size-full wp-image-2993\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM.png\" alt=\"\" width=\"1421\" height=\"545\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM.png 1421w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM-300x115.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM-768x295.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-10-at-6.47.20-AM-1024x393.png 1024w\" sizes=\"(max-width: 1421px) 100vw, 1421px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Docker Configuration and Setup<\/h2>\n<p>In this segment, we are going to containerize our application we have created.\u00a0 In other words, we are going to create an Image which can be used by anyone to create a container and to achieve the same result as we did.<\/p>\n<h3>Step 1: Creating a Dockerfile<\/h3>\n<p>This is a Simply a manifest on how your image should be created. Docker uses this manifest or configuration file to create the image.<\/p>\n<p>In the project root directory create a new file named <strong>Dockerfile\u00a0<\/strong>and place the following content.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Choose the Image which has Node installed already<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #c26230;\">FROM<\/span> node:alpine\r\n\r\n<span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># COPY all the files from Current Directory into the Container<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #c26230;\">COPY<\/span> <span class=\"bash\">.\/ .\/\r\n\r\n<span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Install the Project Dependencies like Express Framework<\/span>\r\n<\/span><span class=\"hljs-keyword\" style=\"color: #c26230;\">RUN<\/span> <span class=\"bash\">npm install\r\n\r\n<span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Tell that this image is going to Open a Port <\/span>\r\n<\/span><span class=\"hljs-keyword\" style=\"color: #c26230;\">EXPOSE<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">8080<\/span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Default Command to launch the Application<\/span>\r\n<span class=\"hljs-keyword\" style=\"color: #c26230;\">CMD<\/span> <span class=\"bash\">[<span class=\"hljs-string\" style=\"color: #a5c261;\">\"npm\"<\/span>, <span class=\"hljs-string\" style=\"color: #a5c261;\">\"start\"<\/span>]<\/span><\/pre>\n<p>If you can read the comments in the file you can easily understand what each line is intended to do.<\/p>\n<blockquote><p>Note*: As per Docker Syntax,\u00a0<strong>Dockerfile<\/strong> is the rigteous name of Manifest file with D capital with no file extension, If you are thinking that there is a mistake. No there is Not.<\/p><\/blockquote>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Step 2: Build a docker nodejs Image using the Dockerfile<\/h3>\n<p>Using the <strong>Dockerfile<\/strong> we have created. Let us create an Image.<\/p>\n<blockquote><p>Note*: Before Creating the Image, Please be aware, <em>It is a good practice that you name your images with your docker username in a prefix,\u00a0<\/em>\u00a0It would enable you to share your work(images) with other people easily in future with the help of docker hub which we will see later in this article.<\/p><\/blockquote>\n<p>Having said that it is always recommended to name your images after your docker username. I am going to do the same and my docker username is <strong>saravak<\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">$ <span style=\"color: #ffff00;\">docker build -t saravak\/dockernodejs .<\/span>\r\nSending build context to Docker daemon  <span class=\"hljs-number\" style=\"color: #a5c261;\">1.921<\/span>MB\r\nStep <span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>\/<span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span> : FROM <span class=\"hljs-attribute\" style=\"color: #cda869;\">node<\/span>:alpine\r\n &#8211; -&gt; <span class=\"hljs-number\" style=\"color: #a5c261;\">5206<\/span>c0dd451a\r\nStep <span class=\"hljs-number\" style=\"color: #a5c261;\">2<\/span>\/<span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span> : COPY .\/ .\/\r\n &#8211; -&gt; Using cache\r\n &#8211; -&gt; <span class=\"hljs-number\" style=\"color: #a5c261;\">3<\/span>a9ad7b01c24\r\nStep <span class=\"hljs-number\" style=\"color: #a5c261;\">3<\/span>\/<span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span> : RUN npm install\r\n &#8211; -&gt; Running in f8a975dbc0fd\r\nnpm WARN dockernodejsproject<span class=\"hljs-variable\" style=\"color: #a5c261;\">@1<\/span>.<span class=\"hljs-number\" style=\"color: #a5c261;\">0.0<\/span> No repository field.\r\n\r\naudited <span class=\"hljs-number\" style=\"color: #a5c261;\">121<\/span> packages in <span class=\"hljs-number\" style=\"color: #a5c261;\">2.39s<\/span>\r\nfound <span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span> vulnerabilities\r\n\r\nRemoving intermediate container f8a975dbc0fd\r\n &#8211; -&gt; <span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>c5c849fffc3\r\nStep <span class=\"hljs-number\" style=\"color: #a5c261;\">4<\/span>\/<span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span> : EXPOSE <span class=\"hljs-number\" style=\"color: #a5c261;\">8080<\/span>\r\n &#8211; -&gt; Running in <span class=\"hljs-number\" style=\"color: #a5c261;\">38<\/span>fb8a4f741a\r\nRemoving intermediate container <span class=\"hljs-number\" style=\"color: #a5c261;\">38<\/span>fb8a4f741a\r\n &#8211; -&gt; a598183cf805\r\nStep <span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span>\/<span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span> : CMD [<span class=\"hljs-string\" style=\"color: #a5c261;\">\"npm\"<\/span>, <span class=\"hljs-string\" style=\"color: #a5c261;\">\"start\"<\/span>]\r\n &#8211; -&gt; Running in <span class=\"hljs-number\" style=\"color: #a5c261;\">9<\/span>e4cdd605018\r\nRemoving intermediate container <span class=\"hljs-number\" style=\"color: #a5c261;\">9<\/span>e4cdd605018\r\n &#8211; -&gt; <span class=\"hljs-number\" style=\"color: #a5c261;\">33<\/span>b591fa48f4\r\nSuccessfully built <span class=\"hljs-number\" style=\"color: #a5c261;\">33<\/span>b591fa48f4\r\nSuccessfully tagged saravak\/<span class=\"hljs-attribute\" style=\"color: #cda869;\">dockernodejs<\/span>:latest\r\n<\/pre>\n<p>In the preceding snippet, you can see we have successfully created an image and named it as <strong>saravak\/dockernodejs<\/strong><\/p>\n<p>The command we used to build the Image from the Dockerfile is<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-symbol\" style=\"color: #6d9cbe;\">docker<\/span> <span class=\"hljs-keyword\" style=\"color: #c26230;\">build <\/span>-t saravak\/dockernodejs .<\/pre>\n<p>here the PERIOD\/DOT at the end is intentional and it represents the current directory.\u00a0 With this command issued, Docker looks for a Dockerfile in the current directory and create the image out of it<\/p>\n<p>To validate if your image has created and to know the list of images available in your system locally. use the following command.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-symbol\" style=\"color: #6d9cbe;\">docker<\/span> images<\/pre>\n<p>&nbsp;<\/p>\n<h3>Step 3: Start the Container from the Image we have created<\/h3>\n<p>The Image we have created in Step2 is ready to be started and it can now become a Fully Qualified and Operational Container.<\/p>\n<p>The following Command would create and start the Container from the image we have created<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span style=\"color: #ffff00;\"> docker<\/span> container <span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">run<\/span> -<span class=\"hljs-keyword\" style=\"color: #c26230;\">it<\/span> -p <span class=\"hljs-number\" style=\"color: #a5c261;\">8081<\/span>:<span class=\"hljs-number\" style=\"color: #a5c261;\">8080<\/span> -d <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">--name nodejsdocker saravak\/dockernodejs<\/span><\/pre>\n<p>Here<\/p>\n<p><strong>-it<\/strong>\u00a0 &#8211;\u00a0 This flag sets the container in Interactive mode and allocate a Dedicated TTY id for later SSHing<\/p>\n<p><strong>-d<\/strong> &#8211;\u00a0 This flag sets the container to run in the background.<\/p>\n<p><strong>-p 8081:8080<\/strong> &#8211; Port Forwarding Between Host and the Container. Right to the colon is a container and Left to the colon is Host. <em>8081 is the Host and 8080 is the container Port.<\/em><\/p>\n<p><strong>nodejsdocker<\/strong> &#8211; Name of the container we are starting ( Replacement of Container ID)<\/p>\n<p><strong>saravak\/dockernodejs<\/strong> &#8211; The name of the image from which we are going to create a Container<\/p>\n<h3><\/h3>\n<h3>Step 4: Validate the Web Application Running inside the Container<\/h3>\n<p>Having started the Container with Port Forwarding to the host machine on Port 8081. I shold be able to access the website from the Host machine (mac\/windows)\u00a0 at <strong>http:\/\/localhost:8081<\/strong><\/p>\n<p>If everything is done correctly,\u00a0 We should be able to see our desired website which we have tested locally.<\/p>\n<p>Yay. That&#8217;s all. It is that simple to develop a WebSite in Node JS and running it on the Docker Container.<\/p>\n<p>Thanks to Evloution of IT.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Step 5:\u00a0 Publish your Docker NodeJS image to Docker Hub<\/h3>\n<p>Since we are now done with our validation and Objective. Now Let us See some advancements or best practices like sharing our image with the rest of the world using Docker Hub.<\/p>\n<p><strong>What is Docker Hub<\/strong><\/p>\n<p>Docker Hub is Image repository where various Application and OS images from various Companies and Individuals are published. You can publish your image as well for free and people who are in a Pursuit a Similar infrastructure like what you have already built they can simply download the image and Start the Container or tweak it to suit their needs.<\/p>\n<p>Uploading\/publishing your images into Docker Hub can be done with <code><code><\/code><\/code><strong>docker push<\/strong> command and downloading images from Docker Hub can be done with <code><code><\/code><\/code><strong>docker pull<\/strong> command<\/p>\n<p>With that said, Now you can simply publish your images into docker hub.<\/p>\n<p>There is no much changes are required in the image naming convention as your image already has your docker id in it.<\/p>\n<p>All we have to do is executing two commands.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">$ <span style=\"color: #ffff00;\">docker login<\/span>\r\nLogin with your Docker ID to push <span class=\"hljs-keyword\" style=\"color: #c26230;\">and<\/span> pull images from Docker Hub. If you don't have a Docker ID, head over to https:\/\/hub.docker.com to create one.\r\nUsername: saravak\r\nPassword: \r\nLogin Succeeded\r\n\r\n$<span style=\"color: #ffff00;\"> docker push saravak\/dockernodejs<\/span>\r\nThe push refers to repository [docker.io\/saravak\/dockernodejs]\r\n<span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span>d688400f121: Pushed \r\n<span class=\"hljs-number\" style=\"color: #a5c261;\">34<\/span>c43f30441f: Pushed \r\naa1470e47a6e: Mounted from library\/<span class=\"hljs-keyword\" style=\"color: #c26230;\">node<\/span> \r\n6606650e9143:<span class=\"hljs-title\" style=\"color: #ffc66d;\"> Mounted<\/span> from library\/<span class=\"hljs-keyword\" style=\"color: #c26230;\">node<\/span> \r\ndf64d3292fd6:<span class=\"hljs-title\" style=\"color: #ffc66d;\"> Mounted<\/span> from library\/<span class=\"hljs-keyword\" style=\"color: #c26230;\">node<\/span> \r\nlatest:<span class=\"hljs-title\" style=\"color: #ffc66d;\"> digest<\/span>: sha256:<span class=\"hljs-number\" style=\"color: #a5c261;\">192979<\/span>f9245fc986c821f81eea3ef5823b4dd4209e7801eb04a35a919c09cd17 size: <span class=\"hljs-number\" style=\"color: #a5c261;\">1368<\/span><\/pre>\n<p>Now anywhere in the world, you can download this image from the Docker Hub using the docker pull command\u00a0 like this<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-attribute\" style=\"color: #00ccff;\">docker<\/span> <span style=\"color: #00ff00;\">pull<\/span> <span style=\"color: #ffff00;\">saravak\/dockernodejs<\/span><\/pre>\n<p>Or you can create a container from this image directly using the container run command without even having to pull ( It will be taken care by Docker CE automatically )<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span style=\"color: #00ccff;\">docker<\/span> <span style=\"color: #00ff00;\">container <span class=\"hljs-built_in\">run<\/span><\/span> -<span class=\"hljs-keyword\" style=\"color: #c26230;\">it<\/span> -p <span class=\"hljs-number\" style=\"color: #a5c261;\">8080<\/span>:<span class=\"hljs-number\" style=\"color: #a5c261;\">8080<\/span> -d <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">--name nodejsdocker <span style=\"color: #ffff00;\">saravak\/dockernodejs<\/span><\/span><\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>Commands to Manage your Docker NodeJS Container ( Additional Section )<\/h2>\n<p>In this segment, we have documented a few Quick Commands which might help you to manage your container efficiently<\/p>\n<h3>SSH into your container ( Not actually SSH )<\/h3>\n<p>The Docker container is not a Virtual Machine so you can SSH into It. It is a Process created from the image(snapshot). Though you cannot SSH into the Container Docker provides a way to get into the container<\/p>\n<p>It is called Interactive Terminal. If you scroll up a bit you can see we have started our container by mentioning the flags <code><code><\/code><\/code><strong>-it\u00a0<\/strong> which\u00a0is to enable this feature.<\/p>\n<p>As this feature is enabled in our container. Now we can easily Login to our Container and Do all the Code Changes, Configuration updates<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">docker <span class=\"hljs-keyword\" style=\"color: #c26230;\">container<\/span> <span class=\"hljs-keyword\" style=\"color: #c26230;\">exec<\/span> -it nodejsdocker <span class=\"hljs-string\" style=\"color: #a5c261;\">\"\/bin\/sh\"<\/span><\/pre>\n<p>Once you are into the Container you can manage it just like you do manage your Linux Virtual Machine. You have to Remember that the command supported would vary based on the base OS you have selected while creating the Image. In our case it is ALPINE<\/p>\n<p>&nbsp;<\/p>\n<h2>Docker Commands Cheat Sheet<\/h2>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"><span style=\"color: #00ff00;\"># How to start and stop the container<\/span> <\/span>\r\n\r\ndocker stop &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt;  <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># to stop the container which is running in background mode<\/span>\r\ndocker container start &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># to start the already stopped container<\/span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\"># monitoring the Container <\/span>\r\n\r\ndocker container <span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">list<\/span> <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># list the containers created<\/span>\r\ndocker container ls -a  <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#to list the containers including not running containers<\/span>\r\ndocker ps    <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#to list the running container<\/span>\r\ndocker info <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#docker engine status including container running\/paused\/stopped containers list<\/span>\r\ndocker container stats &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#prints the CPU and MEM usage data of the container name<\/span>\r\ndocker container stats <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#prints the CPU and MEM usage of all running containers<\/span>\r\ndocker container top &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\">#executes the top command in the container specified, fails if the specified container is not running<\/span>\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\">\r\n# How to remove\/delete the container<\/span>\r\n\r\ndocker container rm &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Remove the Container <\/span>\r\n\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\"># How to remove\/delete the image\r\n<\/span>\r\ndocker container rmi &lt;imagename\/imageid&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Remove the image<\/span>\r\n<span class=\"hljs-comment\" style=\"color: #00ff00; font-style: italic;\"># How to view the logs of the running container<\/span>\r\n\r\ndocker container logs &lt;containername\/<span class=\"hljs-built_in\" style=\"color: #6d9cbe;\">id<\/span>&gt; <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># to view the logs of the container <\/span><\/pre>\n<p>Hope this helps.<\/p>\n<p>If you like it share it with your friends and bookmark our page<\/p>\n<p>&nbsp;<\/p>\n<p>Cheers,<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577543\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"2986\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577543\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577543\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this post, we are going to see how to Design and Develop a Simple NodeJS web application and Deploy the NodeJS web application to Docker and How to create Docker Images and start the container from the images and How to manage the docker container and publish your images[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":3011,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[152],"tags":[206,203,204,251,207,208,205],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Docker NodeJS Example - Run NodeJS on Docker | Devops Junction<\/title>\n<meta name=\"description\" content=\"Docker NodeJS Example. Running NodeJS Application on Docker. Docker and NodeJS example. How to Create a NodeJS Application and run it on Docker Container. Docker Node Demo Setup. Running Node Server on Docker and how to run the NodeJS website on Docker with examples and step by step instructions. Docker NodeJS Example.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Docker NodeJS Example - Run NodeJS on Docker | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Docker NodeJS Example. Running NodeJS Application on Docker. Docker and NodeJS example. How to Create a NodeJS Application and run it on Docker Container. Docker Node Demo Setup. Running Node Server on Docker and how to run the NodeJS website on Docker with examples and step by step instructions. Docker NodeJS Example.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-03-10T12:15:20+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T06:00:24+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-12-at-10.15.44-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1197\" \/>\n\t<meta property=\"og:image:height\" content=\"689\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-12-at-10.15.44-AM.png\",\"width\":1197,\"height\":689},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/\",\"name\":\"Docker NodeJS Example - Run NodeJS on Docker | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#primaryimage\"},\"datePublished\":\"2019-03-10T12:15:20+00:00\",\"dateModified\":\"2022-06-19T06:00:24+00:00\",\"description\":\"Docker NodeJS Example. Running NodeJS Application on Docker. Docker and NodeJS example. How to Create a NodeJS Application and run it on Docker Container. Docker Node Demo Setup. Running Node Server on Docker and how to run the NodeJS website on Docker with examples and step by step instructions. Docker NodeJS Example.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Docker NodeJS Example &#8211; Run NodeJS on Docker | Devops Junction\",\"datePublished\":\"2019-03-10T12:15:20+00:00\",\"dateModified\":\"2022-06-19T06:00:24+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#primaryimage\"},\"keywords\":\"docker image creation example,docker node js,docker node js example,docker nodejs,how to node js on docker,node js and docker,node js on docker\",\"articleSection\":\"Docker\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/docker-nodejs-example\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2986"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=2986"}],"version-history":[{"count":22,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2986\/revisions"}],"predecessor-version":[{"id":7209,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2986\/revisions\/7209"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/3011"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=2986"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=2986"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=2986"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}