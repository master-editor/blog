{"id":5219,"date":"2020-03-02T18:53:25","date_gmt":"2020-03-02T13:23:25","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=5219"},"modified":"2022-06-19T11:22:22","modified_gmt":"2022-06-19T05:52:22","slug":"ansible-playbook-read-json-file","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/","title":{"rendered":"Ansible read JSON file  &#8211; JSON file Parsing"},"content":{"rendered":"<p>In this article, we are going to see how to read the JSON file in ansible-playbook<\/p>\n<p>JSON is the most famous data representation it is widely used to store and transmit data. When you are working in Ansible automation, you might get a requirement to work with JSON files and read JSON files into Ansible playbook and process the data and store the data as a variables.<\/p>\n<p>In general, JSON data can be processed easily with <code>json_query<\/code> module of ansible and you can read more about it <a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible_json_query\/\">in our previous article<\/a><\/p>\n<p>Our primary objective of this article is to talk about how to process the JSON FILE and read the JSON file into ansible playbook and process it.<\/p>\n<p>in the <a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible_json_query\/\">previous<\/a> article, we have talked about how to directly <strong>use the JSON output of a website or URL<\/strong> and use it for further processing. but now we are going to use the file as our source of data in this article.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM.png\"><img class=\"alignnone size-full wp-image-6249\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM.png\" alt=\"\" width=\"1778\" height=\"1088\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM.png 1778w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM-300x184.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM-1024x627.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM-768x470.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM-1536x940.png 1536w\" sizes=\"(max-width: 1778px) 100vw, 1778px\" \/><\/a><\/p>\n<p>we are going to take some sample JSON file which contains elements and sub elements in both array and single line formats, to understand this better.<\/p>\n<p>&nbsp;<\/p>\n<h2>Sample JSON file for our testing<\/h2>\n<p>This is the JSON file we are going to be using this article. the file name is <code>config.json<\/code>\u00a0it was ideally designed for weblogic ansible installation setup but this can serve as a viable example in here.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; color: #333333; background: #f8f8f8;\">{\r\n    <span class=\"hljs-attr\">\"domain\"<\/span>:{\r\n           <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"mwidomain\"<\/span>,\r\n           <span class=\"hljs-attr\">\"prod_mode\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"prod\"<\/span>,\r\n           <span class=\"hljs-attr\">\"user\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"weblogic\"<\/span>,\r\n           <span class=\"hljs-attr\">\"password\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"weblogic1\"<\/span>,\r\n\r\n           <span class=\"hljs-attr\">\"admin\"<\/span>: {\r\n            <span class=\"hljs-attr\">\"servername\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"AdminServer\"<\/span>,\r\n            <span class=\"hljs-attr\">\"listenport\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"8001\"<\/span>\r\n            },\r\n\r\n            <span class=\"hljs-attr\">\"machines\"<\/span>: [\r\n                {\r\n                    <span class=\"hljs-attr\">\"refname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Machine1\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"MWINODE01\"<\/span>\r\n                },\r\n                {\r\n                    <span class=\"hljs-attr\">\"refname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Machine2\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"MWINODE02\"<\/span>\r\n                }\r\n            ],\r\n\r\n            <span class=\"hljs-attr\">\"clusters\"<\/span>: [\r\n                {\r\n                    <span class=\"hljs-attr\">\"refname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Cluster1\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"App1Cluster\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"machine\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Box1\"<\/span>\r\n                },\r\n                {\r\n                    <span class=\"hljs-attr\">\"refname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Cluster2\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"App2Cluster\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"machine\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Box2\"<\/span>\r\n                }\r\n            ],\r\n            <span class=\"hljs-attr\">\"servers\"<\/span>: [\r\n                {\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"ms1\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"port\"<\/span>: <span class=\"hljs-number\" style=\"color: teal;\">9001<\/span>,\r\n                    <span class=\"hljs-attr\">\"machine\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Box1\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"clusterrefname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Cluster1\"<\/span>\r\n                },\r\n                {\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"ms2\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"port\"<\/span>: <span class=\"hljs-number\" style=\"color: teal;\">9002<\/span>,\r\n                    <span class=\"hljs-attr\">\"machine\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Box2\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"clusterrefname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Cluster2\"<\/span>\r\n                },\r\n                {\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"ms3\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"port\"<\/span>: <span class=\"hljs-number\" style=\"color: teal;\">9003<\/span>,\r\n                    <span class=\"hljs-attr\">\"machine\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Box1\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"clusterrefname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Cluster1\"<\/span>\r\n                },\r\n                {\r\n                    <span class=\"hljs-attr\">\"name\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"ms4\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"port\"<\/span>: <span class=\"hljs-number\" style=\"color: teal;\">9004<\/span>,\r\n                    <span class=\"hljs-attr\">\"machine\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Box2\"<\/span>,\r\n                    <span class=\"hljs-attr\">\"clusterrefname\"<\/span>: <span class=\"hljs-string\" style=\"color: #dd1144;\">\"Cluster2\"<\/span>\r\n                }\r\n            ]\r\n\r\n    }\r\n}<\/pre>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h2>How to read JSON file into ansible playbook<\/h2>\n<p>To read JSON file into the ansible playbook, ansible has given us a filter named <code>from_json<\/code><\/p>\n<p>but, of course, we need to use it along with few more commands and module like shell to read the json file.<\/p>\n<p>here is the quick ansible playbook example that reads JSON file<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> ReadJsonfile\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Display the JSON file content\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> cat config.json\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        register:<\/span> result\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> save the Json data to a Variable as a Fact\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jsondata:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ result.stdout | from_json }}<\/span>\"<\/span><\/pre>\n<p>Let us see how this playbook works.<\/p>\n<p>&nbsp;<\/p>\n<ul>\n<li><strong>The First task<\/strong> or play is to display the json file using the normal Shell command <code>cat<\/code>\u00a0at this same tasks we are saving this output into a ansible register variable named <code>result<\/code><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<ul>\n<li><strong>The Second task<\/strong> or play is to read the register variable of the previous task named <code>result<\/code>\u00a0and convert that into a proper\u00a0<code>json<\/code>\u00a0data, this is done using <code>from_json<\/code>\u00a0filter\u00a0 and then we store it into a new ansible fact variable named <code>jsondata<\/code><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<ul>\n<li>Now we have our JSON file content stored in <code>jsondata<\/code>\u00a0variable after being formatted as proper JSON, which can be easily parsed now using ansible json query module.<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>As simple as that we have now learnt how to read JSON data into ansible playbook using <code>from_json<\/code>\u00a0and shell module.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>How to use the JSON data in your playbook as a variable<\/h2>\n<p>So now we have processed the JSON file and imported it into our playbook but here comes the next part of the equation. So how are we going to use this JSON data in our playbook or store it as a variable?<\/p>\n<p>Refer the following ansible playbook, A continuation of our previous read json playbook, in this ansible playbook we are taking out the necessary elements\/keys and using in our playbook by setting it as ansible fact.<\/p>\n<p>once the values are stored as ansible fact. it can be referred from anywhere in the playbook or ansible role using jinja 2 syntax <code>{{ }}<\/code><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> ReadJsonfile\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Display the JSON file content\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> cat config.json\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        register:<\/span> result\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> save the Json data to a Variable as a Fact\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jsondata:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ result.stdout | from_json }}<\/span>\"<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> setDomainName\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          domain_name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ jsondata | json_query(jmesquery) }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        vars:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jmesquery:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'domain.name'<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> setDomainUsername\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          domain_username:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ jsondata | json_query(jmesquery) }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        vars:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jmesquery:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'domain.user'<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> setDomainPassword\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          domain_password:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ jsondata | json_query(jmesquery) }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        vars:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jmesquery:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'domain.password'<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> setadmin_Listenport\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          admin_ListenPort:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ jsondata | json_query(jmesquery) }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        vars:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jmesquery:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'domain.admin.listenport'<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Debug the values\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        debug:<\/span> msg=<span class=\"hljs-string\" style=\"color: #a5c261;\">\" Admin Listen Port =&gt; <span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ admin_ListenPort }}<\/span>, DomainName =&gt; <span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ domain_name }}<\/span>, DomainUserName =&gt; <span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ domain_username }}<\/span> , Domain Password =&gt; <span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ domain_password }}<\/span>\"<\/span><\/pre>\n<p>&nbsp;<\/p>\n<p>Explanation of this playbook.<\/p>\n<ul>\n<li>Other than the previously explained two tasks\/plays of <code>shell<\/code>\u00a0and <code>from_json<\/code>\u00a0 we have more tasks added with <code>set_fact<\/code>\u00a0in this playbook<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<ul>\n<li><code>set_fact<\/code>\u00a0is used to create a new ansible variable at a run time of the playbook. we can also call it as run time variables or dynamic variables.<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<ul>\n<li>To filter out the required key or element from an otherwise big JSON data set. we are here using ansible\u00a0\u00a0<code>jmes_query<\/code>\u00a0which has been covered in detail <a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible_json_query\/\">here<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<ul>\n<li>vars is used to set a limited variable for every task\/play.\u00a0 it was primarily used to create a variable named <code>jmesquery<\/code>\u00a0which contains the actual <a href=\"http:\/\/jmespath.org\/examples.html\">jmesquery<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<ul>\n<li>The Last play or task in this playbook is to display the created facts\/variables using set_fact.<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h3>Execution result of this playbook<\/h3>\n<p>Here is the output of the playbook.<\/p>\n<p><script id=\"asciicast-sruG2Ypw789KKLG98VarkOLeQ\" src=\"https:\/\/asciinema.org\/a\/sruG2Ypw789KKLG98VarkOLeQ.js\" async><\/script><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>Complex JSON JMES Queries and Ansible Playbook<\/h2>\n<p>Sometimes we would want to create a list from the JSON data like a Dictionary or array. Or let&#8217;s say we want to find all the server names and their ports from the JSON we have taken for example.<\/p>\n<p>here is the playbook that\u00a0creates a dictionary of data by processing the JSON file.<\/p>\n<p>It simply creates a list or dictionary of servers and their port numbers.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> ReadJsonfile\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> localhost\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Display the JSON file content\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> cat config.json\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        register:<\/span> result\r\n      \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> save the Json data to a Variable as a Fact\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jsondata:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ result.stdout | from_json }}<\/span>\"<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Server Names\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>  \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          servernames:<\/span>  <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ jsondata | json_query(jmesquery) }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        vars:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jmesquery:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'*.servers[*].name'<\/span>\r\n      \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Server Names and Ports\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        set_fact:<\/span>  \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          serverinfo:<\/span>  <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ jsondata | json_query(jmesquery) }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        vars:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          jmesquery:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'*.servers[*].[name, port]'<\/span>\r\n      \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Print all server names\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        debug:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          msg:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ item}}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        with_items:<\/span> \r\n<span class=\"hljs-bullet\" style=\"color: #6d9cbe;\">          -<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ servernames }}<\/span>\"<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Print all server names\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        debug:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          msg:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ item }}<\/span>\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        with_items:<\/span> \r\n<span class=\"hljs-bullet\" style=\"color: #6d9cbe;\">        -<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ serverinfo }}<\/span>\"<\/span>\r\n<\/pre>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p><strong>Explanation<\/strong><\/p>\n<ul>\n<li>With the help of <code>jmespath<\/code>\u00a0queries, we are filtering out the Server names and Server Names with Port number like the same way we did in the previous playbook examples.<\/li>\n<li>Now we are printing all the server names using the loop iteration <code>with_items<\/code><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p><strong>Result of the playbook<\/strong><\/p>\n<p><strong><br \/>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-03-02-at-4.39.57-PM.png\"><img class=\"alignnone size-full wp-image-5225\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-03-02-at-4.39.57-PM.png\" alt=\"Ansible JSON\" width=\"2930\" height=\"2086\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-03-02-at-4.39.57-PM.png 2930w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-03-02-at-4.39.57-PM-300x214.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-03-02-at-4.39.57-PM-768x547.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-03-02-at-4.39.57-PM-1024x729.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-03-02-at-4.39.57-PM-90x65.png 90w\" sizes=\"(max-width: 2930px) 100vw, 2930px\" \/><\/a><br \/>\n<\/strong><\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>I hope this article was helpful to understand how to read and process JSON file with Ansible. Feel free to ask in comments if you have any questions.<\/p>\n<p>Cheers<br \/>\nSarav<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577868\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"5219\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577868\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577868\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>In this article, we are going to see how to read the JSON file in ansible-playbook JSON is the most famous data representation it is widely used to store and transmit data. When you are working in Ansible automation, you might get a requirement to work with JSON files and[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":6249,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible read JSON file - JSON file Parsing | DevOps Junction<\/title>\n<meta name=\"description\" content=\"Ansible JSON file, Ansible read JSON file and parse the JSON Data with Ansible. Parsing JSON with ansible example. Ansible JSON_query and Ansible JSON example. In this article we are covering in detail how to read JSON data into Ansible playbook and use it as a variable and facts and Store it as runtime Ansible facts\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible read JSON file - JSON file Parsing | DevOps Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible JSON file, Ansible read JSON file and parse the JSON Data with Ansible. Parsing JSON with ansible example. Ansible JSON_query and Ansible JSON example. In this article we are covering in detail how to read JSON data into Ansible playbook and use it as a variable and facts and Store it as runtime Ansible facts\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2020-03-02T13:23:25+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T05:52:22+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1778\" \/>\n\t<meta property=\"og:image:height\" content=\"1088\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/03\/Screenshot-2020-10-19-at-1.17.22-AM.png\",\"width\":1778,\"height\":1088},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/\",\"name\":\"Ansible read JSON file - JSON file Parsing | DevOps Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#primaryimage\"},\"datePublished\":\"2020-03-02T13:23:25+00:00\",\"dateModified\":\"2022-06-19T05:52:22+00:00\",\"description\":\"Ansible JSON file, Ansible read JSON file and parse the JSON Data with Ansible. Parsing JSON with ansible example. Ansible JSON_query and Ansible JSON example. In this article we are covering in detail how to read JSON data into Ansible playbook and use it as a variable and facts and Store it as runtime Ansible facts\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible read JSON file &#8211; JSON file Parsing\",\"datePublished\":\"2020-03-02T13:23:25+00:00\",\"dateModified\":\"2022-06-19T05:52:22+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-read-json-file\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5219"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=5219"}],"version-history":[{"count":7,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5219\/revisions"}],"predecessor-version":[{"id":6250,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5219\/revisions\/6250"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/6249"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=5219"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=5219"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=5219"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}