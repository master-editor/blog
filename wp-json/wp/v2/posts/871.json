{"id":871,"date":"2018-03-18T10:51:24","date_gmt":"2018-03-18T05:21:24","guid":{"rendered":"http:\/\/www.mwinventory.in\/?p=871"},"modified":"2020-12-03T15:19:02","modified_gmt":"2020-12-03T09:49:02","slug":"how-to-use-weblogic-rest-api-examples","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/","title":{"rendered":"How to use Weblogic REST API for various management operations &#8211; Examples"},"content":{"rendered":"<p>This post covers how to use weblogic rest api practically using various examples and answers, All your questions like How to enable REST api in weblogic, What can you with RESTful API in weblogic, What are bean trees in weblogic,\u00a0How to perform various operations like deployment, server creation, What is Tenant Monitoring and how to use it and much more.<\/p>\n<p>Let&#8217;s get started!.<\/p>\n<h4 style=\"text-align: center;\"><\/h4>\n<h2 style=\"text-align: left;\">What is Rest API Management Services in weblogic?<\/h2>\n<p>Weblogic 12c has come up with so many features bundled-in.\u00a0 one of the notable features is RESTful management. This approach lets you to directly access the Weblogic Runtime and configuration data with a simple URL based approach.<\/p>\n<p>No need of WLST (or) JMX codes to do the monitoring (or) configuration changes anymore. You can just hit the URL and get\u00a0things done.<\/p>\n<p>Note*: The post\u00a0covers only <strong>weblogic 12.2.1<\/strong>. This may not be applicable for legacy weblogic 12.1 version<\/p>\n<p>&nbsp;<\/p>\n<h2 style=\"text-align: left;\">How to Enable RESTful<strong> Management Services?<\/strong><\/h2>\n<p>Goto your Domain -&gt; Configuration -&gt; General -&gt; Advanced -&gt; Enable RESTful Management Services and restart the Admin Server.<\/p>\n<p><a href=\"http:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.42.22-AM.png\"><img class=\"alignnone size-full wp-image-872\" src=\"https:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.42.22-AM.png\" alt=\"screen-shot-2018-02-11-at-3-42-22-am\" width=\"1152\" height=\"53\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.42.22-AM.png 1152w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.42.22-AM-300x14.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.42.22-AM-768x35.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.42.22-AM-1024x47.png 1024w\" sizes=\"(max-width: 1152px) 100vw, 1152px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2 style=\"text-align: left;\">What can you do with <strong>RESTful Management API of Weblogic?<\/strong><\/h2>\n<p>After RESTful management Services are enabled you can access the runtime and configuration information about the following resources\/objects.<\/p>\n<ol>\n<li>Servers<\/li>\n<li>Applications<\/li>\n<li>DataSources<\/li>\n<li>Clusters<\/li>\n<\/ol>\n<p>and you can perform the day to day\u00a0operations like, <strong>monitoring<\/strong>, <strong>Deployment,\u00a0 Start, Stop <\/strong>including the complex tasks like creating the resources like servers, clusters, data sources etc.<\/p>\n<p>Well, now you do not have to worry about the WLST and python scripts anymore.<\/p>\n<p>All you have to do is just tweak the URL and give the request.<\/p>\n<p>&nbsp;<\/p>\n<p>Some question might arise. Before moving further, let&#8217;s clarify them.<\/p>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\">Is my AdminServer needed All the time?<\/h3>\n<p>If you are having questions like. To access the console,\u00a0 AdminServer is needed so to use this feature do we need to keep my AdminServer up and running all the time<\/p>\n<p>I could say No, But It\u00a0also depends on your requirement,<\/p>\n<p><em>RESTFul management is an application installed on all the Admin and managed server (once you enable the feature).\u00a0 If you want to connect to a single server and get information or perform tasks pertaining to only that instance, you are good to go with that corresponding server&#8217;s\u00a0API interface.<\/em><\/p>\n<p>For example, In my infrastructure setup,\u00a0 This will be the URL interfaces.<\/p>\n<p><code>AdminServer:\u00a0<\/code> http:\/\/localhost:<strong>17001<\/strong>\/management<\/p>\n<p><code>Managed Server1:<\/code> http:\/\/localhost:<strong>17003<\/strong>\/management<\/p>\n<p>When I want to get the status of my Managed Server1, I can use the direct managed server interface rather than Admin Server&#8217;s one.<\/p>\n<p>When I want to perform some domain-level tasks like Creation of services\/resources, I will have to pick the Admin Server interface.<\/p>\n<p>&nbsp;<\/p>\n<h4 style=\"text-align: center;\"><\/h4>\n<h3 style=\"text-align: left;\">The scope of Managed<strong> Server\u00a0<\/strong><\/h3>\n<p>Though you have management REST API installed in every server.\u00a0 The Basic and fundamental boundaries and privileges of AdminServer and ManagedServer will still prevail.\u00a0 AdminServer will have access to <code><em>domainRuntime<\/em><\/code>\u00a0and <code><em>domainConfig<\/em><\/code>\u00a0 bean trees where managed servers can access only their corresponding <code><em>ServerRuntime<\/em><\/code>and <code><em>serverConfig<\/em><\/code>bean\u00a0trees<\/p>\n<p>&nbsp;<\/p>\n<h2 style=\"text-align: left;\">What are\u00a0Bean Trees<strong> in weblogic?<\/strong><\/h2>\n<p>The WLS beans are derived from Java interfaces. At runtime, WLS constructs internal trees of Java beans that can be used to configure and monitor the system. In prior releases, the bean trees were only exposed via JMX, WLST, and configuration files (for example, <strong>config.xml<\/strong>).<\/p>\n<p>In this release, WLS dynamically generates REST resources, incrementally and on-demand at runtime, by using the bean trees and bean info. These REST resources provide an alternative for managing WLS.<\/p>\n<p>If you have worked in WLST\u00a0in weblogic you might have come across the following bean trees.<\/p>\n<ol>\n<li><code>serverConfig<\/code> &#8211; Configuration information of a specific server\u00a0 ( All Servers in domains will have this tree including Adminserver)<\/li>\n<li><code>serverRuntime<\/code> &#8211; Runtime information of a specific server\u00a0\u00a0\u00a0( All Servers in domains will have this tree including Adminserver)<\/li>\n<li><code>domainConfig<\/code> &#8211; MBean which holds the domain-wide Configuration information ( such as the configuration of all servers and services)<\/li>\n<li><code>domainRuntime<\/code><strong> &#8211; <\/strong>MBean which holds the domain-wide Runtime information ( such as status of all servers and services)<\/li>\n<li><code>edit<\/code> &#8211; Edit the selected bean tree<\/li>\n<\/ol>\n<h4 style=\"text-align: center;\"><\/h4>\n<h2 style=\"text-align: left;\">The tenant-monitoring(A quick way to get things done)<\/h2>\n<p>Rather than going through all the hassles of finding the right bean tree and fields to get the required information, weblogic RESTful management API provides a wonderful feature called <strong><em>tenant-monitoring<\/em><\/strong>. you can pretty much get your most frequent and important monitoring done using this.<\/p>\n<p>Here are some of the examples to give you some exposure to tenant-monitoring<\/p>\n<p>Note:<\/p>\n<h3><span style=\"color: #000000;\"><strong>To<\/strong> retrieve<strong>\u00a0all Servers<\/strong><\/span><\/h3>\n<pre>http:\/\/localhost:17001\/management\/tenant-monitoring\/servers<\/pre>\n<p><a href=\"http:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.49.42-AM.png\"><img class=\"alignnone wp-image-873\" src=\"https:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.49.42-AM.png\" alt=\"screen-shot-2018-02-11-at-3-49-42-am\" width=\"414\" height=\"184\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.49.42-AM.png 816w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.49.42-AM-300x133.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.49.42-AM-768x342.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.49.42-AM-150x67.png 150w\" sizes=\"(max-width: 414px) 100vw, 414px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3><span style=\"color: #000000;\"><strong>To retrieve the<\/strong> details<strong> about single server<\/strong><\/span><\/h3>\n<p>Just add the server name at the end of the previous URL, That&#8217;s it!<\/p>\n<pre>http:\/\/localhost:17001\/management\/tenant-monitoring\/servers\/mwiserver1<\/pre>\n<p><a href=\"http:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.54.13-AM.png\"><img class=\"alignnone wp-image-874\" src=\"https:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.54.13-AM.png\" alt=\"screen-shot-2018-02-11-at-3-54-13-am\" width=\"466\" height=\"488\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.54.13-AM.png 814w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.54.13-AM-287x300.png 287w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.54.13-AM-768x804.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-11-at-3.54.13-AM-150x157.png 150w\" sizes=\"(max-width: 466px) 100vw, 466px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3><strong>To retrieve all<\/strong> data<strong> sources<\/strong><\/h3>\n<pre>http:\/\/localhost:17001\/management\/tenant-monitoring\/datasources<\/pre>\n<p>&nbsp;<\/p>\n<h3><strong>To retrieve<\/strong> information<strong> for a specific data source<\/strong><\/h3>\n<pre>http:\/\/localhost:17001\/management\/tenant-monitoring\/datasources\/&lt;datasourcename&gt;<\/pre>\n<p>&nbsp;<\/p>\n<h3>Retrieve<strong> all configured Clusters\u00a0<\/strong><\/h3>\n<pre>http:\/\/localhost:17001\/management\/tenant-monitoring\/clusters<\/pre>\n<p>&nbsp;<\/p>\n<h3><strong>To retrieve data for a<\/strong> specific<strong> Cluster<\/strong><\/h3>\n<pre>http:\/\/localhost:17001\/management\/tenant-monitoring\/clusters\/&lt;clustername&gt;<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>Using<strong>\u00a0<\/strong>The CURL<strong> Command Line tool<\/strong><\/h2>\n<p>Note*:\u00a0 This is not a recommended method as we are passing cleartext password over the <strong>--user<\/strong> flag to handle BASIC authentication of RESTful management of weblogic. At the end of this post, You will find a tool named &#8220;<strong>wlsrestcli<\/strong>&#8221; which can be used instead to avoid entering clear text username and password.<\/p>\n<pre>mwinventory:RESTAPI_TEST aksarav$ curl  -H X-Requested-By:MyClient -H Accept:application\/json -H Content-Type:application\/json -X GET http:\/\/localhost:17001\/m\/tenant-monitoring\/servers &#8211; user weblogic:weblogic1\r\n{\"body\":{\"items\":[{\"name\":\"AdminServer\",\"state\":\"RUNNING\",\"health\":\"HEALTH_OK\"},{\"name\":\"mwiserver1\",\"state\":\"SHUTDOWN\"},{\"name\":\"mwiserver2\",\"state\":\"SHUTDOWN\"},{\"name\":\"mwiserver3\",\"state\":\"SHUTDOWN\"},{\"name\":\"mwiserver4\",\"state\":\"SHUTDOWN\"}]},\"messages\":[]}\r\n<\/pre>\n<p>&nbsp;<\/p>\n<h3>Formatting\u00a0the<strong> CURL output<\/strong><\/h3>\n<p>When using CURL to connect to wls restful management API interface, you will get your JSON output as a single liner with no pretty formatting. In order to overcome that, I recommend the following ways<\/p>\n<p>&nbsp;<\/p>\n<h3>json_pp<strong> (<\/strong> Download<strong> and use json_pp command in *nix terminal)<\/strong><\/h3>\n<pre>$ curl -H X-Requested-By:MyClient \\ &gt; -H Accept:application\/json \\ &gt; -H Content-Type:application\/json \\ &gt; -X GET http:\/\/localhost:17001\/management\/tenant-monitoring\/servers \\ &gt; &#8211; user weblogic:weblogic1|<strong>json_pp<\/strong> { \"body\": { \"items\": [ { \"health\": \"HEALTH_OK\", \"name\": \"AdminServer\", \"state\": \"RUNNING\" }, { \"name\": \"mwiserver1\", \"state\": \"SHUTDOWN\" }, { \"name\": \"mwiserver2\", \"state\": \"SHUTDOWN\" }, { \"name\": \"mwiserver3\", \"state\": \"SHUTDOWN\" }, { \"name\": \"mwiserver4\", \"state\": \"SHUTDOWN\" } ] }, \"messages\": [] }<\/pre>\n<p>python ( 2.6+) ( if you have <strong>python 2.6+<\/strong> version you can use this method)<\/p>\n<pre>$ curl -H X-Requested-By:MyClient \\ &gt; -H Accept:application\/json \\ &gt; -H Content-Type:application\/json \\ &gt; -X GET http:\/\/localhost:17001\/management\/tenant-monitoring\/servers \\ &gt; &#8211; user weblogic:weblogic1|<strong>python -m json.tool<\/strong> { \"body\": { \"items\": [ { \"health\": \"HEALTH_OK\", \"name\": \"AdminServer\", \"state\": \"RUNNING\" }, { \"name\": \"mwiserver1\", \"state\": \"SHUTDOWN\" }, { \"name\": \"mwiserver2\", \"state\": \"SHUTDOWN\" }, { \"name\": \"mwiserver3\", \"state\": \"SHUTDOWN\" }, { \"name\": \"mwiserver4\", \"state\": \"SHUTDOWN\" } ] }, \"messages\": [] }<\/pre>\n<h4><\/h4>\n<h2>Using Postman<\/h2>\n<p><a href=\"http:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.45.19-AM.png\"><img class=\"alignnone wp-image-881\" src=\"https:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.45.19-AM.png\" alt=\"screen-shot-2018-02-12-at-2-45-19-am\" width=\"489\" height=\"382\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.45.19-AM.png 918w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.45.19-AM-300x235.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.45.19-AM-768x601.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.45.19-AM-150x117.png 150w\" sizes=\"(max-width: 489px) 100vw, 489px\" \/><\/a><\/p>\n<h5><\/h5>\n<p>In the preceding illustration you can see, I am passing the username and password securely in <strong>the Authorization<\/strong>\u00a0section<\/p>\n<h4><\/h4>\n<h2><\/h2>\n<h2 style=\"text-align: left;\">MBeans<strong> and WLS RESTful Management Interface <\/strong>( A level up )<\/h2>\n<p>As we discussed above,\u00a0 Weblogic Server publishes all their runtime and configuration information in the form of Beans and we have discussed the bean trees and their usage. Now it is time to do something practical. With Weblogic REST Management Interface we can pretty much accomplish everything that we can do with WLST and JMX. Such as<\/p>\n<ol>\n<li>Creating Resources like Servers\/Clusters\/JDBC\/JMS etc<\/li>\n<li>Monitoring the Resources and Servers<\/li>\n<li>Performing a LifeCycle tasks\/actions such as Start\/Shutdown\/Resume\/Suspend<\/li>\n<li>User Management<\/li>\n<li>Application management tasks such as deploy\/un-deploy\/start\/stop<\/li>\n<li>Cluster Management tasks\u00a0 such as start\/stop\/create\/delete\/add\/remove<\/li>\n<\/ol>\n<p>The possibilities of the REST Management Interface is very extensive.\u00a0 All we have to do is to be aware,\u00a0 What MBean to be approached for the requirement and how to do it with REST Management Interface.<\/p>\n<h4 style=\"text-align: center;\"><\/h4>\n<h2 style=\"text-align: left;\"><strong>How to<\/strong> frame<strong> the API URL<\/strong><\/h2>\n<p>A Basic Syntax of the\u00a0base Management API\u00a0 URL is as follows<\/p>\n<pre style=\"background: #181818; color: #f8f8f8; font-size: 18px;\"><span style=\"color: aqua;\">http:\/\/<\/span><span style=\"color: deeppink;\">localhost<\/span>:<span style=\"color: tomato;\">17001<\/span><span style=\"color: lightseagreen;\">\/management\/weblogic\/<\/span><span style=\"color: deepskyblue;\">&lt;version specifier&gt;<\/span>\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>here <strong>&lt;version&gt;\u00a0<\/strong>represents the version number of the weblogic, you can use the version number\u00a0 (or) use <strong>latest\u00a0<\/strong>instead.<\/p>\n<p>you can see the available version by giving GET request to <strong>http:\/\/localhost:17001\/management\/weblogic<\/strong> URL<\/p>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\">The <strong>Story<\/strong> of <strong>Root Resources<\/strong><\/h3>\n<p>when you access the API with version info (either <strong>latest <\/strong>or\u00a0<strong>version number<\/strong>)\u00a0 you will get the following Results where you can see the Links referring to the Bean Trees, These are called <span style=\"color: #258583;\"><strong>Root Resources<br \/>\n<\/strong><\/span><\/p>\n<pre># curl -X GET http:\/\/localhost:17001\/management\/weblogic\/latest &#8211; user weblogic:weblogic1\r\n{\r\n \"links\": [\r\n......\r\n....\r\n {\r\n \"rel\": \"edit\",\r\n \"href\": \"http:\\\/\\\/localhost:17001\\\/management\\\/weblogic\\\/latest\\\/edit\"\r\n },\r\n {\r\n \"rel\": \"domainConfig\",\r\n \"href\": \"http:\\\/\\\/localhost:17001\\\/management\\\/weblogic\\\/latest\\\/domainConfig\"\r\n },\r\n {\r\n \"rel\": \"domainRuntime\",\r\n \"href\": \"http:\\\/\\\/localhost:17001\\\/management\\\/weblogic\\\/latest\\\/domainRuntime\"\r\n },\r\n {\r\n \"rel\": \"serverRuntime\",\r\n \"href\": \"http:\\\/\\\/localhost:17001\\\/management\\\/weblogic\\\/latest\\\/serverRuntime\"\r\n },\r\n {\r\n \"rel\": \"serverConfig\",\r\n \"href\": \"http:\\\/\\\/localhost:17001\\\/management\\\/weblogic\\\/latest\\\/serverConfig\"\r\n },\r\n {\r\n \"rel\": \"currentUser\",\r\n \"href\": \"http:\\\/\\\/localhost:17001\\\/management\\\/weblogic\\\/latest\\\/currentUser\"\r\n }\r\n ],\r\n \"version\": \"12.2.1.3.0\",\r\n \"isLatest\": true,\r\n \"lifecycle\": \"active\"<\/pre>\n<p>In the preceding illustration,\u00a0 I am using Administration Server URL to connect to API interface the result set can be called as <strong>Administration Server Root Resources<\/strong><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>When you are using Managed Server URL to invoke API interface you will get the following result,\u00a0 These are <strong><span style=\"color: #229ed4;\">managed Server Root Resources<\/span><\/strong><\/p>\n<p>&nbsp;<\/p>\n<pre># curl -X GET http:\/\/localhost:17003\/management\/weblogic\/latest &#8211; user weblogic:weblogic1 \r\n{\r\n \"links\": [\r\n.....\r\n {\r\n \"rel\": \"serverRuntime\",\r\n \"href\": \"http:\\\/\\\/localhost:17003\\\/management\\\/weblogic\\\/latest\\\/serverRuntime\"\r\n },\r\n {\r\n \"rel\": \"serverConfig\",\r\n \"href\": \"http:\\\/\\\/localhost:17003\\\/management\\\/weblogic\\\/latest\\\/serverConfig\"\r\n },\r\n .....\r\n<\/pre>\n<p>As you might have understood it by now,<\/p>\n<ul>\n<li>Each Bean Tree represents a link here and if you want to navigate through any of the\u00a0bean trees, you can use their corresponding links.<\/li>\n<li>You need to use the AdminServer URL for performing any task at the Domain Scope.<\/li>\n<li>The Resources displayed will vary respective to the Connection URL ( AdminServer\/Managed Server)<\/li>\n<\/ul>\n<h3 style=\"text-align: center;\"><\/h3>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\"><strong>Filtering<\/strong> the<strong> Results<\/strong><\/h3>\n<p>In the below-shown example, I am getting the runtime status of\u00a0all the servers configured in my weblogic domain<\/p>\n<pre># curl -X GET http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/serverLifeCycleRuntimes?fields=name,state\\&amp;links=none &#8211; user weblogic:weblogic1\r\n{\"items\": [\r\n    {\r\n        \"name\": \"mwiserver4\",\r\n        \"state\": \"SHUTDOWN\"\r\n    },\r\n    {\r\n        \"name\": \"mwiserver3\",\r\n        \"state\": \"SHUTDOWN\"\r\n    },\r\n    {\r\n        \"name\": \"mwiserver2\",\r\n        \"state\": \"SHUTDOWN\"\r\n    },\r\n    {\r\n        \"name\": \"AdminServer\",\r\n        \"state\": \"RUNNING\"\r\n    },\r\n    {\r\n        \"name\": \"mwiserver1\",\r\n        \"state\": \"SHUTDOWN\"\r\n    }\r\n]}\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<blockquote><p>Note*: We are escaping the ampersand<span style=\"color: #ff6600;\"><span style=\"color: #ff0000;\">&amp;<\/span> <\/span>symbol with slash<span style=\"color: #ff6600;\"><span style=\"color: #ff0000;\"> \\ <\/span><\/span>So intentionally we replaced<span style=\"color: #ff6600;\"><span style=\"color: #ff0000;\">&amp;<\/span> <\/span>with<span style=\"color: #ff6600;\"><span style=\"color: #ff0000;\">\\&amp;<\/span>.<\/span>\u00a0In Unix, ampersand sends the command to background<\/p><\/blockquote>\n<p>If you have noticed it clearly, We are passing some query string here<\/p>\n<pre><strong>fields=name,state<\/strong> and <strong>links=none\u00a0<\/strong><\/pre>\n<p>these are called <strong>result filters<\/strong><\/p>\n<p>There are four filters supported in wls management service API<\/p>\n<ol>\n<li>links<\/li>\n<li>excludeLinks<\/li>\n<li>fields<\/li>\n<li>excludeFields<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<p>Key Points<\/p>\n<ul>\n<li>We can limit the fields to be displayed by passing them to the <strong>fields<\/strong> parameter<\/li>\n<li>If you do not want any fields but only links you can use <strong>fields=none\u00a0<\/strong>in the query string<\/li>\n<li>you can mention the list of links or fields that have to be excluded using <strong>excludeLinks<\/strong> (or) <strong>excludeFields<\/strong><\/li>\n<li><em><strong>links=none<\/strong>\u00a0<\/em>indicates that <strong>no<\/strong> canonical, self\u00a0and various other links should be displayed in the output ( Try to remove the links=none and reissue the request to know the difference)<\/li>\n<\/ul>\n<h5 style=\"text-align: left;\"><\/h5>\n<h2><\/h2>\n<h2 style=\"text-align: left;\"><strong>How to find<\/strong> the<strong> Right method<\/strong>(GET\/POST\/DELETE)<strong> for an API Call?<\/strong><\/h2>\n<p>So far in this post, we have been using the <strong>GET<\/strong> method in API calls.<\/p>\n<p>Let&#8217;s suppose that you want to update the port number of the managed server instance in your domain. How would you pass the new port number to the REST Management interface?<\/p>\n<p>Let&#8217;s suppose that you need to delete some resource or a server\/cluster from the weblogic domain. How would you do that?<\/p>\n<p>That&#8217;s where you need to be aware of which method should be used while invoking certain tasks.<\/p>\n<p>For the\u00a0first requirement, you need to use <code>POST<\/code> method, in which you need to pass the new port number as a JSON object in the request body<\/p>\n<p>For the second requirement, you need to use <code>DELETE<\/code> method.<\/p>\n<p>Do not Panic \ud83d\ude42<\/p>\n<blockquote><p>In this reference link, <a href=\"https:\/\/docs.oracle.com\/middleware\/1221\/wls\/WLRUR\/intro.htm#WLRUR186\">https:\/\/docs.oracle.com\/middleware\/1221\/wls\/WLRUR\/intro.htm#WLRUR186<\/a>\u00a0 \u00a0you can\u00a0find the complete list of weblogic Restful interface URLs and their supported methods and the weblogic security roles who\u00a0have privileges to invoke them.<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<h2 style=\"text-align: left;\">WLSREST-CLI<strong> Helper tool\u00a0<\/strong><\/h2>\n<p style=\"text-align: left;\">A Python script created to efficiently pass the username and password while making REST API calls using C-URL command. It will\u00a0collect the username and password before making a request and send it as an Authorization Header so that you do not have to worry about the &#8220;Shoulder Surfing&#8221; or Sharing the system with other people etc. It will not be saved in history (or) anywhere,\u00a0 It does not save any data and the credentials you are entering pertains only to a single session.<\/p>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\"><strong>How to\u00a0use it?<\/strong><\/h3>\n<p>Just download it to any\u00a0<strong>python and curl installed <\/strong>server\/box\u00a0and set proper execute permission and execute it.<\/p>\n<p>All the following examples are prepared with the <span style=\"color: #368491;\"><strong>wlsrestcli<\/strong><\/span> tool. It can serve as a better guide on how to use the script right.<\/p>\n<p>&nbsp;<\/p>\n<h3><strong>How to Download it?\u00a0<\/strong><\/h3>\n<p>Please click <a href=\"https:\/\/gist.github.com\/AKSarav\/58619fd829d411fcd0e7efd22b8c6d85\"><strong>here<\/strong><\/a> to download it<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2 style=\"text-align: left;\"><strong>Practical<\/strong> Examples<strong> using Various Methods (<\/strong>with Video<strong> )<\/strong><\/h2>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\"><strong>Start Editing session<\/strong><\/h3>\n<p>We need to start the editing session before making any configuration changes with the help of <strong>edit<\/strong> bean tree, you can relate it to clicking the <strong>Lock&amp;Edit<\/strong> button on the console before performing any configuration change in the weblogic console.<\/p>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/changeManager\/startEdit<\/pre>\n<p><iframe src=\"https:\/\/player.vimeo.com\/video\/259788627\" width=\"640\" height=\"400\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\n<p><a href=\"https:\/\/vimeo.com\/259788627\">RestStartEditing<\/a> from <a href=\"https:\/\/vimeo.com\/user82780049\">SaravAK<\/a> on <a href=\"https:\/\/vimeo.com\">Vimeo<\/a>.<\/p>\n<h3><\/h3>\n<h3 style=\"text-align: left;\"><strong>Create a new<\/strong> Managed<strong> Server\u00a0<\/strong><\/h3>\n<p>To create a new Managed Server in the domain, you must start with retrieving the <strong>server Create Form<\/strong> from <strong><em>edit<\/em><\/strong> bean tree and update the fields and send it back to <strong>create<\/strong>\u00a0link. See the video for more info.<\/p>\n<pre>Obtain create Server Form\r\n-------------------------\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-X GET http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/serverCreateForm\r\n\r\nFill the form and send to create Server\r\n----------------------------------------\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\nname: mwiServer6,\r\nlistenAddress: localhost,\r\nlistenPort: 17010\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/servers\r\n\r\nActivate the Changes\r\n--------------------\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/changeManager\/activate\r\n<\/pre>\n<p><iframe src=\"https:\/\/player.vimeo.com\/video\/259802225\" width=\"640\" height=\"400\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\n<p><a href=\"https:\/\/vimeo.com\/259802225\">REST-CreateServer<\/a> from <a href=\"https:\/\/vimeo.com\/user82780049\">SaravAK<\/a> on <a href=\"https:\/\/vimeo.com\">Vimeo<\/a>.<\/p>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\"><strong>Start and<\/strong> Stop<strong> the Server<\/strong><\/h3>\n<p>To Start and Stop the Server using WLS REST API, You must have node manager running as it passes the request to node manager for performing the start (or) stop just like AdminConsole.<\/p>\n<pre>start managed server\r\n---------------------\r\ncurl -v \\\r\n-H Content-Type:application\/json \\\r\n-H Host:localhost \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-d \"{}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/serverLifeCycleRuntimes\/mwiserver1\/start\r\n\r\nshutdown a managed server\r\n--------------------------\r\ncurl -v \\\r\n-H Content-Type:application\/json \\\r\n-H Host:localhost \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-d \"{}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/serverLifeCycleRuntimes\/mwiserver1\/shutdown<\/pre>\n<p><iframe src=\"https:\/\/player.vimeo.com\/video\/260184976\" width=\"640\" height=\"400\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"><\/iframe><\/p>\n<h5 style=\"text-align: center;\"><\/h5>\n<h3 style=\"text-align: left;\">Deployment-Related<strong> Tasks (<\/strong>Deploy, Undeploy, Update, Redeploy, Start, Stop)<\/h3>\n<p>We have created some sample application named <code>mwiapp.war<\/code> we are going to deploy it using RESTful Management API interface.<\/p>\n<pre><strong>deploy an application\r\n---------------------<\/strong>\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n  name:       'mwiapp',\r\n  applicationPath : '\/apps\/oracle-weblogic\/applications\/mwiapp.war',\r\n  targets:    ['mwiCluster1'],\r\n  plan: '\/apps\/oracle-weblogic\/applications\/plan.xml',\r\n  deploymentOptions: {}\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/deploymentManager\/deploy\r\n\r\n\r\n\r\n<strong>Get State\r\n----------<\/strong>\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n\ttarget: 'mwiCluster1'\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/deploymentManager\/appDeploymentRuntimes\/mwiapp\/getState\r\n\r\n\r\n<strong>Redeploy an Application\r\n------------------------<\/strong>\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n  targets:    ['mwiCluster1'],\r\n  plan: '\/apps\/oracle-weblogic\/applications\/plan.xml',\r\n  deploymentOptions: {}\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/deploymentManager\/appDeploymentRuntimes\/mwiapp\/redeploy\r\n\r\n<strong>Start an Application\r\n--------------------<\/strong>\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n  targets:    ['mwiCluster1'],\r\n  deploymentOptions: {}\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/deploymentManager\/appDeploymentRuntimes\/mwiapp\/start\r\n\r\n\r\n<strong>\r\nStop an Application\r\n--------------------<\/strong>\r\n\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n  targets:    ['mwiCluster1'],\r\n  deploymentOptions: {}\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/deploymentManager\/appDeploymentRuntimes\/mwiapp\/stop\r\n\r\n\r\n<strong>undeploy an Application\r\n------------------------<\/strong>\r\n\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n  targets:    ['mwiCluster1'],\r\n  deploymentOptions: {}\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/deploymentManager\/appDeploymentRuntimes\/mwiapp\/undeploy\r\n\r\n\r\n<strong>update an Application\r\n----------------------<\/strong>\r\n\r\ncurl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n  targets:    ['mwiCluster1'],\r\n  deploymentOptions: {},\r\n  plan: '\/apps\/oracle-weblogic\/applications\/plan.xml'\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/deploymentManager\/appDeploymentRuntimes\/mwiapp\/update<\/pre>\n<h5 style=\"text-align: left;\"><\/h5>\n<div class=\"lyte-wrapper\" style=\"width:640px;max-width:100%;margin:5px;\"><div class=\"lyMe\" id=\"WYL_p9iND_du5Us\"><div id=\"lyte_p9iND_du5Us\" data-src=\"\/\/i.ytimg.com\/vi\/p9iND_du5Us\/hqdefault.jpg\" class=\"pL\"><div class=\"tC\"><div class=\"tT\"><\/div><\/div><div class=\"play\"><\/div><div class=\"ctrl\"><div class=\"Lctrl\"><\/div><div class=\"Rctrl\"><\/div><\/div><\/div><noscript><a href=\"https:\/\/youtu.be\/p9iND_du5Us\"><img src=\"https:\/\/i.ytimg.com\/vi\/p9iND_du5Us\/0.jpg\" alt=\"\" width=\"640\" height=\"340\" \/><br \/>Watch this video on YouTube<\/a><\/noscript><\/div><\/div><div class=\"lL\" style=\"max-width:100%;width:640px;margin:5px;\"><\/div><\/p>\n<p>&nbsp;<\/p>\n<p>I hope by now, you are well aware of how to trigger a call through CURL by using the right method. I am gonna leave some of the CURL snippets here for your quick usage and access.\u00a0<strong> &#8211; user<\/strong>\u00a0argument was not added, as I hope you will use <strong>wlrestcli.py\u00a0<\/strong>for your security. If you are ok with using cleartext password. please go ahead and add the args before executing.<\/p>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\"><strong>Get All<\/strong> Deployed<strong> Applications Health State<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{ \r\n links: [],\r\n fields: [],\r\n children: {\r\n serverRuntimes: {\r\n links: [], \r\n fields: ['name'],\r\n children: {\r\n applicationRuntimes: {\r\n links: [],\r\n fields: ['name','healthState','OverallHealthState']\r\n }\r\n }\r\n }\r\n }\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/search<\/pre>\n<h3><\/h3>\n<h3 style=\"text-align: left;\"><strong>Update\/Change<\/strong> the<strong> managed server listenport\u00a0<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n listenPort: 17008\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/servers\/mwiserver4<\/pre>\n<h5><\/h5>\n<h3 style=\"text-align: left;\"><strong>List the Debug flags<\/strong> for managed<strong> Server<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-X GET http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/servers\/mwiserver4\/serverDebug<\/pre>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\"><strong>Enable Debug on<\/strong> HTTP<strong> Sessions for the <\/strong>managed<strong> Server<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n debugHttpSessions: true,\r\n debugHttpLogging: true,\r\n debugHttp: true\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/servers\/mwiserver4\/serverDebug<\/pre>\n<h5 style=\"text-align: center;\">\u00a0<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script><\/h5>\n<p>&nbsp;<\/p>\n<h3 style=\"text-align: left;\"><strong>Enable JDBC\/ Database<\/strong> Connection<strong> Debug on Managed Server<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-d \"{\r\n debugJDBCConn: true,\r\n debugJDBCSQL: true\r\n}\" \\\r\n-X POST http:\/\/localhost:17001\/management\/weblogic\/latest\/edit\/servers\/mwiserver4\/serverDebug<\/pre>\n<h3><\/h3>\n<h3 style=\"text-align: left;\"><strong>List of server and<\/strong> their<strong> Status\u00a0<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-X GET http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/serverLifeCycleRuntimes?fields=name,state&amp;links=none<\/pre>\n<h5><\/h5>\n<h3 style=\"text-align: left;\"><strong>Get the list of<\/strong> servers<strong> and their Listen Port<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-X GET http:\/\/localhost:17001\/management\/weblogic\/latest\/domainConfig\/servers?fields=name,listenPort&amp;links=no<\/pre>\n<h5><\/h5>\n<h3 style=\"text-align: left;\"><strong>Get the<\/strong> status<strong> of\u00a0ALL servers in the domain<\/strong><\/h3>\n<pre>curl -v \\\r\n-H X-Requested-By:MyClient \\\r\n-H Accept:application\/json \\\r\n-H Content-Type:application\/json \\\r\n-X GET http:\/\/localhost:17001\/management\/weblogic\/latest\/domainRuntime\/serverLifeCycleRuntimes?fields=name,state&amp;links=none<\/pre>\n<p>&nbsp;<\/p>\n<p>I hope this post Justifies to the Title <strong>&#8220;Weblogic 12c RESTful Management Brief Introduction and Examples&#8221;.<\/strong><\/p>\n<p>&nbsp;<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577225\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"871\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577225\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577225\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>References:<\/p>\n<p><a href=\"https:\/\/docs.oracle.com\/middleware\/1221\/wls\/WLRUR\/toc.htm\">https:\/\/docs.oracle.com\/middleware\/1221\/wls\/WLRUR\/toc.htm<\/a><\/p>\n<p><a href=\"https:\/\/docs.oracle.com\/middleware\/1221\/wls\/WLRDR\/resources.htm\">https:\/\/docs.oracle.com\/middleware\/1221\/wls\/WLRDR\/resources.htm<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>This post covers how to use weblogic rest api practically using various examples and answers, All your questions like How to enable REST api in weblogic, What can you with RESTful API in weblogic, What are bean trees in weblogic,\u00a0How to perform various operations like deployment, server creation, What is[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":882,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[8,21],"tags":[123,116,119,121,122,118,120,117,115],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to use Weblogic REST API for various management operations - Examples<\/title>\n<meta name=\"description\" content=\"How to use Weblogic REST API examples. Practical instructions for CURL, postman, browser. The Examples include Weblogic Server Status, Application Status, Update configuration, Create Server (or) cluster, Deployment related tasks and discussed various features of weblogic restful api\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to use Weblogic REST API for various management operations - Examples\" \/>\n<meta property=\"og:description\" content=\"How to use Weblogic REST API examples. Practical instructions for CURL, postman, browser. The Examples include Weblogic Server Status, Application Status, Update configuration, Create Server (or) cluster, Deployment related tasks and discussed various features of weblogic restful api\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2018-03-18T05:21:24+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-12-03T09:49:02+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.50.39-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"919\" \/>\n\t<meta property=\"og:image:height\" content=\"713\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/02\/Screen-Shot-2018-02-12-at-2.50.39-AM.png\",\"width\":919,\"height\":713},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/\",\"name\":\"How to use Weblogic REST API for various management operations - Examples\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#primaryimage\"},\"datePublished\":\"2018-03-18T05:21:24+00:00\",\"dateModified\":\"2020-12-03T09:49:02+00:00\",\"description\":\"How to use Weblogic REST API examples. Practical instructions for CURL, postman, browser. The Examples include Weblogic Server Status, Application Status, Update configuration, Create Server (or) cluster, Deployment related tasks and discussed various features of weblogic restful api\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"How to use Weblogic REST API for various management operations &#8211; Examples\",\"datePublished\":\"2018-03-18T05:21:24+00:00\",\"dateModified\":\"2020-12-03T09:49:02+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#primaryimage\"},\"keywords\":\"Get All Deployed Applications Health State,Get the status of\\u00a0ALL servers in the domain Weblogic REST,How to Enable JDBC\/ Database Connection Debug on Managed Server Weblogic REST,List the Debug flags for managed Server,Update\/Change the managed server listenport\\u00a0 - Weblogic REST,weblogic REST \\u00a0Get the list of server and their Status,Weblogic REST - Enable Debug on HTTP Sessions for the managed Server,Weblogic REST Get the list of servers and their Listen Port,What are\\u00a0Bean Trees in weblogic\",\"articleSection\":\"Best Practice,weblogic\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/how-to-use-weblogic-rest-api-examples\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/871"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=871"}],"version-history":[{"count":30,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/871\/revisions"}],"predecessor-version":[{"id":6534,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/871\/revisions\/6534"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/882"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=871"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=871"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=871"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}