{"id":954,"date":"2018-03-28T00:49:57","date_gmt":"2018-03-27T19:19:57","guid":{"rendered":"http:\/\/www.mwinventory.in\/?p=954"},"modified":"2021-09-08T23:17:05","modified_gmt":"2021-09-08T17:47:05","slug":"hide-clear-text-password-curl","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/","title":{"rendered":"How to hide clear text password CURL"},"content":{"rendered":"<p>When you are using CURL the problem is that sometimes you would have to compromise on security as it requires you to keep the passwords in clear text.\u00a0 But there is a way we can avoid it and this is post is about<\/p>\n<p><strong>&#8220;How to Avoid or Hide Sending Clear Text username and Password to CURL? &#8220;<\/strong><\/p>\n<p>Well, This post introduces an efficient and secure way to pass username and password to CURL while making REST API\u00a0 requests which requires BASIC Authentication.<\/p>\n<p>SecureCLI encrypts the username and password after collecting them from the user over the prompt and reuses it as long as the Session of the program execution is LIVE, in other words until you terminate the script.<\/p>\n<p>You can enter username and password only once and make so many <strong>subsequent<\/strong> REST\u00a0API calls.<\/p>\n<p>This is a Python-based solution and I presume that your Linux system has Python. ( Well All the latest Linux systems have python pre-installed).<\/p>\n<p>If you are trying to login to an HTTPS URL with TLS\/SSL security. you might need openssl library installed in your system as well.<\/p>\n<p>Since this is a wrapper script over CURL.\u00a0 this uses CURL command to do the actual work. so you should have all these three dependencies before using the secure CLI.<\/p>\n<p>with no further ado. let&#8217;s jump into the objective.<\/p>\n<p>&nbsp;<\/p>\n<h2 style=\"text-align: left;\"><strong>How to avoid <span style=\"color: #e01455;\">cleartext<\/span> password in CURL &#8211; Secure CURL<br \/>\n<\/strong><\/h2>\n<p>These are the steps to implement Secure CURL script. Which is written in Python and would come handy when you are using CURL next time and sending the password as a cleartext.<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #de3159;\"><strong>Step1:<\/strong><\/span> Copy the script displayed below and save it in your Server with\u00a0\u00a0<strong>.py<\/strong> extension<\/p>\n<p>&nbsp;<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">#!\/usr\/bin\/python\r\n#\r\n#\r\n# Author: Sarav(rumenlishkoff@gmail.com)\r\n# Name: SecureCLI-Curl.py\r\n# Date: 27-March-2018\r\n#\r\n#\r\nimport os\r\nimport sys\r\nimport getpass\r\nimport time\r\nimport base64\r\nimport subprocess\r\nimport re\r\n\r\ntext=[]\r\noutput = \"\"\r\nprint \"-\"*90\r\nprint \"\\t\\t Secure CLI for CURL - No more clear text password\"\r\nprint \"-\"*90\r\nprint \"Instrutions\\n------------\"\r\nprint \"This is Secure CLI for CURL tool created to efficiently pass the username and password to CURL\"\r\nprint \"Now you will be prompted for username &amp; password\"\r\nprint \"After Entering the username and password you DO NOT have to use &#8211; user username:password in your request header\"\r\nprint \"The Tool will take care of passing the credentials as a Authorization header\"\r\nprint \"Note*: Your details will not be saved and only valid for this session\"\r\nprint \"\\nExample:\"\r\nprint \"--------\"\r\nprint \" curl -v \\ \"\r\nprint \" -H X-Requested-By:MyClient \\ \"\r\nprint \" -H Accept:application\/json \\ \"\r\nprint \" -X GET http:\/\/localhost:7001\/management\/weblogic\/latest\/serverConfig?links=none \"\r\nprint \" END\"\r\nprint \"-\"*90\r\n\r\n\r\n\r\n# Get username and password\r\nusername = raw_input(\"Enter the Username: \")\r\npassword=getpass.getpass(\"Enter the Password: \")\r\n\r\ncred_enc=base64.b64encode(username+\":\"+password)\r\nprint \"INFO: the entered user credentials have been encrypted and will be sent as a header\"\r\n\r\n\r\n#cred_dec=base64.b64decode(cred_enc)\r\n#print cred_dec\r\n\r\n\r\n\r\ndef makerequest():\r\n    print \"\"\r\n    print \"Enter the whole request line by line, type END and hit enter once done\"\r\n    #read -d '' i &lt;&lt; END\r\n    while True:\r\n        line=raw_input(\"\")\r\n        text.append(line)\r\n        if \"END\" in line:\r\n            break\r\n    text.pop()\r\n\r\n\r\n\r\n\r\n    #update the basic auth header\r\n    text.insert(1,'-H \"Authorization: Basic '+cred_enc+'\"')\r\n    \r\n\r\n    cmd = \" \".join(text)\r\n    cmd=re.sub('[\\\\\\]','', cmd)\r\n\r\n\r\n\r\n    \r\n\r\n    print \"==========================\"\r\n    print \"Execution Result\"\r\n    print \"==========================\"\r\n    print \"\"\r\n    output = subprocess.Popen([cmd], shell=True,  stdout = subprocess.PIPE).communicate()[0]\r\n    print output\r\n    print \"\"\r\n    print \"==========================\"\r\n  \r\nmakerequest()\r\n\r\nwhile True:\r\n\r\n    ans=raw_input(\"Would you like to Proceed and Make a New Request ? Yes to Continue| No to exit : \")\r\n\r\n    if \"y\" in ans or \"Y\" in ans or \"yes\" in ans or \"Yes\" in ans or \"YES\" in ans:\r\n        text=[];\r\n        makerequest()\r\n    else:\r\n        sys.exit(0);<code id=\"precode\">\r\n\r\n<\/code><\/pre>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #de3159;\"><strong>Step2:<\/strong> <\/span>Make sure it is executable\u00a0 (in unix you can give Executable to all by issuing\u00a0\u00a0<strong>&#8220;chmod a+x SecureCLI-Curl.py&#8221; )<\/strong><\/p>\n<p><strong>Step3:<\/strong> Execute it as follows.<\/p>\n<pre>python SecureCLI-Curl.py\r\n(or)\r\n.\/SecureCLI-Curl.py<\/pre>\n<p>Enter the username and Password and then make a CURL call as usual. Except that you do not have to use the<strong> &#8211;user <\/strong>(or)<strong> -u<\/strong> flag or enter clear text password. The\u00a0<strong>SecureCLI<\/strong> will take care of encrypting your username and password into the <strong>Base64<\/strong> format and appends it to the <code>Authorization\u00a0Request Header<\/code><\/p>\n<p>&nbsp;<\/p>\n<h3>Execution Result<\/h3>\n<p><a href=\"http:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM.png\"><img class=\"alignnone wp-image-956 size-full\" src=\"https:\/\/www.mwinventory.in\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM.png\" alt=\"How to Avoid or Hide Sending Clear Text username and Password to CURL\" width=\"1440\" height=\"837\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM.png 1440w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM-300x174.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM-768x446.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM-1024x595.png 1024w\" sizes=\"(max-width: 1440px) 100vw, 1440px\" \/><\/a><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<p><strong>Some Clarifications:<\/strong><\/p>\n<ol>\n<li>You can use all the flags your general CURL supports like<strong> -k, &#8211;insecure &#8211;silent &#8211;ssl<\/strong>\u00a0 <strong>&#8211;user-agent<\/strong> etc.<\/li>\n<li><strong>SecureCURL<\/strong> does not save any username and password anywhere<\/li>\n<li>This is <strong>Session Oriented<\/strong> when you re-execute the script you will be prompted to enter user credentials again.<\/li>\n<li>While entering the request, you do not have to give <strong>backslash \\\u00a0<\/strong>\u00a0 if you are giving, The\u00a0<strong>SecureCLI<\/strong> will trim and remove it<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577224\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"954\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577224\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577224\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>When you are using CURL the problem is that sometimes you would have to compromise on security as it requires you to keep the passwords in clear text.\u00a0 But there is a way we can avoid it and this is post is about &#8220;How to Avoid or Hide Sending Clear[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":956,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[8,22],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to hide clear text password CURL | Devops Junction<\/title>\n<meta name=\"description\" content=\"How to Avoid or Hide Sending Clear Text username and Password to CURL and Secure it. How to Hide the username and password in CURL basic Authentication. Secure CURL could help you. A Simple Python script lets you Secure and hides the username and password being sent in Authorization Header while making REST API calls.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to hide clear text password CURL | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"How to Avoid or Hide Sending Clear Text username and Password to CURL and Secure it. How to Hide the username and password in CURL basic Authentication. Secure CURL could help you. A Simple Python script lets you Secure and hides the username and password being sent in Authorization Header while making REST API calls.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2018-03-27T19:19:57+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-09-08T17:47:05+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1440\" \/>\n\t<meta property=\"og:image:height\" content=\"837\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/03\/Screen-Shot-2018-03-28-at-12.00.45-AM.png\",\"width\":1440,\"height\":837},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/\",\"name\":\"How to hide clear text password CURL | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#primaryimage\"},\"datePublished\":\"2018-03-27T19:19:57+00:00\",\"dateModified\":\"2021-09-08T17:47:05+00:00\",\"description\":\"How to Avoid or Hide Sending Clear Text username and Password to CURL and Secure it. How to Hide the username and password in CURL basic Authentication. Secure CURL could help you. A Simple Python script lets you Secure and hides the username and password being sent in Authorization Header while making REST API calls.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"How to hide clear text password CURL\",\"datePublished\":\"2018-03-27T19:19:57+00:00\",\"dateModified\":\"2021-09-08T17:47:05+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#primaryimage\"},\"articleSection\":\"Best Practice,python_scripts\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/hide-clear-text-password-curl\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/954"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=954"}],"version-history":[{"count":19,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/954\/revisions"}],"predecessor-version":[{"id":6537,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/954\/revisions\/6537"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/956"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=954"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=954"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=954"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}