{"id":2229,"date":"2018-10-19T01:08:04","date_gmt":"2018-10-18T19:38:04","guid":{"rendered":"http:\/\/www.middlewareinventory.com\/?p=2229"},"modified":"2018-10-19T01:10:47","modified_gmt":"2018-10-18T19:40:47","slug":"weblogic-user-creation-script-wlst","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/","title":{"rendered":"Weblogic User Creation Script WLST"},"content":{"rendered":"<h2>The Objective<\/h2>\n<p>The purpose of this post to share the WLST script which helps in creating a new user in weblogic 11g or 12c and map them to righteous Group for privileges. Like Administrators, Deployers, Monitors etc.<\/p>\n<p>&nbsp;<\/p>\n<h2>Version Compatibility<\/h2>\n<p>Weblogic 12c (or) 11g<\/p>\n<p>&nbsp;<\/p>\n<h2>The Properties file<\/h2>\n<p>This is the Properties file, Heart of the Python script which performs the primary objective which is creating a username and mapping them to the correct group.<\/p>\n<ul>\n<li>Domain Name<\/li>\n<li>Host Name where the AdminServer is Running<\/li>\n<li>Listen Port of AdminServer<\/li>\n<li>The realm in weblogic ( By Default it is <code>myrealm<\/code>\u00a0)<\/li>\n<li>Weblogic User Key file<\/li>\n<li>Weblogic User Config file<\/li>\n<li>UserName, Password and the Authorization Group<\/li>\n<\/ul>\n<p><!-- HTML generated using hilite.me --><\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #008800; font-style: italic;\">#WLSusers.properties<\/span>\r\n\r\n<span style=\"color: #ff0000;\">ckey<\/span>=<span style=\"color: #0000ff;\">\/Users\/aksarav\/aksarav-WebLogicKey.properties<\/span>\r\n<span style=\"color: #ff0000;\">conf<\/span>=<span style=\"color: #0000ff;\">\/Users\/aksarav\/aksarav-WebLogicConfig.properties<\/span>\r\n<span style=\"color: #ff0000;\">hostname<\/span>=<span style=\"color: #0000ff;\">localhost<\/span>\r\n<span style=\"color: #ff0000;\">port<\/span>=<span style=\"color: #0000ff;\">17001<\/span>\r\n<span style=\"color: #ff0000;\">dname<\/span>=<span style=\"color: #0000ff;\">mwidomain<\/span>\r\n<span style=\"color: #ff0000;\">rname<\/span>=<span style=\"color: #0000ff;\">myrealm<\/span>\r\n\r\n<span style=\"color: #ff0000;\">wlusers<\/span>=<span style=\"color: #0000ff;\">user1,user2,user3<\/span>\r\n\r\n<span style=\"color: #ff0000;\">user1.Name<\/span>=<span style=\"color: #0000ff;\">sarav<\/span>\r\n<span style=\"color: #ff0000;\">user1.passwd<\/span>=<span style=\"color: #0000ff;\">sarav@43<\/span>\r\n<span style=\"color: #ff0000;\">user1.desc<\/span>=<span style=\"color: #0000ff;\">admin<\/span>\r\n<span style=\"color: #ff0000;\">user1.group<\/span>=<span style=\"color: #0000ff;\">Administrators<\/span>\r\n\r\n<span style=\"color: #ff0000;\">user2.Name<\/span>=<span style=\"color: #0000ff;\">gopi<\/span>\r\n<span style=\"color: #ff0000;\">user2.passwd<\/span>=<span style=\"color: #0000ff;\">gopi@432<\/span>\r\n<span style=\"color: #ff0000;\">user2.desc<\/span>=<span style=\"color: #0000ff;\">monitoring team<\/span>\r\n<span style=\"color: #ff0000;\">user2.group<\/span>=<span style=\"color: #0000ff;\">Monitors<\/span>\r\n\r\n<span style=\"color: #ff0000;\">user3.Name<\/span>=<span style=\"color: #0000ff;\">karthik<\/span>\r\n<span style=\"color: #ff0000;\">user3.passwd<\/span>=<span style=\"color: #0000ff;\">karthik@1<\/span>\r\n<span style=\"color: #ff0000;\">user3.desc<\/span>=<span style=\"color: #0000ff;\">developer<\/span>\r\n<span style=\"color: #ff0000;\">user3.group<\/span>=<span style=\"color: #0000ff;\">Deployers<\/span>\r\n<\/pre>\n<\/div>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>The Script file<\/h2>\n<p>This is the Python script which should be invoked with Weblogic WLST.<\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\"><span style=\"color: #aaaaaa; font-style: italic;\">#WLS_UserCreation.py<\/span>\r\n\r\n<span style=\"color: #0000aa;\">def<\/span> <span style=\"color: #00aa00;\">file_parse<\/span>():\r\n    <span style=\"color: #0000aa;\">global<\/span> _dict\r\n    _dict={}\r\n    usrprop = <span style=\"color: #aa5500;\">\"WLSusers.properties\"<\/span>\r\n    <span style=\"color: #0000aa;\">if<\/span> os.path.exists(usrprop):\r\n        fo = <span style=\"color: #00aaaa;\">open<\/span>(usrprop,<span style=\"color: #aa5500;\">'r+'<\/span>)\r\n        lines = fo.readlines()\r\n        <span style=\"color: #0000aa;\">for<\/span> usr <span style=\"color: #0000aa;\">in<\/span> lines:\r\n            <span style=\"color: #0000aa;\">if<\/span> <span style=\"color: #aa5500;\">\"=\"<\/span> <span style=\"color: #0000aa;\">in<\/span> usr:\r\n                usr = usr.rstrip()\r\n                key = usr.split(<span style=\"color: #aa5500;\">'='<\/span>)[<span style=\"color: #009999;\">0<\/span>]\r\n                value = usr.split(<span style=\"color: #aa5500;\">'='<\/span>)[<span style=\"color: #009999;\">1<\/span>]\r\n                _dict[key]=value\r\n    <span style=\"color: #0000aa;\">else<\/span>:\r\n        <span style=\"color: #0000aa;\">print<\/span>(usrprop+<span style=\"color: #aa5500;\">\"property file is missing!\"<\/span>)\r\n\r\n\r\n<span style=\"color: #0000aa;\">def<\/span> <span style=\"color: #00aa00;\">connect_domain<\/span>():\r\n    <span style=\"color: #0000aa;\">try<\/span>:\r\n        AdmSvr = _dict.get(<span style=\"color: #aa5500;\">'hostname'<\/span>)\r\n        AdmPort = _dict.get(<span style=\"color: #aa5500;\">'port'<\/span>)\r\n        AdmUrl = <span style=\"color: #aa5500;\">\"t3:\/\/\"<\/span>+AdmSvr+<span style=\"color: #aa5500;\">\":\"<\/span>+AdmPort\r\n        AdmCfg = _dict.get(<span style=\"color: #aa5500;\">'conf'<\/span>)\r\n        AdmKey = _dict.get(<span style=\"color: #aa5500;\">'ckey'<\/span>)\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"connecting to Admin Server\"<\/span>)\r\n        <span style=\"color: #0000aa;\">if<\/span> os.path.exists(AdmCfg) <span style=\"color: #0000aa;\">and<\/span> os.path.exists(AdmKey):\r\n            connect(userConfigFile=AdmCfg, userKeyFile=AdmKey, url = AdmUrl)\r\n            <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"connected to Admin Server\"<\/span>)\r\n            <span style=\"color: #0000aa;\">print<\/span><span style=\"color: #aa5500;\">\"------------------------------------------------------------\"<\/span>\r\n    <span style=\"color: #0000aa;\">except<\/span> Exception, error:\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"\\n Unable to connect to admin server \\n\"<\/span>)\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"\\n please verify the url or make sure the AdminServer is up and Running:\\n\"<\/span>)\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"Error description as follows:\\n\"<\/span>)\r\n        <span style=\"color: #0000aa;\">print<\/span>(error)\r\n        <span style=\"color: #0000aa;\">print<\/span> dumpStack()\r\n        <span style=\"color: #00aaaa;\">exit<\/span>()\r\n\r\n<span style=\"color: #0000aa;\">def<\/span> <span style=\"color: #00aa00;\">creating_user<\/span>():\r\n    <span style=\"color: #0000aa;\">try<\/span>:\r\n        domainName = _dict.get(<span style=\"color: #aa5500;\">'dname'<\/span>)\r\n        realmName = _dict.get(<span style=\"color: #aa5500;\">'rname'<\/span>)\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"\"<\/span>)\r\n        authpath= <span style=\"color: #aa5500;\">'\/SecurityConfiguration\/'<\/span> + domainName + <span style=\"color: #aa5500;\">'\/Realms\/'<\/span> + realmName + <span style=\"color: #aa5500;\">'\/AuthenticationProviders\/DefaultAuthenticator'<\/span>\r\n        cd(authpath)\r\n        cmo.createUser(uname,upwd,udesc)\r\n        <span style=\"color: #0000aa;\">print<\/span>(uname + <span style=\"color: #aa5500;\">\" user created\"<\/span>)\r\n    <span style=\"color: #0000aa;\">except<\/span> Exception, error:\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"Failed to create User, Make sure that the User name is not already present\"<\/span>)\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"Make sure the the Password is atleast of 8 characters\"<\/span>)\r\n<span style=\"color: #0000aa;\">def<\/span> <span style=\"color: #00aa00;\">adding_to_group<\/span>():\r\n    <span style=\"color: #0000aa;\">try<\/span>:\r\n        domainName = _dict.get(<span style=\"color: #aa5500;\">'dname'<\/span>)\r\n        realmName = _dict.get(<span style=\"color: #aa5500;\">'rname'<\/span>)\r\n        authpath= <span style=\"color: #aa5500;\">'\/SecurityConfiguration\/'<\/span> + domainName + <span style=\"color: #aa5500;\">'\/Realms\/'<\/span> + realmName + <span style=\"color: #aa5500;\">'\/AuthenticationProviders\/DefaultAuthenticator'<\/span>\r\n        cd(authpath)\r\n        cmo.addMemberToGroup(grpname, uname)\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"Added to group\"<\/span> <span style=\"color: #aa5500;\">\"  -  \"<\/span> + grpname)\r\n    <span style=\"color: #0000aa;\">except<\/span> Exception, error:\r\n        <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">\"Failed to Add in group\"<\/span>)\r\n\r\n\r\n<span style=\"color: #0000aa;\">if<\/span> __name__ != <span style=\"color: #aa5500;\">\"__main__\"<\/span>:\r\n    <span style=\"color: #0000aa;\">import<\/span> <span style=\"color: #00aaaa; text-decoration: underline;\">os<\/span>\r\n    <span style=\"color: #0000aa;\">import<\/span> <span style=\"color: #00aaaa; text-decoration: underline;\">sys<\/span>\r\n    redirect(<span style=\"color: #aa5500;\">\"\/dev\/null\"<\/span>,<span style=\"color: #aa5500;\">'false'<\/span>)\r\n    file_parse()\r\n    connect_domain()\r\n    users = _dict.get(<span style=\"color: #aa5500;\">'wlusers'<\/span>).split(<span style=\"color: #aa5500;\">','<\/span>)\r\n    <span style=\"color: #0000aa;\">for<\/span> each_user <span style=\"color: #0000aa;\">in<\/span> users:\r\n        uname = _dict.get(each_user+<span style=\"color: #aa5500;\">'.Name'<\/span>)\r\n        upwd = _dict.get(each_user+<span style=\"color: #aa5500;\">'.passwd'<\/span>)\r\n        udesc = _dict.get(each_user+<span style=\"color: #aa5500;\">'.desc'<\/span>)\r\n        grpname = _dict.get(each_user+<span style=\"color: #aa5500;\">'.group'<\/span>)\r\n        creating_user()\r\n        adding_to_group()\r\n        <span style=\"color: #0000aa;\">print<\/span><span style=\"color: #aa5500;\">\"------------------------------------------------------------\"<\/span>\r\n\r\n\r\n<span style=\"color: #0000aa;\">if<\/span> __name__ == <span style=\"color: #aa5500;\">\"__main__\"<\/span>:\r\n    <span style=\"color: #0000aa;\">print<\/span>(<span style=\"color: #aa5500;\">'Please execute the script via WLST'<\/span>)\r\n<\/pre>\n<\/div>\n<p>&nbsp;<\/p>\n<h2>The Trail Run<\/h2>\n<p>Here is the Trail Run Output of the script.<\/p>\n<div style=\"background: #ffffff; overflow: auto; width: auto; border: solid gray; border-width: .1em .1em .1em .8em; padding: .2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%;\">aksarav<span style=\"color: #aa0000;\">@middlewareinventory:<\/span><span style=\"color: #009999;\">\/opt\/<\/span>python_script<span style=\"color: #aa0000;\">$<\/span> <span style=\"color: #aa0000;\">java<\/span> weblogic.WLST WLS_UserCreation.py\r\n\r\nInitializing WebLogic Scripting Tool (WLST) ...\r\n\r\nWelcome to WebLogic Server Administration Scripting Shell\r\n\r\nType help() <span style=\"color: #0000aa;\">for<\/span> help on available commands\r\n\r\nconnecting to Admin Server\r\n\r\nconnected to Admin Server\r\n------------------------------------------------------------\r\n\r\nsarav user created\r\nAdded to group  -  Administrators\r\n------------------------------------------------------------\r\n\r\ngopi user created\r\nAdded to group  -  Monitors\r\n------------------------------------------------------------\r\n\r\nkarthik user created\r\nAdded to group - Deployers\r\n------------------------------------------------------------\r\n<\/pre>\n<\/div>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h2>How to use it<\/h2>\n<p><strong>Step1:\u00a0<\/strong> Copy the Properties and Script file given above and save it as\u00a0<span style=\"color: #000000;\"><code><span style=\"font-style: italic;\">WLS_UserCreation.py<\/span><\/code>\u00a0and<code>\u00a0<span style=\"font-style: italic;\">WLSusers.properties<\/span><\/code>\u00a0respectively<\/span><\/p>\n<p><strong>Step2:\u00a0 \u00a0<\/strong>Set your environment for running the WLST script by either executing <code>SetWLSEnv.sh<\/code> (or) <code>SetDomainEnv.sh<\/code> script<\/p>\n<p><strong>Step3:\u00a0 <\/strong>Update the properties file with a number of users and each of their username and password and the Group they belong. ( To Know what groups are available in weblogic, refer this <a href=\"https:\/\/docs.oracle.com\/cd\/E13222_01\/wls\/docs81\/secwlres\/usrs_grps.html\">article<\/a>\u00a0)<\/p>\n<p>Step4:\u00a0 Launch the WLST Python script <code>WLS_UserCreation.py<\/code> with <code>Java.Weblogic.WLST<\/code>\u00a0as follows<\/p>\n<blockquote>\n<p class=\"p1\"><span class=\"s1\">java weblogic.WLST WLS_UserCreation.py<\/span><\/p>\n<\/blockquote>\n<p>&nbsp;<\/p>\n<h2>Post Validation<\/h2>\n<p>If you would like to validate the users are created Successfully. Go Straight to console as\u00a0 admin user and go to user and groups section<\/p>\n<p><code>Home -&gt; Security Realms -&gt; myrealm\u00a0-&gt; Users and Groups\u00a0<\/code><\/p>\n<p>&nbsp;<\/p>\n<h2>The Trail Run ( Video )<\/h2>\n<p><script src=\"https:\/\/asciinema.org\/a\/wZPWWTq5PGprwUdr8RiblCI5T.js\" id=\"asciicast-wZPWWTq5PGprwUdr8RiblCI5T\" async><\/script><\/p>\n<p>&nbsp;<\/p>\n<p>Credits to my friend\u00a0<a href=\"https:\/\/www.facebook.com\/karthikraj19\">Karthik Raj<\/a> for crafting this script and sharing it with us<\/p>\n<p>Thanks,<br \/>\nSaravAK<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577079\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"2229\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577079\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577079\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>The Objective The purpose of this post to share the WLST script which helps in creating a new user in weblogic 11g or 12c and map them to righteous Group for privileges. Like Administrators, Deployers, Monitors etc. &nbsp; Version Compatibility Weblogic 12c (or) 11g &nbsp; The Properties file This is[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":2230,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[22,21,55],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Weblogic User Creation Script WLST<\/title>\n<meta name=\"description\" content=\"Weblogic User Creation Script WLST, Automate user creation task in weblogic 11g and 12c using this script. The Post contains the WLST Python script for creating multiple users and map them to groups based on the properties file Such as Monitors, Deployers, Administrators. The Practical Video Snippet attached.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Weblogic User Creation Script WLST\" \/>\n<meta property=\"og:description\" content=\"Weblogic User Creation Script WLST, Automate user creation task in weblogic 11g and 12c using this script. The Post contains the WLST Python script for creating multiple users and map them to groups based on the properties file Such as Monitors, Deployers, Administrators. The Practical Video Snippet attached.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2018-10-18T19:38:04+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2018-10-18T19:40:47+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/WeblogicUserCreationScript.png\" \/>\n\t<meta property=\"og:image:width\" content=\"400\" \/>\n\t<meta property=\"og:image:height\" content=\"203\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2018\/10\/WeblogicUserCreationScript.png\",\"width\":400,\"height\":203},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/\",\"name\":\"Weblogic User Creation Script WLST\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#primaryimage\"},\"datePublished\":\"2018-10-18T19:38:04+00:00\",\"dateModified\":\"2018-10-18T19:40:47+00:00\",\"description\":\"Weblogic User Creation Script WLST, Automate user creation task in weblogic 11g and 12c using this script. The Post contains the WLST Python script for creating multiple users and map them to groups based on the properties file Such as Monitors, Deployers, Administrators. The Practical Video Snippet attached.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Weblogic User Creation Script WLST\",\"datePublished\":\"2018-10-18T19:38:04+00:00\",\"dateModified\":\"2018-10-18T19:40:47+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#primaryimage\"},\"articleSection\":\"python_scripts,weblogic,wlst\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/weblogic-user-creation-script-wlst\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2229"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=2229"}],"version-history":[{"count":4,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2229\/revisions"}],"predecessor-version":[{"id":2239,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2229\/revisions\/2239"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/2230"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=2229"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=2229"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=2229"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}