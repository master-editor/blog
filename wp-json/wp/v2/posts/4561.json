{"id":4561,"date":"2019-12-02T02:09:40","date_gmt":"2019-12-01T20:39:40","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=4561"},"modified":"2022-11-11T00:48:12","modified_gmt":"2022-11-10T19:18:12","slug":"ansible-aws-ec2","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/","title":{"rendered":"Ansible EC2 Example &#8211; Create EC2 instance with Ansible"},"content":{"rendered":"<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM.png\"><img class=\"alignnone wp-image-4572 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM.png\" alt=\"Ansible Create EC2\" width=\"1440\" height=\"753\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM.png 1440w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM-300x157.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM-768x402.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM-1024x535.png 1024w\" sizes=\"(max-width: 1440px) 100vw, 1440px\" \/><\/a><\/p>\n<p>Infrastructure as Code is getting all attention it deserves and everyone is trying to find their way to the `Completely automated Infrastructure Provisioning &amp; Management`<\/p>\n<p>While there are a lot of tools available now in the market starting from Terraform, AWS CloudFormation, Chef, Puppet, Salt Stack<\/p>\n<p>There are some differences between each tool. Some of them are configuration management tools (Ansible, Chef, Saltstack) and Some of them are purely provisioning tools (terraform, cloud formation). You have to choose your judgement based on various factors like Easy to learn, easy to adopt.<\/p>\n<p>Though Terraform is a wonderful cross-platform provisioning tool I feel it has a steep learning curve. while Ansible is not that complex to start with an easy to learn and adopt.<\/p>\n<p>So this post is for those ( including me ) who love ansible&#8217;s simplicity and structure and want to see how it works with AWS.<\/p>\n<p>This is going to be a quick introduction to Ansible AWS Ec2 module.<\/p>\n<p>&nbsp;<\/p>\n<h2>How <span style=\"color: #eb0e50;\">Ansible<\/span> works with <span style=\"color: #eb0e50;\">AWS<\/span> EC2 &#8211; Setup Boto for Ansible<\/h2>\n<p>Ansible AWS combo is more like Hobbs and Shah ( Sorry! I am Fast &amp; Furious Fan) while both of em have their own individual stardom they join together to create magic.<\/p>\n<p>Stupid analogy right.!!!<\/p>\n<p>Jokes Apart, But Ansible is a leader in configuration management tools and AWS is a leader in Cloud solutions and no doubt that they give best results as combined for the Infrastructure automation and management.<\/p>\n<p>In Ansible Parlance, Everything is a module and Yes ansible provides ample amount of modules to work with AWS resource. As I am typing this post, Ansible has 194 officially listed modules for aws. <a href=\"https:\/\/docs.ansible.com\/ansible\/latest\/modules\/list_of_cloud_modules.html#amazon\">here is a list<\/a><\/p>\n<p>All these modules are helping us to accomplish a various level of tasks in AWS cloud resources creation, deletion, management, assessment etc<\/p>\n<p>Our objective is precise, we want to create an EC2 Instance using Ansible and Ansible has a module for that named <code>ec2<\/code><\/p>\n<p>Before we jump right into the playbooks and stuff. we need to do some environment setup.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h2>Environment Setup for Ansible to work with <span style=\"color: #e3104f;\">AWS EC2<\/span> module<\/h2>\n<p>As we all know Ansible is pythonic and their modules are written in python as well. So for AWS modules to work you need to have Certain prerequisite elements installed on your Ansible Control machine ( where you have installed ansible )<\/p>\n<ul>\n<li>boto<\/li>\n<li>boto3<\/li>\n<li>botocore<\/li>\n<li>python version &gt;=\u00a0 2.6<\/li>\n<\/ul>\n<p>You can install python easily but what is this boto. boto is one of the Amazon supported SDK. Boto3 is the latest version of boto.<\/p>\n<p>to make sure you have boto installed in your python. Just Launch your Python interactive terminal and type <code>import boto<\/code> and <code>import boto3<\/code> if it works fine ( shows no error) you are good.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.05.02-PM.png\"><img class=\"alignnone size-full wp-image-4564\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.05.02-PM.png\" alt=\"\" width=\"638\" height=\"177\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.05.02-PM.png 638w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.05.02-PM-300x83.png 300w\" sizes=\"(max-width: 638px) 100vw, 638px\" \/><\/a><\/p>\n<p>to install boto and boto3 you must have <code>pip3<\/code> as well. If you are having <code>python 2.7<\/code> there are chances you might have this bundled in.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.02.05-PM.png\"><img class=\"alignnone size-full wp-image-4566\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.02.05-PM.png\" alt=\"\" width=\"1366\" height=\"537\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.02.05-PM.png 1366w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.02.05-PM-300x118.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.02.05-PM-768x302.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-6.02.05-PM-1024x403.png 1024w\" sizes=\"(max-width: 1366px) 100vw, 1366px\" \/><\/a><\/p>\n<p>Some times when you have two versions of python installed in your system you have to try them out both and make sure which one has the boto installed. by performing the `import boto` command so that you can avoid some exceptions like this<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.18.41-PM.png\"><img class=\"alignnone size-full wp-image-4569\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.18.41-PM.png\" alt=\"\" width=\"843\" height=\"364\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.18.41-PM.png 843w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.18.41-PM-300x130.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.18.41-PM-768x332.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.18.41-PM-840x364.png 840w\" sizes=\"(max-width: 843px) 100vw, 843px\" \/><\/a><\/p>\n<p>If you take my\u00a0 MAC, for example, I have two python version installed, One is at <code>\/usr\/local\/bin\/python<\/code> another one is at\u00a0 <code>\/usr\/bin\/python<\/code> One comes as built-in with OS another one is installed by `homebrew` , I had to lauch them both and check the if the boto package is present in there like shown below.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.35.06-PM.png\"><img class=\"alignnone size-full wp-image-4570\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.35.06-PM.png\" alt=\"\" width=\"653\" height=\"297\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.35.06-PM.png 653w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-7.35.06-PM-300x136.png 300w\" sizes=\"(max-width: 653px) 100vw, 653px\" \/><\/a><\/p>\n<p>You could see that my <code>\/usr\/local\/bin\/python3<\/code> all necessary modules installed,<\/p>\n<blockquote><p>\u00a0Note:<\/p>\n<p>It is known that Python3 may not work properly with Ansible old versions. In that case, you can\u00a0 choose\u00a0 to install your boto libraries in <code>python 2.7.*<\/code> version and it use it as your primary version in <code>ansible_python_interpreter<\/code><\/p>\n<p>&nbsp;<\/p><\/blockquote>\n<p>This is just a method to find the right python package to use it with <code>ansible<\/code><\/p>\n<p>The path and everything could be different for you. Before executing these commands, update the paths based on your local installation.<\/p>\n<p>Now I presume that you have a python with these necessary modules installed.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h2>Ansible <span style=\"color: #e3104f;\">Playbook<\/span> to create a new EC2 instance<\/h2>\n<p>Here is the playbook to create EC2 instances and also to get the list of in your AWS Cloud account.<\/p>\n<p>We have used two blocks here (a block is just a group of tasks )<\/p>\n<ul>\n<li>The first block is to just get the instances information<\/li>\n<li>The second block is to create the instance<\/li>\n<\/ul>\n<p>For security reasons, we made the Second block to run only when it is being explicitly called with <code>--tags<\/code><\/p>\n<p>this has been done by using the tag\u00a0 <code>never<\/code> in the block<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Create Ec2 instances\r\n  hosts: localhost\r\n  gather_facts: false\r\n  tasks:\r\n\r\n  # Block is a Group of Tasks combined together\r\n  - name: Get Info Block\r\n    block: \r\n      - name: Get Running instance Info\r\n        \r\n        ec2_instance_info:\r\n        register: ec2info \r\n\r\n      - name: Print info\r\n        debug: var=\"ec2info.instances\"\r\n             \r\n\r\n    # By specifying always on the tag, \r\n    # I let this block to run all the time by module_default\r\n    # this is for security to net create ec2 instances accidentally\r\n    tags: ['always', 'getinfoonly']\r\n\r\n  - name: Create EC2 Block\r\n    block: \r\n\r\n      - name: Launch ec2 instances\r\n        tags: create_ec2\r\n        ec2:\r\n          region: us-east-1\r\n          key_name: SaravAK-PrivateKey \r\n          group: app_sec_group\r\n          instance_type: t2.medium\r\n          image: ami-2051294a\r\n          wait: yes\r\n          wait_timeout: 500\r\n          count: 2\r\n          instance_tags:\r\n            name: appservers\r\n            os: ubuntu\r\n          monitoring: no\r\n          vpc_subnet_id: subnet-3d3ef270\r\n          assign_public_ip: yes\r\n        register: ec2\r\n        delegate_to: localhost\r\n\r\n      - name : Add instance to host group\r\n        add_host:\r\n          hostname: \"{{ item.public_ip }}\"\r\n          groupname: launched\r\n        loop: \"{{ ec2.instances }}\"\r\n\r\n      - name: Wait for SSH to come up\r\n        local_action:\r\n          module: wait_for\r\n          host: \"{{ item.public_ip }}\"\r\n          port: 22\r\n          delay: 10\r\n          timeout: 120\r\n        loop: \"{{ ec2.instances }}\"\r\n    # By specifying never on the tag of this block, \r\n    # I let this block to run only when explicitely being called\r\n    tags: ['never', 'ec2-create']\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>You might wonder where is my AWS Key and SECRET mentioned. How would I be able to login to my AWS account? How the authentication will be done.<\/p>\n<p>I hear ya.<\/p>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Setup <span style=\"color: #e3104f;\">AWS Authentication<\/span> Before Running the Playbook with Ansible EC2<\/h3>\n<p>To make this article precise, I just assume that you know how to create programmatic access for your AWS account and get your <code>AWS_ACCESS_KEY<\/code> and <code>AWS_SECRET<\/code><\/p>\n<p>Once you have the keys, the easiest but an unsecured way is to save it as Environment Variables like this and we are all set.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-9.43.36-PM.png\"><img class=\"alignnone size-full wp-image-4571\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-9.43.36-PM.png\" alt=\"\" width=\"858\" height=\"52\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-9.43.36-PM.png 858w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-9.43.36-PM-300x18.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-9.43.36-PM-768x47.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-01-at-9.43.36-PM-840x52.png 840w\" sizes=\"(max-width: 858px) 100vw, 858px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Getting ready to execute the playbook &#8211; Ansible AWS EC2<\/h3>\n<p>Before executing the playbook you must be sure which python interpreter you are going to use which has `boto` libraries installed.<\/p>\n<p>When it comes to using EC2 modules, It is always better to tell ansible explicitly which python interpreter it has to use.<\/p>\n<p>In my case, as I have said before my <code>\/usr\/local\/bin\/python3<\/code> has the necessary boto libraries and I have to tell ansible to use that python.<\/p>\n<p>to do that, I can use <code>ansible.cfg<\/code> file or\u00a0 <code>ansible inventory file<\/code> but I prefer to do it in a command line as a runtime variable<\/p>\n<p>Here is the command I supposed to use<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">ansible-playbook ec2-creation.yml  \\\r\n--connection=local  \\\r\n-e \"ansible_python_interpreter=\/usr\/local\/bin\/python3\"<\/pre>\n<p>&nbsp;<\/p>\n<p>Here<\/p>\n<p><strong>&#8211;connection<\/strong>\u00a0 tells Ansible to run this task locally and not look for any remote server or hosts file<\/p>\n<p><strong>&#8211;e <\/strong>extra args or variables where we gave the python interpreter by setting the python full location to <code>ansible_python_interpreter<\/code> variable<\/p>\n<p>when I run this, I would get only the info of existing instances. it would not create the instances yet. as we have the info as the default block<\/p>\n<p>Now to create the ec2 instance or to run that block, I need to call the tag of that block using <code>--tags<\/code> like shown below.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">ansible-playbook ec2-creation.yml \\ \r\n--connection=local \\ \r\n--tags=ec2-create \\ \r\n-e \"ansible_python_interpreter=\/usr\/local\/bin\/python3\"<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Execution Part &#8211; Run the playbook with Ansible EC2<\/h3>\n<p>Here is the execution and the result of this playbook.<\/p>\n<p><script id=\"asciicast-B0Ne4005TZvOqWGtvv20lIfPC\" src=\"https:\/\/asciinema.org\/a\/B0Ne4005TZvOqWGtvv20lIfPC.js\" async><\/script><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2>A <span style=\"color: #eb0e50;\">Playbook<\/span> with Ansible EC2 &amp; Ansible Vault &#8211; Secure Approach<\/h2>\n<p>to use the Ansible vault to securely store your AWS Keys, You might need one more file on the same directory where you can save your credentials as variables and encrypt it with the vault.<\/p>\n<p>The file can be imported later within the playbook.<\/p>\n<p>Here is the modified playbook with a secure approach, Ansible Vault<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Create Ec2 instances\r\n  hosts: localhost\r\n  # import the secret file\r\n  vars_files:\r\n    - secrets.yml\r\n  gather_facts: false\r\n  tasks:\r\n\r\n  # Block is a Group of Tasks combined together\r\n  - name: Get Info Block\r\n    block: \r\n      - name: Get Running instance Info\r\n        \r\n        ec2_instance_info:\r\n        register: ec2info \r\n\r\n      - name: Print info\r\n        debug: var=\"ec2info.instances\"\r\n             \r\n\r\n    # By specifying always on the tag, \r\n    # I let this block to run all the time by module_default\r\n    # this is for security to net create ec2 instances accidentally\r\n    tags: ['always', 'getinfoonly']\r\n\r\n  - name: Create EC2 Block\r\n    block: \r\n\r\n      - name: Launch ec2 instances\r\n        tags: create_ec2\r\n        ec2:\r\n          region: us-east-1\r\n          key_name: SaravAK-PrivateKey\r\n          group: app_sec_group\r\n          instance_type: t2.medium\r\n          image: ami-2051294a\r\n          wait: yes\r\n          wait_timeout: 500\r\n          count: 2\r\n          instance_tags:\r\n            name: appservers\r\n            os: ubuntu\r\n          monitoring: no\r\n          vpc_subnet_id: subnet-3d3ef270\r\n          assign_public_ip: yes\r\n        register: ec2\r\n        delegate_to: localhost\r\n\r\n      - name : Add instance to host group\r\n        add_host:\r\n          hostname: \"{{ item.public_ip }}\"\r\n          groupname: launched\r\n        loop: \"{{ ec2.instances }}\"\r\n\r\n      - name: Wait for SSH to come up\r\n        local_action:\r\n          module: wait_for\r\n          host: \"{{ item.public_ip }}\"\r\n          port: 22\r\n          delay: 10\r\n          timeout: 120\r\n        loop: \"{{ ec2.instances }}\"\r\n    # By specifying never on the tag of this block, \r\n    # I let this block to run only when explicitely being called\r\n    tags: ['never', 'ec2-create']<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3>Saving the AWS Secrets<\/h3>\n<p>As we have included the <code>secrets.yml<\/code> file inside our playbook, Now we need to save our <code>AWS KEY<\/code> and <code>SECRET<\/code><\/p>\n<p>This is the content of the <code>secret.yml<\/code> file<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">\u279c cat secrets.yml \r\nAWS_ACCESS_KEY_ID: AKIATQ7Q7SGKYB4TT3DX \r\nAWS_SECRET_ACCESS_KEY: Ay5TfbndH78kYTXhSuvBXe\/AcR98reMu7ii9PJ6+<\/pre>\n<p>&nbsp;<\/p>\n<p>It is saved as clear text info within the file so whoever opens it can see what is inside.<\/p>\n<p><strong>So Encrypt it<\/strong><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">\u279c ansible-vault encrypt secrets.yml \r\nNew Vault password: \r\nConfirm New Vault password: Encryption successful<\/pre>\n<p>&nbsp;<\/p>\n<p>Now you have to remember this password and use it while you are starting the playbook.<\/p>\n<p>For Ansible to ask you the password you should use a startup argument named <code>--ask-vault-pass<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">ansible-playbook ec2-creation.yml \\ \r\n--connection=local \\ \r\n--tags=ec2-create \\ \r\n-e \"ansible_python_interpreter=\/usr\/local\/bin\/python3\" \\ \r\n--ask-vault-pass<\/pre>\n<p>&nbsp;<\/p>\n<p>It would prompt you for the password as it runs.<\/p>\n<p>See the following Screen record if you want to see how it works in realtime.<\/p>\n<p>&nbsp;<\/p>\n<h2>Execution of Ansible <span style=\"color: #eb0e50;\">AWS<\/span> Playbook example<\/h2>\n<p><script id=\"asciicast-m3ZuoEOyrn7nk102S2s1VDQPE\" src=\"https:\/\/asciinema.org\/a\/m3ZuoEOyrn7nk102S2s1VDQPE.js\" async><\/script><\/p>\n<p>&nbsp;<\/p>\n<p>I know this is just a first step, Now you have got better things to do with that newly created server and install and configure it. you might have further questions on how to use these servers and configure them properly on the same playbook.<\/p>\n<p>Please stay connected and Lookup for my next article. I am already drafting it.<\/p>\n<p>hope this helps.<\/p>\n<p>Rate this article [ratings] if you would like to<\/p>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577347\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"4561\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577347\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577347\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Infrastructure as Code is getting all attention it deserves and everyone is trying to find their way to the `Completely automated Infrastructure Provisioning &amp; Management` While there are a lot of tools available now in the market starting from Terraform, AWS CloudFormation, Chef, Puppet, Salt Stack There are some differences[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":4572,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98,454],"tags":[371,372,374,369,370,373],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible EC2 Example - Create EC2 instance with Ansible<\/title>\n<meta name=\"description\" content=\"Ansible EC2 Example. Ansible Create AWS EC2 instances Example, How to Create EC2 instance with Ansible. Ansible AWS example, AWS Playbook example. Ansible playbook to create EC2 instances with Ansible. Ansible Vault and EC2 example. Setup Boto for AWS\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible EC2 Example - Create EC2 instance with Ansible\" \/>\n<meta property=\"og:description\" content=\"Ansible EC2 Example. Ansible Create AWS EC2 instances Example, How to Create EC2 instance with Ansible. Ansible AWS example, AWS Playbook example. Ansible playbook to create EC2 instances with Ansible. Ansible Vault and EC2 example. Setup Boto for AWS\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-12-01T20:39:40+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-11-10T19:18:12+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1440\" \/>\n\t<meta property=\"og:image:height\" content=\"753\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/12\/Screenshot-2019-12-02-at-2.07.39-AM.png\",\"width\":1440,\"height\":753,\"caption\":\"Ansible EC2 Create\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/\",\"name\":\"Ansible EC2 Example - Create EC2 instance with Ansible\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#primaryimage\"},\"datePublished\":\"2019-12-01T20:39:40+00:00\",\"dateModified\":\"2022-11-10T19:18:12+00:00\",\"description\":\"Ansible EC2 Example. Ansible Create AWS EC2 instances Example, How to Create EC2 instance with Ansible. Ansible AWS example, AWS Playbook example. Ansible playbook to create EC2 instances with Ansible. Ansible Vault and EC2 example. Setup Boto for AWS\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible EC2 Example &#8211; Create EC2 instance with Ansible\",\"datePublished\":\"2019-12-01T20:39:40+00:00\",\"dateModified\":\"2022-11-10T19:18:12+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#primaryimage\"},\"keywords\":\"Ansible and AWS,Ansible AWS Boto,Ansible AWS Example,Ansible EC2,Ansible EC2 Creation,Ansible EC2 example\",\"articleSection\":\"Ansible,DevOps_Beginner\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws-ec2\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4561"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=4561"}],"version-history":[{"count":17,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4561\/revisions"}],"predecessor-version":[{"id":6760,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/4561\/revisions\/6760"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/4572"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=4561"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=4561"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=4561"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}