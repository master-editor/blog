{"id":5472,"date":"2020-07-05T15:27:29","date_gmt":"2020-07-05T09:57:29","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=5472"},"modified":"2022-06-19T11:20:08","modified_gmt":"2022-06-19T05:50:08","slug":"traefik-docker","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/","title":{"rendered":"Traefik Docker Example and Introduction"},"content":{"rendered":"<p>Traefik Loadbalancer is growing in the container and microservices industry as a leader in Loadbalancing, Routing and service management.\u00a0 It has everything that typical load balancers like haproxy provides and a few cooler and advanced features like Auto Service detections and LetsEncrypt SSL integration and SNI support etc.<\/p>\n<p>Here is the quick diagram that explains what is traefik and what it can do for you.<\/p>\n<p>&nbsp;<\/p>\n<figure id=\"attachment_5474\" aria-describedby=\"caption-attachment-5474\" style=\"width: 2875px\" class=\"wp-caption alignnone\"><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/traefik-architecture.png\"><img class=\"wp-image-5474 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/traefik-architecture.png\" alt=\"\" width=\"2875\" height=\"1501\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/traefik-architecture.png 2875w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/traefik-architecture-300x157.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/traefik-architecture-768x401.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/06\/traefik-architecture-1024x535.png 1024w\" sizes=\"(max-width: 2875px) 100vw, 2875px\" \/><\/a><figcaption id=\"caption-attachment-5474\" class=\"wp-caption-text\">Image Credits to Traefik<\/figcaption><\/figure>\n<p>&nbsp;<\/p>\n<p>Here is the list of few important features that make traefik standout in the market<\/p>\n<ol>\n<li>Traefik is natively compliant with every major cluster technology, such as Kubernetes, Docker, Docker Swarm, AWS, Mesos, Marathon, and <a href=\"https:\/\/docs.traefik.io\/providers\/overview\/\">the list goes on<\/a>;<\/li>\n<li>There is no need to maintain and synchronize a separate configuration file: everything happens automatically, in real-time (<strong>no restarts<\/strong>, no connection interruptions).<\/li>\n<li>Designed for modern infrastructure, Micro Services in mind.<\/li>\n<li><strong>Innovative Web User Interface<\/strong> than any of its competitor products in the market.<\/li>\n<li>Built-in <strong>LetsEncrypt<\/strong> SSL Certificate provisioning is another major key factor<\/li>\n<li><strong>Auto Services Discovery<\/strong> &#8211; When you add a new docker service, without any modification Traefik would reconfigure itself and your services would be ready to be used.<\/li>\n<li>TCP Support with <strong>SNI Routing<\/strong> &amp; Multi-Protocol Support HTTP &amp; TLS<\/li>\n<li>Canary Deployments and A\/B testing &#8211; Know more about<a href=\"https:\/\/dev.to\/mostlyjason\/intro-to-deployment-strategies-blue-green-canary-and-more-3a3\"> types of deployment<\/a> in DevOps<\/li>\n<li>More Customization in terms of Routing and Redirection policies with various middleware products and services. <a href=\"https:\/\/containo.us\/blog\/traefik-2-0-6531ec5196c2\/\" target=\"_blank\" rel=\"noopener noreferrer\">Refer this article for more<\/a><\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<p>Here is a quick look of the Traefik Web UI.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik.png\"><img class=\"alignnone size-full wp-image-5482\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik.png\" alt=\"\" width=\"1911\" height=\"1585\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik.png 1911w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik-300x249.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik-768x637.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik-1024x849.png 1024w\" sizes=\"(max-width: 1911px) 100vw, 1911px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3><span style=\"font-size: 18pt;\">Traefik Docker Testing with Docker Desktop CE<br \/>\n<\/span><\/h3>\n<p>The Best way to learn something is to try it out. that&#8217;s what we are going to do in this article. We are going to deploy Traefik Docker image in locally ( mac ) running Docker CE<\/p>\n<p>I presume that you have a Docker CE installed and you have some basic idea on how to deploy docker image as a container<\/p>\n<p><span style=\"color: #0b4c7d;\">This article would help you get started with Docker if you are new to Docker and Containers<\/span><\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"NOjppKSapb\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/\">Docker Run Image as Container &#8211; Create Container From Docker Image<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Docker Run Image as Container &#8211; Create Container From Docker Image&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/docker-run-image-as-container\/embed\/#?secret=NOjppKSapb\" data-secret=\"NOjppKSapb\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n<h3><span style=\"font-size: 18pt;\">Onward to Creating few Containers in Docker before setting up Traefik<\/span><\/h3>\n<p>Before testing the Traefik Loadbalancer we need to have few applications to test it with. Without any backend how can we test the load balancer any way?<\/p>\n<p>If you have a container of that sort then you can skip this step, otherwise buckle up<\/p>\n<p>For this post, I am taking an <a href=\"https:\/\/hub.docker.com\/_\/nginx\">Nginx Docker<\/a> image and going to set up two static websites with HTML files<\/p>\n<p>&nbsp;<\/p>\n<h3><span style=\"font-size: 14pt;\"><span style=\"font-size: 18pt;\">Creating workspace and HTML files<\/span> <\/span><\/h3>\n<p>Let&#8217;s call these applications <code>webapp1<\/code> and <code>webapp2<\/code><\/p>\n<p>So Now we need to create two static HTML pages for our web applications.<\/p>\n<p>Choose some directory in your local file system and create two directories named <code>webapp1<\/code> and <code>webapp2<\/code> beneath the same. In my case, \/apps\/docker is my\u00a0 workspace in which am going to create<\/p>\n<p>Given below is the Tree Structure of entire workspace and I have created two <code>index.html<\/code> files inside my webapp directories<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/TraefikDockerWorkSpace.png\"><img class=\"alignnone size-full wp-image-5487\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/TraefikDockerWorkSpace.png\" alt=\"\" width=\"1464\" height=\"640\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/TraefikDockerWorkSpace.png 1464w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/TraefikDockerWorkSpace-300x131.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/TraefikDockerWorkSpace-768x336.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/TraefikDockerWorkSpace-1024x448.png 1024w\" sizes=\"(max-width: 1464px) 100vw, 1464px\" \/><\/a><\/p>\n<p>Here is the file content for the <code>webapp1\/index.html<\/code><\/p>\n<pre>&lt;h2&gt; this is &lt;b style=\"color: crimson\"&gt; WebApp1 &lt;\/b&gt;&lt;\/h2&gt;<\/pre>\n<p>Here is the file content for the <code>webapp2\/index.html<\/code><\/p>\n<pre>h2&gt; this is &lt;b style=\"color: crimson\"&gt; WebApp2 &lt;\/b&gt;&lt;\/h2&gt;<\/pre>\n<p>If you test this file locally in your browser the output would look something like this<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/testapps-traefik.png\"><img class=\"alignnone wp-image-5488 size-medium\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/testapps-traefik-300x131.png\" alt=\"\" width=\"300\" height=\"131\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/testapps-traefik-300x131.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/testapps-traefik-768x334.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/testapps-traefik-1024x446.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/testapps-traefik.png 1222w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3><span style=\"font-size: 18pt;\">Launch our web applications with NGINX Container<\/span><span style=\"font-size: 18pt; color: #003366;\"><br \/>\n<\/span><\/h3>\n<p>It is a time now to start our NGINX Containers with our customized <code>index.html<\/code> files.\u00a0 We are going to share the <code>\/apps\/docker\/webapp1<\/code> and <code>\/apps\/docker\/webapp2<\/code> as a Shared volume to the containers, we are creating.<\/p>\n<p>here is the command to launch our containers with Shared Volumes<\/p>\n<p>webapp1<\/p>\n<pre>docker run &#8211; name webapp1 -v<\/pre>\n<p><strong>\/apps\/docker\/webapp1<\/strong><\/p>\n<pre>:\/usr\/share\/nginx\/html:ro -d nginx<\/pre>\n<p>webapp2<\/p>\n<pre>docker run &#8211; name webapp2 -v<\/pre>\n<p><strong>\/apps\/docker\/webapp2<\/strong><\/p>\n<pre>:\/usr\/share\/nginx\/html:ro -d nginx<\/pre>\n<p>You can see that we are sharing the directories to the containers and it would be mounted as <code>\/usr\/share\/nginx\/html<\/code> inside the container where NGINX default document root is pointed to.<\/p>\n<p>So when the NGINX comes up inside the container we would be able to access our Application.<\/p>\n<blockquote><p>\u00a0For Mac Users:<\/p>\n<p>You have to share these directories using the Docker File Sharing option available in\u00a0\u00a0 your Docker Desktop Preferences.<\/p>\n<p><code>\u00a0Docker -&gt; Preferences... -&gt; File Sharing.<\/code><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/DockerSharing.png\"><img class=\"alignnone wp-image-5495 size-medium\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/DockerSharing-300x176.png\" alt=\"\" width=\"300\" height=\"176\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/DockerSharing-300x176.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/DockerSharing-768x450.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/DockerSharing-1024x601.png 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" \/><\/a><\/p>\n<p>Once you have shared the FileSystem, you have to restart your DockerCE for the changes to take effect.<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<p>Note that we have not done any port forwarding to local. so technically the webapp1 and webapp2 should not be accessible from the host (mac\/windows).<\/p>\n<p>Because we are going to use traefik to handle all our incoming calls efficiently and with the power of Traefik, we achieve any level of routing and load balancing.<\/p>\n<p>With no further ado, let us start <code>traefik<\/code><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3><span style=\"font-size: 18pt;\">Launch the Traefik Container<\/span><\/h3>\n<p>Traefik comes with a lot of features and capabilities as mentioned earlier. But for a starter, let us start with having a Simple Host-based routing with Traefik<\/p>\n<p>Before launching the traefik, Let us create a configuration file with the default rule for Traefik to start doing its magic.<\/p>\n<p>Here is the basic level traefik configuration file with host-based routing enabled to all other containers running on the local. It would auto-detect our webapp1 and webapp2 and would also detect any container that we might start in the future<\/p>\n<p>In Kubernetes, this same configuration auto-detection and forwarding is\u00a0 known as <code>Ingress Controller<\/code><\/p>\n<pre>## traefik.yml\r\n\r\n# Docker configuration backend\r\nproviders:\r\n  docker:\r\n    defaultRule: \"Host(`{{ trimPrefix `\/` .Name }}.dev.local`)\"\r\n\r\n# API and dashboard configuration\r\napi:\r\n  insecure: true<\/pre>\n<p>Save this file as <code>traefik.yml<\/code> and run the following docker command to start our beloved traefik<\/p>\n<pre>docker run -d -p 8080:8080 -p 80:80 \\\r\n-v $PWD\/traefik.yml:\/etc\/traefik\/traefik.yml \\\r\n-v \/var\/run\/docker.sock:\/var\/run\/docker.sock &#8211; name traefik \\\r\ntraefik:v2.0<\/pre>\n<p>If you look at the preceding <code>docker run<\/code> command closely you would see that we are sharing the <code>docker.sock<\/code> file with traefik container along with the configuration file named <code>traefik.yml<\/code><\/p>\n<p>this file serves as a repository and configuration for docker and docker runtime containers. this is how traefik is able to auto-detect the containers. to know more about <code>docker.sock<\/code> file <a href=\"https:\/\/medium.com\/better-programming\/about-var-run-docker-sock-3bfd276e12fd\">refer this post<\/a><\/p>\n<p>I have two nginx containers and traefik running for now so technically traefik would be able to detect all these containers.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.29.41-PM.png\"><img class=\"alignnone size-full wp-image-5497\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.29.41-PM.png\" alt=\"\" width=\"3226\" height=\"240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.29.41-PM.png 3226w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.29.41-PM-300x22.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.29.41-PM-768x57.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.29.41-PM-1024x76.png 1024w\" sizes=\"(max-width: 3226px) 100vw, 3226px\" \/><\/a><\/p>\n<p>If you have tools like <code>dnsmasq<\/code> installed in your Mac\/Windows you can easily achieve the wildcard based domain name like <code>*.dev.local to 127.0.0.1<\/code> like that<\/p>\n<p>Otherwise, let us use our default option of editing the <code>\/etc\/hosts<\/code> file and add the below entries<\/p>\n<pre>127.0.0.1 webapp2.dev.local\r\n127.0.0.1 webapp1.dev.local<\/pre>\n<p>That&#8217;s all.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3><span style=\"font-size: 18pt;\">Testing the Setup<\/span><\/h3>\n<p>If you have done everything right. You should be able to access your application using <code>webapp1.dev.local<\/code> and <code>webapp2.dev.local<\/code><\/p>\n<blockquote><p>\u00a0<strong>How this names are taken ? webapp1 and webapp2<\/strong><\/p>\n<p>webapp1 and webapp2 are the container names we have given with <code>--name<\/code> parameter while starting our container.\u00a0 If you have given someother name while starting the container this would not work.<\/p><\/blockquote>\n<p>Also, you can reach the beautiful frontend of Traefik using <code>http:\/\/localhost:8080<\/code> URL, as you have forwarded this port 8080 when you were launching the container<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.15-PM.png\"><img class=\"alignnone size-full wp-image-5500\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.15-PM.png\" alt=\"Docker Traefik Example\" width=\"3158\" height=\"1512\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.15-PM.png 3158w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.15-PM-300x144.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.15-PM-768x368.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.15-PM-1024x490.png 1024w\" sizes=\"(max-width: 3158px) 100vw, 3158px\" \/><\/a><\/p>\n<p>If you click on the <code>HTTP<\/code> tab on the WEB UI you can view the services listed<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.27-PM.png\"><img class=\"alignnone size-full wp-image-5501\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.27-PM.png\" alt=\"Docker Traefik\" width=\"3210\" height=\"1102\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.27-PM.png 3210w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.27-PM-300x103.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.27-PM-768x264.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-1.40.27-PM-1024x352.png 1024w\" sizes=\"(max-width: 3210px) 100vw, 3210px\" \/><\/a><\/p>\n<p>Now we can test the application in our browser and in my side results were good as expected.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.37.21-PM.png\"><img class=\"alignnone size-full wp-image-5503\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.37.21-PM.png\" alt=\"Docker Traefik\" width=\"1430\" height=\"546\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.37.21-PM.png 1430w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.37.21-PM-300x115.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.37.21-PM-768x293.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.37.21-PM-1024x391.png 1024w\" sizes=\"(max-width: 1430px) 100vw, 1430px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"font-size: 18pt;\">Test with CURL host header field<\/span> <\/strong><\/p>\n<p>For some reason, you don&#8217;t want to update the <code>\/etc\/hosts<\/code> file and still want to test this setup. You can use the <code>CURL<\/code> command with the host header field to achieve the same result.<\/p>\n<p>WebServers and Proxy Servers like traefik gets its name from the <code>host<\/code> header field so if you are customizing the host header and send a request to your <code>localhost:80<\/code> you would be able to reach the site you have intended to reach<\/p>\n<p>to reach webapp1<\/p>\n<pre>curl &#8211; header \"host:webapp1.dev.local\" localhost:80<\/pre>\n<p>to reach webapp2<\/p>\n<pre>curl &#8211; header \"host:webapp2.dev.local\" localhost:80<\/pre>\n<p>You can see that we are actually making a call to the <code>http:\/\/localhost<\/code> here but we are able to reach our applications, this is host-based virtual hosting is achieved<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.29.56-PM.png\"><img class=\"alignnone size-full wp-image-5502\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.29.56-PM.png\" alt=\"Docker Traefik\" width=\"1700\" height=\"342\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.29.56-PM.png 1700w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.29.56-PM-300x60.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.29.56-PM-768x155.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.29.56-PM-1024x206.png 1024w\" sizes=\"(max-width: 1700px) 100vw, 1700px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3><span style=\"font-size: 18pt;\">Testing the Auto Detection of Traefik<\/span><\/h3>\n<p>Now we should test if traefik is auto-detecting if we are launching a new container in our system. This time let us take another tomcat application container image from docker hub.<\/p>\n<p>Go to the terminal or command line and launch a new container and name the container as <code>tomcat<\/code> according to our rule, traefik should auto-detect this container and make it available at <code>tomcat.dev.local<\/code><\/p>\n<pre>docker run -d &#8211; name tomcat saravak\/tomcat8<\/pre>\n<p>without any hostname update you are ready to test this with curl<\/p>\n<pre>\u279c ~<\/pre>\n<p><strong>curl &#8211;header &#8220;host:tomcat.dev.local&#8221; localhost\/SampleWebApp\/<\/strong><\/p>\n<pre>&lt;!DOCTYPE html&gt;\r\n&lt;!--\r\nTo change this license header, choose License Headers in Project Properties.\r\nTo change this template file, choose Tools | Templates\r\nand open the template in the editor.\r\n--&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;SampleWebApp&lt;\/title&gt;\r\n&lt;meta charset=\"UTF-8\"&gt;\r\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n&lt;h2&gt;Sample Web Application To Deploy and Test&lt;\/h2&gt;\r\n&lt;br&gt;\r\n&lt;div&gt; click &lt;a href=\"SnoopServlet\"&gt;Click to Invoke a SnoopServlet&lt;\/a&gt;&lt;\/div&gt;\r\n&lt;br&gt;\r\n&lt;br&gt;\r\n\r\n\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;<\/pre>\n<p>Or you can update the <code>\/etc\/hosts<\/code> file and add an entry like this<\/p>\n<pre>127.0.0.1 tomcat.dev.local<\/pre>\n<p>this is my sample Tomcat based Application which would reveal some useful information including the container hostname and the ip address, this would match with your <code>docker ps<\/code> results.<\/p>\n<p>&nbsp;<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.54.25-PM.png\"><img class=\"alignnone size-full wp-image-5504\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.54.25-PM.png\" alt=\"\" width=\"1726\" height=\"1834\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.54.25-PM.png 1726w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.54.25-PM-282x300.png 282w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.54.25-PM-768x816.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/Screenshot-2020-07-05-at-2.54.25-PM-964x1024.png 964w\" sizes=\"(max-width: 1726px) 100vw, 1726px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>This is how the Auto-detection feature of traefik works. Mission accomplished. Henceforth without having to open multiple ports and port forwardings. You can keep launching the containers and traefik would take care of the rest for you.<\/p>\n<p>I think this is enough for the introduction article, In my next article, we will cover more about other rules and options available with Traefik including SSL.<\/p>\n<p>Until then. Stay Safe, Stay Connected.!<\/p>\n<p>Cheers<br \/>\nSaravAK<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578012\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"5472\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578012\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578012\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Traefik Loadbalancer is growing in the container and microservices industry as a leader in Loadbalancing, Routing and service management.\u00a0 It has everything that typical load balancers like haproxy provides and a few cooler and advanced features like Auto Service detections and LetsEncrypt SSL integration and SNI support etc. Here is[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":5482,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[391],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Traefik Docker Example and Introduction | Devops Junction<\/title>\n<meta name=\"description\" content=\"Traefik Docker Example and Introduction. How Traefik Auto-detection works and Traefik Reverse proxy example and how to set up. Traefik sample configuration example. Testing the Traefik with Docker Desktop and Docker CE. How Traefik works with Docker. Docker and Traefik Reverse Proxy setup example and how it works.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Traefik Docker Example and Introduction | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Traefik Docker Example and Introduction. How Traefik Auto-detection works and Traefik Reverse proxy example and how to set up. Traefik sample configuration example. Testing the Traefik with Docker Desktop and Docker CE. How Traefik works with Docker. Docker and Traefik Reverse Proxy setup example and how it works.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2020-07-05T09:57:29+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T05:50:08+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1911\" \/>\n\t<meta property=\"og:image:height\" content=\"1585\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/07\/traefik.png\",\"width\":1911,\"height\":1585},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/\",\"name\":\"Traefik Docker Example and Introduction | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#primaryimage\"},\"datePublished\":\"2020-07-05T09:57:29+00:00\",\"dateModified\":\"2022-06-19T05:50:08+00:00\",\"description\":\"Traefik Docker Example and Introduction. How Traefik Auto-detection works and Traefik Reverse proxy example and how to set up. Traefik sample configuration example. Testing the Traefik with Docker Desktop and Docker CE. How Traefik works with Docker. Docker and Traefik Reverse Proxy setup example and how it works.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Traefik Docker Example and Introduction\",\"datePublished\":\"2020-07-05T09:57:29+00:00\",\"dateModified\":\"2022-06-19T05:50:08+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#primaryimage\"},\"articleSection\":\"Traefik\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/traefik-docker\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5472"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=5472"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5472\/revisions"}],"predecessor-version":[{"id":8689,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/5472\/revisions\/8689"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/5482"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=5472"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=5472"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=5472"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}