{"id":2615,"date":"2019-01-02T03:30:27","date_gmt":"2019-01-01T22:00:27","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=2615"},"modified":"2022-06-19T11:32:04","modified_gmt":"2022-06-19T06:02:04","slug":"ansible_wait_for_reboot_to_complete","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/","title":{"rendered":"Ansible Reboot system and wait_for reboot to complete"},"content":{"rendered":"<h2>The Objective<\/h2>\n<p>The purpose of this post is to explain with an example of how ansible initiate the reboot and wait for the reboot to complete<\/p>\n<p>There are cases where we want our remote nodes to be rebooted or restarted. For example, Take the Patching as an example. As part of quarterly patching, we upgrade the installed software and packages and do various other stuff along with a final reboot to make the changes effective.<\/p>\n<p>When we reboot the server(box). you might get your ansible play failed with the error\u00a0<strong>\u201cShared connection closed\u201d<\/strong><\/p>\n<p>But this can be avoided and you can reboot the box and wait for the server to come back up and execute the post-reboot\u00a0validations or checks.<\/p>\n<p>&nbsp;<\/p>\n<h2>How to<span style=\"color: #e80c51;\"> reboot and wait for<\/span> it to complete with ansible<\/h2>\n<p>There are many methods to accomplish this<\/p>\n<blockquote><p><strong>For Ansible 2.7 and more<\/strong>\u00a0\u2013 There is a dedicated\u00a0<strong>reboot<\/strong>\u00a0module<br \/>\n<strong>For previous versions<\/strong>\u00a0\u2013\u00a0 Either use\u00a0<strong>wait_for<\/strong>\u00a0or\u00a0<strong>wait_for_connection<\/strong><\/p><\/blockquote>\n<p>Since the reboot module of Ansible 2.7 is very simple and efficient and also considering that most people is still behind ansible 2.7. In this post,\u00a0 we are going to see <strong>wait_for<\/strong> and <strong>wait_for_connection<\/strong> modules of ansible to get our task accomplished<\/p>\n<p>Consider the following playbook I have created for linux patching. It performs\u00a0<code>yum update<\/code>\u00a0and\u00a0<code>reboot<\/code>\u00a0the box and print the\u00a0<code>uptime<\/code><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>The Ansible Playbook with <span style=\"color: #e80c51;\">wait_for<\/span> module<\/h2>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Patch the server and Reboot\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> app\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Patch the server\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        tags:<\/span> Patch\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"yum -y update\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        register:<\/span> patchresult\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Reboot the server\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        tags:<\/span> reboot\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"sleep 5 &amp;&amp; reboot\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        async:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        poll:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>\r\n    \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Wait for the reboot and reconnect \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        wait_for:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          port:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">22<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          host:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'<span class=\"hljs-template-variable\" style=\"color: #a5c261;\">{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}<\/span>'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          search_regex:<\/span> OpenSSH\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          delay:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">10<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          timeout:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">60<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        connection:<\/span> local\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Check the Uptime of the servers\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"uptime\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        register:<\/span> Uptime\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - debug:<\/span> var=Uptime<\/pre>\n<h3><\/h3>\n<h3>Explanation<\/h3>\n<p>In the preceding playbook, we have four tasks.<\/p>\n<p><span style=\"color: #d10d75;\">The first task<\/span>\u00a0is running a single command\u00a0\u201c<strong>yum -y update<\/strong>\u201d\u00a0over the shell module, which is responsible for updating the packages and software in the boxes.<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #d10d75;\">The Second task<\/span>\u00a0is to reboot the server. we execute the <strong>reboot<\/strong>\u00a0command over shell module. The task contains two important arguments which are\u00a0<em>async<\/em>\u00a0and\u00a0<em>poll<\/em><\/p>\n<p>If you try to take the sleep command away from the shell module and just keep<em> the reboot <\/em>command. The Playbook will get terminated with the connection closed exception.<\/p>\n<p>The <code>Sleep<\/code> command\u00a0 followed by <code>reboot<\/code> on success using <code>&amp;&amp;<\/code>\u00a0 symbols are strategically placed to give ansible a little time to get it all together.\u00a0 If you simply execute reboot or shutdown -now commands the ansible connection will be dropped.<\/p>\n<p>So some Sleep is always good.<\/p>\n<p>That&#8217;s also the reason we cannot use command module Over shell, cause the command module does not support <code>logical and - &amp;&amp;<\/code><\/p>\n<p><strong>async:\u00a0\u00a0<\/strong>By default, the tasks in playbook block the execution till it gets completed.\u00a0 If you mention async in the task. It will be run asynchronously, in other words, it runs detached and in the background.\u00a0 ansible master keeps track of this task by using the\u00a0<em>poll\u00a0<\/em>interval.\u00a0\u00a0<em>it accepts the time in seconds it should keep the connection open before times out<\/em><\/p>\n<p><strong>poll:\u00a0<\/strong>Time in seconds, at what interval the ansible master should poll the Job\/task to know whether it is completed.<\/p>\n<blockquote><p>when the poll is set to 0 seconds, Ansible will\u00a0<strong>fire the task and forget it.\u00a0<\/strong>which is used specifically in here so that despite the remote servers shutdown the playbook will still be on<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #d10d75;\">The Third task<\/span>\u00a0is\u00a0wait_for. which is our primary focus so let me explain all the arguments of this task<\/p>\n<p><strong>port:\u00a0\u00a0<\/strong>we are waiting for the port 22 (SSH Default port) to be open<br \/>\n<strong>host:\u00a0\u00a0<\/strong>we are using the ansible built-in variables here\u00a0<code>inventory_hostname<\/code>\u00a0or\u00a0<code>ansible_host<\/code>\u00a0which will represent the current host from of the\u00a0host group defined in the playbook (app)<br \/>\n<strong>search_regex:\u00a0\u00a0<\/strong>we are looking for a word\u00a0<code>OpenSSH<\/code>\u00a0once the Port is open.<br \/>\n<strong>delay:<\/strong>\u00a0Delay in seconds before starting the validation<br \/>\n<strong>timeout:<\/strong>\u00a0timeout the execution after defined seconds.<br \/>\n<strong>connection:\u00a0<\/strong>\u00a0Execute the connection from local (master)<\/p>\n<p>When the connection is set to local. The Master will try to connect to the remote boxes from the master. It is more like executing\u00a0\u00a0<code>nc<\/code>\u00a0or\u00a0<code>telnet<\/code>\u00a0command to make sure the port is open<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>The Ansible playbook with <span style=\"color: #e80c51;\">Wait_for_connection<\/span> module<\/h2>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Patch the server and Reboot\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> app\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    gather_facts:<\/span> <span class=\"hljs-literal\">no<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Patch the server\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        tags:<\/span> Patch\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"yum -y update\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        register:<\/span> patchresult\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Reboot the server\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        tags:<\/span> reboot\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"sleep 5 &amp;&amp; reboot\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        async:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        poll:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>\r\n    \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Wait for the reboot to complete if there was a change.\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        wait_for_connection:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          connect_timeout:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">10<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          sleep:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          delay:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">5<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">          timeout:<\/span> <span class=\"hljs-number\" style=\"color: #a5c261;\">300<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> Check the Uptime of the servers\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        shell:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"uptime\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        register:<\/span> Uptime\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - debug:<\/span> var=Uptime\r\n\r\n<\/pre>\n<p>&nbsp;<\/p>\n<h3>Explanation<\/h3>\n<p class=\"p1\"><b>connect_timeout<\/b>\u00a0:\u00a0<b><\/b>Maximum number of seconds to wait for a connection to happen before closing and retrying.<\/p>\n<p class=\"p1\"><b>delay<\/b>\u00a0:\u00a0<b><\/b>Number of seconds to wait before starting to poll.<\/p>\n<p class=\"p1\"><b>sleep :\u00a0<\/b>Number of seconds to sleep between checks.<\/p>\n<p class=\"p1\"><b>timeout<\/b>\u00a0:\u00a0<b><\/b>Maximum number of seconds to wait for.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h2>The Execution Results<\/h2>\n<p><script id=\"asciicast-4B3dwU5jWNUhbS9RkCHmMJ0F2\" src=\"https:\/\/asciinema.org\/a\/4B3dwU5jWNUhbS9RkCHmMJ0F2.js\" async><\/script><\/p>\n<p>&nbsp;<\/p>\n<p>Since, Ansible 2.7. You can just do the reboot effortlessly and wait for the server to come back up using reboot module.<\/p>\n<p>&nbsp;<\/p>\n<p>Hope it helps.<\/p>\n<p>Thanks,<\/p>\n<p>Rumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578172\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"2615\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578172\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578172\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>The Objective The purpose of this post is to explain with an example of how ansible initiate the reboot and wait for the reboot to complete There are cases where we want our remote nodes to be rebooted or restarted. For example, Take the Patching as an example. As part[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":2623,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible Reboot system and wait_for reboot to complete | Devops Junction<\/title>\n<meta name=\"description\" content=\"ansible wait_for reboot to complete and proceed. ansible provides wait_for module with async connection you can reboot the remote server and wait while it is being rebooted without closing the connection. ansible wait_for reboot to be completed, before proceeding. this is very helpful for any task require the reboot.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible Reboot system and wait_for reboot to complete | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"ansible wait_for reboot to complete and proceed. ansible provides wait_for module with async connection you can reboot the remote server and wait while it is being rebooted without closing the connection. ansible wait_for reboot to be completed, before proceeding. this is very helpful for any task require the reboot.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-01-01T22:00:27+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-19T06:02:04+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/01\/Screen-Shot-2019-01-02-at-3.29.36-AM.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1097\" \/>\n\t<meta property=\"og:image:height\" content=\"605\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/01\/Screen-Shot-2019-01-02-at-3.29.36-AM.png\",\"width\":1097,\"height\":605,\"caption\":\"ansible wait for reboot\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/\",\"name\":\"Ansible Reboot system and wait_for reboot to complete | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#primaryimage\"},\"datePublished\":\"2019-01-01T22:00:27+00:00\",\"dateModified\":\"2022-06-19T06:02:04+00:00\",\"description\":\"ansible wait_for reboot to complete and proceed. ansible provides wait_for module with async connection you can reboot the remote server and wait while it is being rebooted without closing the connection. ansible wait_for reboot to be completed, before proceeding. this is very helpful for any task require the reboot.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible Reboot system and wait_for reboot to complete\",\"datePublished\":\"2019-01-01T22:00:27+00:00\",\"dateModified\":\"2022-06-19T06:02:04+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible_wait_for_reboot_to_complete\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2615"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=2615"}],"version-history":[{"count":18,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2615\/revisions"}],"predecessor-version":[{"id":5799,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2615\/revisions\/5799"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/2623"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=2615"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=2615"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=2615"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}