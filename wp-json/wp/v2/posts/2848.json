{"id":2848,"date":"2019-02-07T17:29:15","date_gmt":"2019-02-07T11:59:15","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=2848"},"modified":"2022-02-11T01:14:38","modified_gmt":"2022-02-10T19:44:38","slug":"ansible-replace-line-in-file-ansible-replace-examples","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/","title":{"rendered":"Ansible replace line in file &#8211; Ansible Replace Examples | Devops Junction"},"content":{"rendered":"<p>This article is about &#8220;how to replace a line in file using ansible and seeing various other examples of ansible replace module&#8221;.\u00a0 Ansible facilitates us with a dedicated module named as <strong>replace<\/strong>\u00a0The working principle of this module is more like find and replace\u00a0in your favourite editor and it also supports regular expressions.<\/p>\n<p>There is one major difference between Ansible replace and Line in file.<\/p>\n<p>The <strong>Ansible REPLACE<\/strong> module will replace all the instances of a matching string in a file, while<strong> Line in file<\/strong> module replaces a single instance,<\/p>\n<p>If you are looking for changing a single instance of your match string consider using lineinfile module. Refer this\u00a0 <a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-lineinfile-examples\/\">Ansible Lineinfile examples<\/a> for more information<\/p>\n<p>Shortly put, Ansible REPLACE is to globally replace all the matching lines in a file with the String you have provided, on other hand LINEINFILE is to replace a matching string in a Single line Mostly First or Last appearance<\/p>\n<p>In this post, we are going to see various examples of ansible\u00a0replace module framed as playbooks and we have also given the execution outputs of the same.<\/p>\n<p>&nbsp;<\/p>\n<h2>Ansible Replace module &#8211; A Quick Summary<\/h2>\n<p><strong>Ansible Replace module<\/strong><\/p>\n<ul>\n<li>Used to replace <strong>ALL instances<\/strong> of a matching String in a file ( Can be used to modify a Single Instance if you are sure that the destination file have only one matching string)<\/li>\n<li>More like <strong>Find All and Replace All<\/strong><\/li>\n<li>Backup Option is available Before modifying the file<\/li>\n<li>Support Regular Expressions to Find a String<\/li>\n<li>Supports replacing before and after a Matching String\/line<\/li>\n<li>Supports\u00a0Replacing between two matching Strings or lines or two expressions using <strong>before and after at the same time.<\/strong><\/li>\n<li>Back References (Backrefs) are supported<\/li>\n<li><strong>Fail if the file is not available\u00a0<\/strong><\/li>\n<li>Support for Validating the changes<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h2>Ansible replace in Action<\/h2>\n<p>In this chapter, we are going to take a quick overview of replace module and how it works and how it can be used for your requirements, it can be considered as more of an elevator pitch. In this we will cover the basic but indispensable key elements of ansible\u00a0replace module<\/p>\n<p>You can find more examples of ansible replace in the next chapter.<\/p>\n<p>For now. Lets march on.<\/p>\n<h3><\/h3>\n<h3>A quick introduction to Regular Expressions and Why it is necessary<\/h3>\n<p>If you are any of Dev or Ops person. I bet you might have come across these term called Regular expressions.<\/p>\n<p>as per Wikipedia Regular Expression is<\/p>\n<blockquote><p>A\u00a0<b>regular expression<\/b>,\u00a0<b>regex<\/b>\u00a0or\u00a0<b>regexp\u00a0<\/b><sup id=\"cite_ref-1\" class=\"reference\"><\/sup>(sometimes called a\u00a0<b>rational expression<\/b>)\u00a0<sup id=\"cite_ref-Mitkov2003_2-0\" class=\"reference\"><\/sup><sup id=\"cite_ref-Lawson2003_3-0\" class=\"reference\"><\/sup>is a sequence of\u00a0<a title=\"Character (computing)\" href=\"https:\/\/en.wikipedia.org\/wiki\/Character_(computing)\">characters<\/a>\u00a0that define a\u00a0<i>search\u00a0<a title=\"Pattern matching\" href=\"https:\/\/en.wikipedia.org\/wiki\/Pattern_matching\">pattern<\/a><\/i>. Usually this pattern is used by\u00a0<a class=\"mw-redirect\" title=\"String searching algorithm\" href=\"https:\/\/en.wikipedia.org\/wiki\/String_searching_algorithm\">string searching algorithms<\/a>\u00a0for &#8220;find&#8221; or &#8220;find and replace&#8221; operations on\u00a0<a title=\"String (computer science)\" href=\"https:\/\/en.wikipedia.org\/wiki\/String_(computer_science)\">strings<\/a>, or for input validation. It is a technique that developed in\u00a0<a title=\"Theoretical computer science\" href=\"https:\/\/en.wikipedia.org\/wiki\/Theoretical_computer_science\">theoretical computer science<\/a>\u00a0and\u00a0<a title=\"Formal language\" href=\"https:\/\/en.wikipedia.org\/wiki\/Formal_language\">formal language<\/a>\u00a0theory.<\/p><\/blockquote>\n<p>Whenever you want to Search something programmatically, There is 90% of chances that you might need a Simple to Complex regular expressions.<\/p>\n<p>Some of the Simple Regular Expressions and their purposes are given below.<\/p>\n<details>\n<summary>click to expand<\/summary>\n<table style=\"border-collapse: collapse; width: 100%;\" border=\"1\">\n<tbody>\n<tr>\n<td style=\"width: 33.3333%;\"><strong>Regular Expression<\/strong><\/td>\n<td style=\"width: 33.3333%;\"><strong>Test String<\/strong><\/td>\n<td style=\"width: 8.0522%;\"><strong>Match\/No Match<\/strong><\/td>\n<td style=\"width: 30.0639%;\"><strong>Explanation<\/strong><\/td>\n<\/tr>\n<tr>\n<td style=\"width: 33.3333%;\">^ServerName<\/td>\n<td style=\"width: 33.3333%;\">ServerName www.example.com<\/td>\n<td style=\"width: 8.0522%;\">Match<\/td>\n<td style=\"width: 30.0639%;\"><strong>^\u00a0<\/strong>represents the start of a line and <strong>ServerName\u00a0<\/strong>is a literal String to search<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 33.3333%;\">^ServerName$<\/td>\n<td style=\"width: 33.3333%;\">ServerName www.example.com<\/td>\n<td style=\"width: 8.0522%;\">No Match<\/td>\n<td style=\"width: 30.0639%;\">Here <strong>$\u00a0<\/strong>represents end of a line. As per the regex, the line should immediately end of a String <strong>ServerName\u00a0<\/strong>which is not true in Test String.<\/td>\n<\/tr>\n<tr>\n<td style=\"width: 33.3333%;\">^ServerName.*<\/td>\n<td style=\"width: 33.3333%;\">ServerName www.example.com<\/td>\n<td style=\"width: 8.0522%;\">Match<\/td>\n<td style=\"width: 30.0639%;\">Here <strong>.*\u00a0<\/strong>is the newly added expression, The <strong>.<\/strong> (period\/dot) matches any character\/number and\u00a0<strong>*\u00a0<\/strong>matches Zero or more of the preceding expression. Means anything after ServerName ( but in the same line)<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<\/details>\n<p>The reason why we are insisting on the regular expression is. A Good Regular Expression can get you the String what you are searching for.\u00a0 It is a must that we know HOW TO SEARCH before searching for something, It is true if we are searching for\u00a0 A word or a string or a line or something in life \ud83d\ude42<\/p>\n<p>Regular Expression is the tool when ansible replace is your workshop.<\/p>\n<p>Now the question is where will go and learn and test regular expressions. Is there any better way than wandering around and failing multiple times to get a perfect regex expression.<\/p>\n<p>yes, there is.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3>Write and Test your Regular Expressions on the Go<\/h3>\n<p>Meet <a href=\"https:\/\/regex101.com\/\">REGEX 101 <\/a>A website to write and test a regular expression like a PRO but at free of cost<\/p>\n<p>Regex 101 have been my life saviour for years now. If you are not already aware, go ahead and try it now. You would blame yourself for not knowing this so far.<\/p>\n<p>A Simple Screenshot that explains all.\u00a0 \u00a0You can see everything,\u00a0 what you are looking for.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-12.45.46-PM.png\"><img class=\"alignnone size-full wp-image-2862\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-12.45.46-PM.png\" alt=\"\" width=\"1440\" height=\"854\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-12.45.46-PM.png 1440w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-12.45.46-PM-300x178.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-12.45.46-PM-768x455.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-12.45.46-PM-1024x607.png 1024w\" sizes=\"(max-width: 1440px) 100vw, 1440px\" \/><\/a><\/p>\n<p>Back to the track.<\/p>\n<p>&nbsp;<\/p>\n<h3>Sample Playbook with replace module to replace a line in file<\/h3>\n<p>This is the playbook we are going to use and add more features and changes as we proceed.\u00a0 This is to change the domain name of the Apache Virtual host\u00a0from old domain to a new domain.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Replace line in file examples\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> web\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Replace line in file examples\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/etc\/httpd\/conf\/httpd.conf\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'(^ServerName\\s)(.*)$'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'\\1www.newdomain.com'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span><\/pre>\n<p>&nbsp;<\/p>\n<h3><strong>Explanation of playbook<\/strong><\/h3>\n<p><strong>path:\u00a0\u00a0<\/strong> A file name in which we are going to find and replace<\/p>\n<p><strong>regexp: <\/strong>the regular expression to search the string you want<\/p>\n<p>In our case,<\/p>\n<p><strong>()<\/strong> &#8211; Grouping of Regular Expression and to create backreferences, which will make it easy to perform backreference while replacing.<br \/>\n<strong>^<\/strong> &#8211; Matches the Start of a Line<br \/>\n<strong>ServerName<\/strong> &#8211; Matches a Literal String<br \/>\n<strong>\\s<\/strong> &#8211; Matches a whitespace<br \/>\n<strong>.*<\/strong> &#8211; matches one or more of any character\/numeral ( not new line)<br \/>\n<strong>$<\/strong> &#8211; matches the end of line<\/p>\n<p>&nbsp;<\/p>\n<p><strong>replace:\u00a0\u00a0<\/strong>A string, with which you want to replace the matched String<\/p>\n<p>In our case,<\/p>\n<p><strong>\\1<\/strong> &#8211; backreference indicator and represents the first group we have matched. in our case, it is the result of\u00a0\u00a0<span class=\"hljs-string\">(^ServerName\\s)<\/span><\/p>\n<p><strong>backup:\u00a0<\/strong> To tell ansible to backup the file before making any changes.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h3>Validating the Changes before committing<\/h3>\n<p>Replace module bundled with a cool feature with that you can actually validate the changes before committing the changes onto the file.<\/p>\n<p>Consider the same example we have given above which is changing the domain name.\u00a0 Let us see how can we validate it before making the changes in to <code>\/etc\/httpd\/conf<\/code> file.<\/p>\n<blockquote><p>If you are not aware, Ansible would not directly work with the destination file. It will clone it and keep the file in ansible_temp directory once the changes are completed it will copy the file over and replace the destination file with this working copy.<\/p><\/blockquote>\n<p>With that said, Now you know, how it is possible to validate your changes before it actually goes into your destination file.<\/p>\n<p>This is the same playbook with validate parameter added<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Replace line in file examples\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> web\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Replace line in file apache conf\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/etc\/httpd\/conf\/httpd.conf\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'(^ServerName\\s)(.*)$'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'\\1www.newdomain.com'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        validate:<\/span> apachectl -f %s -t<\/pre>\n<p>Here <strong>%s <\/strong>represents the temp or working copy of the destination file<br \/>\nLet us make some mistake intentionally to examine how this validate is working. In order to do that, I am changing a Single line from the preceding playbook<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-attr\" style=\"color: #6d9cbe;\"><span class=\"hljs-string\" style=\"color: #a5c261;\"><span style=\"color: #33cccc;\"># Final String is \"ServerName www.newdomain.com\" <\/span><\/span>\r\nreplace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'\\1www.newdomain.com' <\/span>\r\nto\r\n<span class=\"hljs-string\" style=\"color: #a5c261;\"><span style=\"color: #33cccc;\"># Final String is \"www.newdomain.com\"<\/span><\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'www.newdomain.com'  <\/span><\/pre>\n<p>In the replace field, we are taking the reference indicator out. which will remove the String <strong>ServerName <\/strong>from the config file and ansible is supposed to throw an error and the playbook will fail if the validate command is returning a NON ZERO return code.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\">$ <span style=\"color: #33cccc;\">ansible-playbook AnsibleWorkSpace\/replace-ex1.yml -i ansible_hosts<\/span>\r\n\r\nPLAY <span class=\"hljs-string\" style=\"color: #a5c261;\">[Replace line in file examples]<\/span> ********************************************************************************************************\r\n\r\nTASK <span class=\"hljs-string\" style=\"color: #a5c261;\">[Gathering Facts]<\/span> **********************************************************************************************************************\r\nok: <span class=\"hljs-string\" style=\"color: #a5c261;\">[mwiweb02]<\/span>\r\n\r\nTASK <span class=\"hljs-string\" style=\"color: #a5c261;\">[Replace line in file apache conf]<\/span> ********************************************************************************************************\r\n<span style=\"color: #ff6600;\">fatal: <span class=\"hljs-string\">[mwiweb02]<\/span>: FAILED! =&gt; {<span class=\"hljs-string\">\"changed\"<\/span>: false, <span class=\"hljs-string\">\"msg\"<\/span>: <span class=\"hljs-string\">\"failed to validate: \r\nrc:1 error:AH00526: Syntax error on line 95 of \r\n\/home\/vagrant\/.ansible\/tmp\/ansible-tmp-1549278281.07-220158736541166\/tmp6LJx9x:\\n\r\nInvalid command 'www.newdomain.com', perhaps misspelled or defined by a module not included \r\nin the server configuration\\n\"<\/span>}\r\n        to retry, use: &#8211; limit @\/apps\/vagrant\/webinfra\/AnsibleWorkSpace\/replace-ex1.retry\r\n<\/span>\r\nPLAY RECAP **********************************************************************************************************************************\r\nmwiweb02                   : ok=<span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span>    changed=<span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>    unreachable=<span class=\"hljs-number\" style=\"color: #a5c261;\">0<\/span>    failed=<span class=\"hljs-number\" style=\"color: #a5c261;\">1<\/span><\/pre>\n<p>You can see the temp file name with the validation failure note\u00a0<code><span style=\"color: #ff6600;\"><span class=\"hljs-string\">\/home\/vagrant\/.ansible\/tmp\/ansible-tmp-1549278281.07-220158736541166\/tmp6LJx9x\u00a0<\/span><\/span><\/code><\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>&nbsp;<\/p>\n<h2>Ansible Replace Examples<\/h2>\n<ol>\n<li><a title=\"Replace all the Instances of a Matching String in a file\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/?preview_id=2848&amp;preview_nonce=5fb03e483c&amp;_thumbnail_id=2876&amp;preview=true#Replace_all_the_Instances_of_a_Matching_String_in_a_file\">Replace all the Instances of a Matching String in a file<\/a><\/li>\n<li><a title=\"Replacing string AFTER the Matching Expression till the End Of File\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/?preview_id=2848&amp;preview_nonce=5fb03e483c&amp;_thumbnail_id=2876&amp;preview=true#Replacing_string_AFTER_the_Matching_Expression_till_the_End_Of_File\">Replacing string AFTER the Matching Expression till the End Of File<\/a><\/li>\n<li><a title=\"Start Replacing BEFORE the Matching Expression up to the Beginning of File\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/?preview_id=2848&amp;preview_nonce=5fb03e483c&amp;_thumbnail_id=2876&amp;preview=true#Start_Replacing_BEFORE_the_Matching_Expression_up_to_the_Beginning_of_File\">Start Replacing BEFORE the Matching Expression up to the Beginning of File<\/a><\/li>\n<li><a title=\"Replacing the String Between matching Expressions (or) Using BEFORE and AFTER together in ansible replace\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/?preview_id=2848&amp;preview_nonce=5fb03e483c&amp;_thumbnail_id=2876&amp;preview=true#Replacing_the_String_Between_matching_Expressions_or_Using_BEFORE_and_AFTER_together_in_ansible_replace\">Replacing the String Between matching Expressions (or) Using BEFORE and AFTER together in ansible replace<\/a><\/li>\n<li><a title=\"Workaround to use Ansible after and before combined\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/?preview_id=2848&amp;preview_nonce=5fb03e483c&amp;_thumbnail_id=2876&amp;preview=true#Workaround_to_use_Ansible_after_and_before_combined\">Workaround to use Ansible after and before combined<\/a><\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #003366;\"><strong><span style=\"font-size: 14pt;\">Setting the Context<\/span><\/strong><\/span><\/p>\n<p>Before going to the examples,\u00a0 we need some common file which we can use for all the upcoming examples. So I\u00a0 have taken the famous FOX and GRAPE story and placed it as a web page in default doc root<code>\/var\/www\/html<\/code> of apache web server.<\/p>\n<p>Now here is how it looks like at the browser<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-5.15.39-PM.png\"><img class=\"alignnone size-full wp-image-2864\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-5.15.39-PM.png\" alt=\"\" width=\"1439\" height=\"367\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-5.15.39-PM.png 1439w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-5.15.39-PM-300x77.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-5.15.39-PM-768x196.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-04-at-5.15.39-PM-1024x261.png 1024w\" sizes=\"(max-width: 1439px) 100vw, 1439px\" \/><\/a><\/p>\n<details>\n<summary>The Html page &#8211; Click to expand<\/summary>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title<\/span>&gt;<\/span>TheStoryPage<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">title<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">head<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">style<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\r\n    font-family: serif;\r\n    font-size: 26px;\r\n\"<\/span>&gt;<\/span>\r\n\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2<\/span>&gt;<\/span> The Fox and Grape Story <span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">h2<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span> <span class=\"hljs-attr\" style=\"color: #6d9cbe;\">style<\/span>=<span class=\"hljs-string\" style=\"color: #a5c261;\">\"\r\n    text-indent: 60px;\r\n    letter-spacing: 1.5px;\r\n    font-size: 26px;\r\n\"<\/span>&gt;<\/span>\r\n\r\nA fox was once very hungry and went in search of some food. He searched everywhere, but he couldn\u2019t find anything that he could eat. Finally, with his stomach rumbling, he came upon a farmer\u2019s wall. On top of the wall were the biggest, juiciest grapes the fox had ever seen. The rich purple color told the fox that they were ready to be eaten. The fox jumped high in the air to catch the grapes in his mouth, but he missed. He tried again and missed again. He tried a few more times but missed each time. Finally, the fox decided to go home all the while muttering, \u2018I\u2019m sure the grapes were sour anyway\u2019.\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">p<\/span>&gt;<\/span>\r\n\r\n\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">body<\/span>&gt;<\/span>\r\n<span class=\"hljs-tag\" style=\"color: #e8bf6a;\">&lt;\/<span class=\"hljs-name\" style=\"color: #e8bf6a;\">html<\/span>&gt;<\/span><\/pre>\n<\/details>\n<p>As we have set the plot lets begin the play.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3><\/h3>\n<h3>Replace all the Instances of a Matching String in a file<\/h3>\n<p>we are going to take the same FOX and GRAPE Story html page for this example and let us replace all the instances of the word &#8220;<strong>fox<\/strong>&#8221; with &#8220;<strong>raccoon<\/strong>&#8221;<\/p>\n<p>Come, let us create a new Story. The Racoon and Grape !.<\/p>\n<p>Let us see how to do the same with ansible replace module.\u00a0 If you are following along, you know that I am using the\u00a0apache web server and the story is inside the html page at <code>\/var\/www\/html\/index.html<\/code><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #003366;\"><strong><span style=\"font-size: 14pt;\">The Playbook<\/span><\/strong><\/span><\/p>\n<p>In the following playbook, we have used the <strong>Handlers\u00a0<\/strong>to restart the apache upon the replace task completion. It is more like a function.<\/p>\n<p>You can relate it like this, When Handlers is a function definition, notify is a function invocation or function call.<\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Replace line in file examples\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> web\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    handlers:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> restart apache\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        service:<\/span> name=httpd state=restarted\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Replace line in file examples\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/var\/www\/html\/index.html\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'[F|f]ox'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'racoon'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      notify:<\/span> restart apache<\/pre>\n<p>In the regexp section, we have used <strong><code>[F|f]ox<\/code><\/strong>\u00a0which is to match both <strong>Fox<\/strong> and the <strong>fox<\/strong>. The usual case sensitive stuff.<\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #003366;\"><strong><span style=\"font-size: 14pt;\">The Execution Output<\/span><\/strong><\/span><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.41.16-PM.png\"><img class=\"alignnone size-full wp-image-2867\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.41.16-PM.png\" alt=\"\" width=\"1163\" height=\"277\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.41.16-PM.png 1163w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.41.16-PM-300x71.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.41.16-PM-768x183.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.41.16-PM-1024x244.png 1024w\" sizes=\"(max-width: 1163px) 100vw, 1163px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"color: #003366;\"><strong><span style=\"font-size: 14pt;\">The HTML Page result after the Replacements<\/span><\/strong><\/span><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.28.58-PM.png\"><img class=\"alignnone size-full wp-image-2868\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.28.58-PM.png\" alt=\"\" width=\"1440\" height=\"359\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.28.58-PM.png 1440w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.28.58-PM-300x75.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.28.58-PM-768x191.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-1.28.58-PM-1024x255.png 1024w\" sizes=\"(max-width: 1440px) 100vw, 1440px\" \/><\/a><\/p>\n<p>From the preceding Snapshot of the web page. you can understand how the ansible replace module is working. It finds all and replaces them all, as simple as that.<\/p>\n<p>Before proceeding to the next example. Let me roll back my changes and make the racoon story as a Fox Story. A Quick Reset. I can do it either with replacing module as well (racoon to fox) or in the host, I can take the backed up file and copy it over the current.<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<h3><\/h3>\n<h3><span style=\"font-size: 14pt;\">Replacing string <span style=\"color: #ff0000;\">AFTER<\/span> the Matching Expression till the End Of File<\/span><\/h3>\n<p>We need a new plan or a requirement, As this is a little tricky but the most usual requirement.<\/p>\n<p>We are going to rewrite the story once again and going to name the fox as <strong>fofo<\/strong>.\u00a0 The following Snapshot could help you understand the same, I hope.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-2.14.15-PM.png\"><img class=\"alignnone size-full wp-image-2869\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-2.14.15-PM.png\" alt=\"\" width=\"1416\" height=\"812\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-2.14.15-PM.png 1416w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-2.14.15-PM-300x172.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-2.14.15-PM-768x440.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-2.14.15-PM-1024x587.png 1024w\" sizes=\"(max-width: 1416px) 100vw, 1416px\" \/><\/a><\/p>\n<p>As you can see we are going to do two things to get the expected story at the bottom<\/p>\n<ol>\n<li>\u00a0Adding a new Hero introduction lines at the start of story (Highlighted in Blue background)<\/li>\n<li>Replace all the presence of <strong>fox<\/strong> with <strong>fofo<\/strong><\/li>\n<li>While doing this, we have to leave the title untouched. It should remain having a fox not fofo.<\/li>\n<li>Should replace <strong>&#8220;The<\/strong> <strong>fofo<\/strong>&#8221; with &#8220;<strong>fofo<\/strong>&#8221; so it sounds grammatically correct.<\/li>\n<\/ol>\n<p>Complex,\u00a0 is not it? Not if we split it into small tasks, after all thats what ansible suggests us to do.<\/p>\n<p><span style=\"font-size: 14pt;\">Here is the Playbook to accomplish the same<\/span><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Replace line in file examples\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> web\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    handlers:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> restart apache\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        service:<\/span> name=httpd state=restarted\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Replacing all fox with fofo - Leaving the title untouched\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/var\/www\/html\/index.html\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'fox'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'fofo'<\/span>\r\n<span style=\"color: #ffff00;\"><span class=\"hljs-attr\">        after:<\/span> <span class=\"hljs-string\">\"The fox and Grape Story\"<\/span><\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span> \r\n    \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Naming our Hero and introduction line\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/var\/www\/html\/index.html\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'A fofo was once'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'Once upon a time, There was a fox living in a forest named \"fofo\". One day fofo was'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span>    \r\n    \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Grammatical correction - The fofo to fofo\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/var\/www\/html\/index.html\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'[T|t]he fofo'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'fofo'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span>    \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      notify:<\/span> restart apache<\/pre>\n<p>In the preceding playbook, You can see we have left the title unchanged with the help of <strong>after<\/strong> parameter in the replace module ( highlighted in yellow font colour)<\/p>\n<p>One more reset back to the Normal Fox and Grape Story before the further example.<\/p>\n<h3><\/h3>\n<h3><span style=\"font-size: 14pt;\">Start Replacing <span style=\"color: #000000;\">BEFORE<\/span> the Matching Expression up to the Beginning of File<\/span><\/h3>\n<p>For this example also we need a new requirement and here is what I have come up with.<\/p>\n<p>We are going to change the Headline of the Story and add some color formatting to it. The following diagram would help you understand our requirement<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-5.26.25-PM.png\"><img class=\"alignnone size-full wp-image-2870\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-5.26.25-PM.png\" alt=\"\" width=\"1424\" height=\"817\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-5.26.25-PM.png 1424w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-5.26.25-PM-300x172.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-5.26.25-PM-768x441.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-5.26.25-PM-1024x588.png 1024w\" sizes=\"(max-width: 1424px) 100vw, 1424px\" \/><\/a><\/p>\n<p>We are basically going to replace the <code>&lt;h2&gt;<\/code> tag and add some <code>&lt;span&gt;<\/code> elements to it to change the color of the words Fox and Grape<\/p>\n<p>But our Search String remains just the word <strong>Fox<\/strong> and <strong>Grape<\/strong><\/p>\n<p>Here is the playbook to accomplish the same and we are going to use <strong>before<\/strong> in this example ( Just to change the color of the words Fox and Grape only in the headline, Not in the Story)<\/p>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"font-size: 14pt;\">The Playbook<\/span><\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Replace line in file examples\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> web\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    handlers:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> restart apache\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        service:<\/span> name=httpd state=restarted\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Replacing the Fox with Formatting only in headline before closing of H2\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/var\/www\/html\/index.html\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'[F|f]ox'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'&lt;span style=\"color:crimson\"&gt;Fox&lt;\/span&gt;'<\/span>\r\n<span style=\"color: #ffff00;\"><span class=\"hljs-attr\">        before:<\/span> <span class=\"hljs-string\">\"&lt;\/h2&gt;\"<\/span><\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Replacing the Grape with Formatting only in headline before closing of H2\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/var\/www\/html\/index.html\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'[G|g]rape'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'&lt;span style=\"color:purple\"&gt; Grape &lt;\/span&gt;'<\/span>\r\n<span style=\"color: #ffff00;\"><span class=\"hljs-attr\">        before:<\/span> <span class=\"hljs-string\">\"&lt;\/h2&gt;\"<\/span><\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span>   \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      notify:<\/span> restart apache<\/pre>\n<p>You can see the before parameter is having the closing element of the H2 tag. In this way we are Restricting the change to happen only in the headline.<\/p>\n<p>Anyways for our next example, we are going to need all of the Fox and Grape be replaced with the color formatting.<\/p>\n<p>To do this, You just have to remove the before parameter from the Playbook. It will replace all the instance across the HTML page. I will let you do it, so you will get some exposure. Your end result should be like the following.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-6.00.46-PM.png\"><img class=\"alignnone size-full wp-image-2871\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-6.00.46-PM.png\" alt=\"\" width=\"1417\" height=\"293\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-6.00.46-PM.png 1417w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-6.00.46-PM-300x62.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-6.00.46-PM-768x159.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-06-at-6.00.46-PM-1024x212.png 1024w\" sizes=\"(max-width: 1417px) 100vw, 1417px\" \/><\/a><\/p>\n<p>In the preceding Snapshot, you can see all the instances of the word Fox and Grape has been replaced with Color formatting<\/p>\n<p>&nbsp;<\/p>\n<h3>Replacing the String Between matching Expressions (or) Using <span style=\"color: #000000;\">BEFORE<\/span> and <span style=\"color: #000000;\">AFTER<\/span> together in ansible replace<\/h3>\n<p>As the title of this example states, we are going to use Before and After Together in the same replace task to achieve replacing between two matching expressions.<\/p>\n<p>Let us set some requirement first, The Requirement for this example is to <strong>underline the word Fox<\/strong> only in the Story but not in the Headline.<\/p>\n<p>So we are going to set the opening of <code>&lt;p&gt;<\/code> tag as our start line(<strong>after<\/strong>) and the closing tag of <code>&lt;\/p&gt;<\/code><strong>(before)<\/strong> as our end line<\/p>\n<p>The preceding illustration could help you understand it even better<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM.png\"><img class=\"alignnone size-full wp-image-2872\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM.png\" alt=\"\" width=\"1437\" height=\"715\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM.png 1437w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM-300x149.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM-768x382.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM-1024x510.png 1024w\" sizes=\"(max-width: 1437px) 100vw, 1437px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p><strong><span style=\"font-size: 14pt;\">The Playbook<\/span><\/strong><\/p>\n<pre class=\"hljs\" style=\"display: block; overflow-x: auto; padding: 0.5em; background: #232323; color: #e6e1dc;\"><span class=\"hljs-meta\" style=\"color: #9b859d;\">---<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">  - name:<\/span> Replace line in file examples\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    hosts:<\/span> web\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    handlers:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      - name:<\/span> restart apache\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        service:<\/span> name=httpd state=restarted\r\n\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    tasks:<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">    - name:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">\"Replacing the Fox in the Story with Underline formatting\"<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become:<\/span> <span class=\"hljs-literal\">yes<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      become_user:<\/span> root\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      replace:<\/span> \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        path:<\/span> \/var\/www\/html\/index.html\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        regexp:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'[F|f]ox'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        replace:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'&lt;u&gt;Fox&lt;\/u&gt;'<\/span>\r\n        <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Matches the Start of P tag<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        after:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'&lt;p\\s[.|\\w|=|\\\"|\\r|\\n|\\s|\\-|:|;]*&gt;'<\/span>\r\n        <span class=\"hljs-comment\" style=\"color: #bc9458; font-style: italic;\"># Matches the End of P tag<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        before:<\/span> <span class=\"hljs-string\" style=\"color: #a5c261;\">'&lt;\/p&gt;'<\/span>\r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">        backup:<\/span> <span class=\"hljs-literal\">yes<\/span>  \r\n<span class=\"hljs-attr\" style=\"color: #6d9cbe;\">      notify:<\/span> restart apache<\/pre>\n<p>&nbsp;<\/p>\n<p>Hope you would find this article helpful.\u00a0 Feel free to contact me for help and support over the comments section.<\/p>\n<p>Rate this article [ratings]<\/p>\n<p>Cheers,<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670578219\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"2848\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670578219\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670578219\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>This article is about &#8220;how to replace a line in file using ansible and seeing various other examples of ansible replace module&#8221;.\u00a0 Ansible facilitates us with a dedicated module named as replace\u00a0The working principle of this module is more like find and replace\u00a0in your favourite editor and it also supports[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":2876,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[186,185,190,189,187,188],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible replace line in file - Ansible Replace Examples | Devops Junction<\/title>\n<meta name=\"description\" content=\"This article is about &quot;how to replace a line in file using ansible and seeing various other examples of ansible replace module&quot;.\u00a0 Ansible facilitates us with a dedicated module named as replace\u00a0The working principle of this module is more like find and replace\u00a0in your favourite editor and it also supports regular expres\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible replace line in file - Ansible Replace Examples | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"This article is about &quot;how to replace a line in file using ansible and seeing various other examples of ansible replace module&quot;.\u00a0 Ansible facilitates us with a dedicated module named as replace\u00a0The working principle of this module is more like find and replace\u00a0in your favourite editor and it also supports regular expres\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2019-02-07T11:59:15+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-02-10T19:44:38+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM-1.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1437\" \/>\n\t<meta property=\"og:image:height\" content=\"715\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/02\/Screen-Shot-2019-02-07-at-3.21.33-PM-1.png\",\"width\":1437,\"height\":715,\"caption\":\"Ansible replace examples\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/\",\"name\":\"Ansible replace line in file - Ansible Replace Examples | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#primaryimage\"},\"datePublished\":\"2019-02-07T11:59:15+00:00\",\"dateModified\":\"2022-02-10T19:44:38+00:00\",\"description\":\"This article is about \\\"how to replace a line in file using ansible and seeing various other examples of ansible replace module\\\".\\u00a0 Ansible facilitates us with a dedicated module named as replace\\u00a0The working principle of this module is more like find and replace\\u00a0in your favourite editor and it also supports regular expres\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible replace line in file &#8211; Ansible Replace Examples | Devops Junction\",\"datePublished\":\"2019-02-07T11:59:15+00:00\",\"dateModified\":\"2022-02-10T19:44:38+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#primaryimage\"},\"keywords\":\"ansible combined before and after issue,ansible replace examples,ansible replace module between two lines,ansible replace module examples,ansible replace with after,ansible replace with before\",\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-replace-line-in-file-ansible-replace-examples\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2848"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=2848"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2848\/revisions"}],"predecessor-version":[{"id":8132,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/2848\/revisions\/8132"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/2876"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=2848"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=2848"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=2848"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}