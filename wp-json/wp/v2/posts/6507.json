{"id":6507,"date":"2022-11-20T14:35:23","date_gmt":"2022-11-20T09:05:23","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=6507"},"modified":"2022-11-21T00:44:08","modified_gmt":"2022-11-20T19:14:08","slug":"ansible-uri-examples","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/","title":{"rendered":"Ansible URI module Examples &#8211; How to use Ansible URI | Devops Junction"},"content":{"rendered":"<p>Ansible has become a widely accepted automation platform not just for Infrastructure Automation but for various other use cases<\/p>\n<p>Some of them are Web and API automation, Monitoring Automation, Cloud Automation and Infrastructure as a code like Terraform<\/p>\n<p>In this article, we are going to see how to use Ansible for Web and API automation.<\/p>\n<p>Ansible has two powerful modules for WebService and API automation. they are<\/p>\n<ul>\n<li><span style=\"color: #165ca1;\"><strong>get_url \/ win_get_url <\/strong><\/span>&#8211; to download files from HTTP\/HTTPS and FTP sites<\/li>\n<li><span style=\"color: #000000;\"><span style=\"color: #165ca1;\"><strong>uri \/ win_uri<\/strong><\/span>\u00a0<\/span>&#8211; to interact with web service ( we are going to discuss in this article)<\/li>\n<\/ul>\n<p>While the<strong> get_url<\/strong> module is simply to interact with web and FTP sites and download files.<\/p>\n<p>The URI module is much more powerful to interact with API and Webservices, You can use the URI module for Complete API monitoring and Automation.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri.jpg\"><img class=\"post-img alignnone wp-image-9364 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri.jpg\" alt=\"ansible uri \" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri.jpg 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-300x213.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-1024x726.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-768x545.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-1536x1090.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-400x284.jpg 400w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-1080x766.jpg 1080w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-90x65.jpg 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<h2>Ansible URI module Quick Examples<\/h2>\n<p>Ansible URI module can be used for simple use cases like checking the status of the web pages and validating the status code as well as complex use cases such as API automation with different HTTP methods and payloads.<\/p>\n<p>Before we start to go deep into the URI module, Let me give two quick examples of Ansible URI to show you what is ansible URI module capable of.<\/p>\n<p><strong>Ansible URI used for Simple Status code check<\/strong><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Playbook for Web automation \r\n  hosts: localhost\r\n  tasks:\r\n  - name: Check if devopsjunction.com is available and returning status 200\r\n    uri:\r\n      url: https:\/\/devopsjunction.com\r\n    register: result<\/pre>\n<p>&nbsp;<\/p>\n<p><strong>Ansible URI module used for API or WebService testing<\/strong><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Playbook for Web automation \r\n  hosts: localhost\r\n  tasks:\r\n  - name: Ansible URI used for user registration\r\n    uri:\r\n      url: https:\/\/reqres.in\/api\/users\r\n      method: POST\r\n      body: |-\r\n        {\r\n          \"name\": \"Sarav\",\r\n          \"job\": \"leader\"\r\n        }\r\n      return_content: yes\r\n      status_code: 201<\/pre>\n<p>&nbsp;<\/p>\n<p>Both these playbooks can be tested from your end as we have used publically available URLs\/ Webservices.<\/p>\n<p>We will decode these playbooks in detail shortly.<\/p>\n<h2><\/h2>\n<h2>Ansible URI parameters<\/h2>\n<p>These are the list of parameters supported by the Ansible URI module. I have compiled all the parameters of Ansible URI and their usage, in the following image<\/p>\n<p>Please go through the list, we would be using most of these parameters in our ansible URI module example playbooks shortly.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters.png\"><img class=\"post-img alignnone wp-image-9332 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters.png\" alt=\"Ansible URI examples\" width=\"1690\" height=\"1496\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters.png 1690w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters-300x266.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters-1024x906.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters-768x680.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters-1536x1360.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters-1080x956.png 1080w\" sizes=\"(max-width: 1690px) 100vw, 1690px\" \/><\/a><\/p>\n<p>Let us explore and try a few examples of this Ansible URI module.\u00a0 we will start with the ones from the previous Quick examples section.<\/p>\n<p>&nbsp;<\/p>\n<h2>Beginner to Ansible? No Problem<\/h2>\n<p>Unless you are new to Ansible, you must already be aware of the basic skeleton of the Ansible playbook.<\/p>\n<p>If you are completely new to the Ansible playbook, I would refer you to read our Beginner Articles on Ansible by following the below links<\/p>\n<ul>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-playbook-example\/\">What is Ansible playbook\u00a0<\/a><\/li>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-ad-hoc-commands\/\">What are Ansible ad hoc Commands<\/a><\/li>\n<\/ul>\n<p>We are presuming that you know the basics of the Ansible playbook, therefore we are going to decode only the tasks.<\/p>\n<p>Let us move on to the examples of the Ansible URI module.<\/p>\n<p>&nbsp;<\/p>\n<h2>Ansible URI Examples<\/h2>\n<p>Let us go through various examples and learn and understand the Ansible URI module better<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible URI module to connect and validate status code<\/h3>\n<p>This was our first playbook from the Quick example section, it is to connect to URL and to validate if it is alive by validating the returning status code 200<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Playbook for Web automation \r\n  hosts: localhost\r\n  tasks:\r\n  - name: Check if devopsjunction.com is available and returning status 200\r\n    uri:\r\n      url: https:\/\/devopsjunction.com\r\n    register: result<\/pre>\n<p>we have one task in the playbook, with a URI module.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">- name: Check if devopsjunction.com is available and returning status 200\r\n    uri:\r\n      url: https:\/\/devopsjunction.com\r\n    register: result<\/pre>\n<p>In this task, we are connecting to the remote URL <code>https:\/\/devopsjunction.com<\/code> and validating whether it&#8217;s alive and responding with HTTP status code 200<\/p>\n<p>If you look at the playbook, nowhere we are defining the status code to look for.<\/p>\n<blockquote><p>If <code>status_code<\/code> directive is not specified.<\/p>\n<p>Ansible, by default, would consider status code 200 as a success, anything else would fail the playbook<\/p><\/blockquote>\n<p>In cases, where the remote URL is supposed to return a NON 200 status code, like <code>301<\/code> or <code>302<\/code> we must explicitly define what is the expected status code with the <code>status_code<\/code>\u00a0 parameter<\/p>\n<p>Here is the execution output of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM.png\"><img class=\"post-img alignnone wp-image-9335 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM.png\" alt=\"ansible uri\" width=\"3000\" height=\"1396\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM.png 3000w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-300x140.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-1024x477.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-768x357.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-1536x715.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-2048x953.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-1080x503.png 1080w\" sizes=\"(max-width: 3000px) 100vw, 3000px\" \/><\/a><\/p>\n<p>You can see the playbook execution is successful and passed.\u00a0 This is a simple ansible playbook to check if a website or webservice is up and running and returning a specific status code.<\/p>\n<p>Let&#8217;s suppose we want the URI module to succeed only when the remote URL is returning the status HTTP 301<\/p>\n<p>As we have already discussed, we need to explicitly specify it with the status_code parameter, as shown in the following playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible URI module examples\r\n  hosts: localhost\r\n  tasks:\r\n  - name: Check if devopsjunction.com is available and returning status 301\r\n    uri:\r\n      url: https:\/\/devopsjunction.com\r\n      status_code: 301\r\n    register: result<\/pre>\n<p>Here is the execution output of this new playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM.png\"><img class=\"post-img alignnone wp-image-9338 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM.png\" alt=\"ansible uri status code\" width=\"3668\" height=\"1736\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM.png 3668w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM-300x142.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM-1024x485.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM-768x363.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM-1536x727.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM-2048x969.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-7.07.06-PM-1080x511.png 1080w\" sizes=\"(max-width: 3668px) 100vw, 3668px\" \/><\/a><\/p>\n<p>Let us move on.<\/p>\n<p>&nbsp;<\/p>\n<h3>The Ansible URI module follow redirection<\/h3>\n<p>Our previous playbook from example 1, should have ideally failed but it got succeeded. Let me tell you why.<\/p>\n<p>If you try the <code>https:\/\/devopsjunction.com<\/code> directly through CURL, you would see it returning 301 status code<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">~|\u21d2 curl https:\/\/devopsjunction.com -I\r\nHTTP\/2 301\r\nlocation: https:\/\/middlewareinventory.com\/devops-junction\r\ncache-control: max-age=3600\r\nexpires: Sat, 12 Nov 2022 13:28:56 GMT\r\ncontent-type: text\/html; charset=iso-8859-1\r\ndate: Sat, 12 Nov 2022 12:28:56 GMT\r\nserver: Apache<\/pre>\n<p>in that case, our playbook should have not succeeded right? but it has. why?<\/p>\n<p>The reason is <code>follow_redirection<\/code> . By default, Ansible URI follows if there is a Safe redirection and consider the last hop&#8217;s status.<\/p>\n<p>In our case, despite the first hop was returning <code>301<\/code> once it has completed the redirections. the end result was <code>200<\/code> that&#8217;s what made our previous playbook succeed.<\/p>\n<p>To understand this better. You can use the <strong>follow redirection<\/strong> option available on the CURL itself. using the <code>-L<\/code> flag<\/p>\n<p>Here is the output of CURL with follow redirection for devopsjunction.com. You can see the final status code is eventually 200.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">~|\u21d2 curl -L https:\/\/devopsjunction.com -I\r\nHTTP\/2 301\r\nlocation: https:\/\/middlewareinventory.com\/devops-junction\r\ncache-control: max-age=3600\r\nexpires: Sat, 12 Nov 2022 16:55:36 GMT\r\ncontent-type: text\/html; charset=iso-8859-1\r\ndate: Sat, 12 Nov 2022 15:55:36 GMT\r\nserver: Apache\r\n\r\nHTTP\/2 301\r\ndate: Sat, 12 Nov 2022 15:55:37 GMT\r\ncontent-type: text\/html; charset=UTF-8\r\nlocation: https:\/\/www.middlewareinventory.com\/devops-junction\r\nx-redirect-by: WordPress\r\nvary: X-Forwarded-Proto,Accept-Encoding,User-Agent\r\n......\r\n......\r\n\r\nHTTP\/2 301\r\ndate: Sat, 12 Nov 2022 15:55:37 GMT\r\ncontent-type: text\/html; charset=UTF-8\r\nlocation: https:\/\/www.middlewareinventory.com\/devops-junction\/\r\nx-redirect-by: WordPress\r\nvary: X-Forwarded-Proto,Accept-Encoding,User-Agent\r\ncache-control: max-age=3600\r\n......\r\n......\r\n\r\nHTTP\/2 200\r\ndate: Sat, 12 Nov 2022 15:55:38 GMT\r\ncontent-type: text\/html; charset=UTF-8\r\nvary: Accept-Encoding,Cookie\r\nlast-modified: Thu, 10 Nov 2022 19:39:14 GMT\r\ncache-control: max-age=0, public\r\n......\r\n......\r\n<\/pre>\n<p>This is exactly what Ansible did. It followed the redirections.<\/p>\n<blockquote><p>You can control whether or not to follow the redirects with a parameter <code>follow_redirects<\/code><\/p><\/blockquote>\n<p>If you set the <strong>follow_redirects<\/strong> to <strong>none<\/strong>, Ansible URI would not follow the redirects and our playbook would fail.<\/p>\n<p>Look at the playbook and the execution output of both with and without <code>follow_redirects<\/code><\/p>\n<p><strong>Here is the execution output of the playbook without <code>follow_redirects<\/code> parameter. <\/strong><\/p>\n<p>Ansible assumes to follow the redirects by default ( this is the same playbook from previous example)<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM.png\"><img class=\"post-img alignnone wp-image-9335 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM.png\" alt=\"\" width=\"3000\" height=\"1396\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM.png 3000w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-300x140.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-1024x477.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-768x357.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-1536x715.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-2048x953.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-12-at-6.39.22-PM-1080x503.png 1080w\" sizes=\"(max-width: 3000px) 100vw, 3000px\" \/><\/a><\/p>\n<p><strong>The output of the playbook with <code>follow_redirects<\/code> parameter set to <code>none<\/code>\u00a0 <\/strong><\/p>\n<p>we instruct ansible to not follow redirects this time and it fails.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM.png\"><img class=\"post-img alignnone wp-image-9348 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM.png\" alt=\"ansible uri json\" width=\"2954\" height=\"1338\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM.png 2954w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-300x136.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-1024x464.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-768x348.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-1536x696.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-2048x928.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-1080x489.png 1080w\" sizes=\"(max-width: 2954px) 100vw, 2954px\" \/><\/a><\/p>\n<p>hope you have understood the crucial role of follow_redirects in the Ansible URI module.<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible URI &#8211; How to work with body of the response or page content<\/h3>\n<p>the last two examples we have seen on Ansible URI were around the status code. sometimes we might want to work with the content of the web page.<\/p>\n<p>In this example, we are going to see how Ansible URI handles the content of the webpage or the API response<\/p>\n<p>Let us see it with a practical example, Let&#8217;s suppose we want to know the public IP address of the node where the Ansible task is being executed. ( controller or remote)<\/p>\n<p>Based on that result, we might want to execute or skip a downward task<\/p>\n<p>Look at the following playbook where we connect to the remote URL <code>https:\/\/checkip.amazonaws.com<\/code>\u00a0 this returns ( response\/content) the public IP of the origin ( from where the call has been made)<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible URI module examples\r\n  hosts: localhost\r\n  tasks:\r\n  - name: Check the outbound IP address\r\n    uri:\r\n      url: https:\/\/checkip.amazonaws.com \r\n      return_content: true\r\n    register: result\r\n\r\n  - name: Creating a new variable to store this IP\r\n    set_fact:\r\n      publicip: \"{{ result.content | trim() }}\"\r\n\r\n  - debug: \r\n      var: publicip<\/pre>\n<p>&nbsp;<\/p>\n<p>Here is the execution output of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM.png\"><img class=\"post-img alignnone wp-image-9342 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM.png\" alt=\"ansible uri return content\" width=\"2750\" height=\"2086\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM.png 2750w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM-300x228.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM-1024x777.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM-768x583.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM-1536x1165.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM-2048x1554.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-13-at-9.29.40-PM-1080x819.png 1080w\" sizes=\"(max-width: 2750px) 100vw, 2750px\" \/><\/a><\/p>\n<p>If you look closer, you would be able to see we are using a parameter <code>return_content<\/code> and it is set to <code>yes<\/code><\/p>\n<p>Why do we need return_content on Ansible?<\/p>\n<p>Without the return_content parameter, Ansible would not collect the response content or page content.<\/p>\n<p>To validate this you can try the same playbook without the return_content parameter.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM.png\"><img class=\"post-img alignnone wp-image-9343 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM.png\" alt=\"ansible uri return_content\" width=\"3188\" height=\"2010\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM.png 3188w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM-300x189.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM-1024x646.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM-768x484.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM-1536x968.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM-2048x1291.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-14-at-4.35.46-PM-1080x681.png 1080w\" sizes=\"(max-width: 3188px) 100vw, 3188px\" \/><\/a><\/p>\n<p>As shown in the preceding snapshot, we have removed the <code>return_content<\/code> and the task is failing.<\/p>\n<p>If you look at the highlighted text on the failure message. you can see there is no attribute named <code>content<\/code><\/p>\n<p>By default, ansible does not collect the entire page response or the content it is more like using <code>curl -I<\/code>\u00a0 where curl collects only the headers, not the content.<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible URI for API Automation &#8211; JSON payload<\/h3>\n<p>So far we have been using only web services with ansible URI.\u00a0 Let us start to use API endpoints and different content-type and payloads.<\/p>\n<p>Let us start with the famous JSON payload. JSON has become an indispensable element in API and Webservices.<\/p>\n<p>In this example, we are going to use a publicly available API endpoint <a href=\"https:\/\/reqres.in\" target=\"_blank\" rel=\"noopener noreferrer\">reqres.in<\/a><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Ansible URI examples\r\n  hosts: localhost\r\n  tasks:\r\n  - name: Ansible URI playbook for API with JSON Payload.\r\n    uri:\r\n      url: https:\/\/reqres.in\/api\/login\r\n      method: POST\r\n      body_format: json\r\n      body: |-\r\n        {\r\n          \"email\": \"eve.holt@reqres.in\",\r\n          \"password\": \"cityslicka\"\r\n        }\r\n      return_content: yes\r\n    register: result\r\n    changed_when: \"'token' in result.content\"\r\n\r\n  - debug: var=result.content<\/pre>\n<p>As you can see, our preceding playbook is designed to send a payload using <code>body<\/code>\u00a0parameter<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">body: |-\r\n        {\r\n          \"email\": \"eve.holt@reqres.in\",\r\n          \"password\": \"cityslicka\"\r\n        }<\/pre>\n<p>Unless defined, this payload would be considered as body <code>raw<\/code> not as JSON<\/p>\n<p>so you need to define the right interpretation of our body<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">body_format: json<\/pre>\n<p>Since we care about the response content. we are using <code>return_content: yes<\/code>\u00a0 which is something we have learnt in the previous examples.<\/p>\n<p>We are also defining the method of the HTTP as <code>POST<\/code> by default Ansible would consider the request as <code>GET<\/code>\u00a0 when you are making a wrong method of call, you might get HTTP 400 error.<\/p>\n<p>Finally, the expected response from this API endpoint is a token. If our credentials are accepted the API should present us with a token.<\/p>\n<p>We are ensuring that we get a token in our response<\/p>\n<p>The reason for using <strong>changed_when<\/strong> is to ensure that the job is considered successful only when a certain condition is met.<\/p>\n<p>You can alternatively use <strong>failed_when<\/strong> as well in this context with inverted condition.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-changed_when-and-failed_when-examples\/\">Read my exclusive article on changed_when and failed_when here<\/a><\/p>\n<p>execution output of our playbook is here<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM.png\"><img class=\"alignnone size-full wp-image-9348\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM.png\" alt=\"ansible uri json\" width=\"2954\" height=\"1338\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM.png 2954w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-300x136.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-1024x464.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-768x348.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-1536x696.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-2048x928.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-17-at-6.15.26-AM-1080x489.png 1080w\" sizes=\"(max-width: 2954px) 100vw, 2954px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible playbook to log in to Form-based Authentication &#8211; Ansible URI<\/h3>\n<p>In the previous example, we have seen how to login to API and obtain a token by sending a payload over HTTP POST using Ansible URI<\/p>\n<script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>\n<p>In this example, we will see how to log in to the form-based Authentication enabled Web Application.<\/p>\n<p>As I could not find a simple Application to demonstrate I ended up creating one<\/p>\n<p>It is a simple Form based Login App designed on Flask. you can find the source code in my GitHub repo<\/p>\n<pre>https:\/\/github.com\/AKSarav\/login-form-app-sample<\/pre>\n<p>You can download the source code and host it yourself on your locally.<\/p>\n<p>Or use the readily available public Heroku link of this application<\/p>\n<pre>https:\/\/form-login-webapp.herokuapp.com\/<\/pre>\n<blockquote><p>Note*: This URL might change or expire this is hosted on HerokuApp free plan.<\/p><\/blockquote>\n<p>&nbsp;<\/p>\n<p>Before we automate this with Ansible, let us take a quick look at how this application works when tried from the browser.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/form-login-webapp.gif\"><img class=\"alignnone size-full wp-image-9354\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/form-login-webapp.gif\" alt=\"ansible login form based webapp\" width=\"1272\" height=\"658\" \/><\/a><\/p>\n<p>As shown in the preceding GIF, we are entering the credentials admin\/admin and clicking on the Login button.<\/p>\n<p>After successful login, we can see a message <code>you have successfully logged in<\/code><\/p>\n<p>If you put in the wrong credentials, you would be redirected to the login form once again with an error message.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM.png\"><img class=\"post-img alignnone wp-image-9356 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM.png\" alt=\"ansible uri form\" width=\"2468\" height=\"672\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM.png 2468w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM-300x82.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM-1024x279.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM-768x209.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM-1536x418.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM-2048x558.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/Screenshot-2022-11-20-at-1.20.02-PM-1080x294.png 1080w\" sizes=\"(max-width: 2468px) 100vw, 2468px\" \/><\/a><\/p>\n<p>Here is the Ansible playbook to Login to the form based Authentication enabled Web App<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n  - name: Ansible URI examples\r\n    hosts: localhost\r\n    tasks:\r\n    - name: Login to WebApplication with Ansible\r\n      uri:\r\n        url: https:\/\/form-login-webapp.herokuapp.com\r\n        method: POST\r\n        body_format: form-urlencoded\r\n        follow_redirects: all\r\n        body:\r\n        - [ username, admin ]\r\n        - [ password, admin ]\r\n        - [ enter, Login]\r\n        return_content: yes\r\n      register: login\r\n      changed_when: \"'you have successfully logged in' in login.content\"\r\n\r\n    - debug: var=login.content<\/pre>\n<p>Let us decode the important fields of this playbook<\/p>\n<ul>\n<li><strong>url<\/strong> &#8211; URL of our form-based login application<\/li>\n<li><strong>method<\/strong> &#8211; we are using HTTP POST to send our username and password<\/li>\n<li><strong>body_format\u00a0<\/strong>&#8211; to send the credentials we should use <code>form-urlencoded<\/code> body format<\/li>\n<li><strong>follow_redirects<\/strong> &#8211; we are following through all the redirects until we get to the home screen<\/li>\n<li><strong>body\u00a0<\/strong>&#8211; In this form-urlencoded body we need to define what is the key and the value for each form item\n<ul>\n<li>username &#8211; we are passing <code>admin<\/code> as our username<\/li>\n<li>password &#8211;\u00a0 we are passing <code>admin<\/code> as our password too.<\/li>\n<li>enter &#8211; where to click. A button name to submit. in our case it is <code>Login<\/code><\/li>\n<\/ul>\n<\/li>\n<li><strong>return_content<\/strong>:\u00a0 we are enabling return_content to see the response content<\/li>\n<li><strong>changed_when<\/strong>:\u00a0 Just to let Ansible know when to consider this task successful. in our case, when we have the message <code>you have successfully logged in<\/code> on the response content<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h3>How to wait for the URL to be reachable or until it returns a Status code or Content<\/h3>\n<p>As we have seen various examples already on Ansible URI. we might want to add some conditional execution on it<\/p>\n<p>Like making it wait until it returns a specific status code or message etc.<\/p>\n<p>I have a dedicated article on the same. please refer the following link<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"wriyX7K0Xn\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/\">Ansible Wait for URL to respond or Retry &#8211; WEB and API  | Devops Junction<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Ansible Wait for URL to respond or Retry &#8211; WEB and API  | Devops Junction&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-wait-for-url\/embed\/#?secret=wriyX7K0Xn\" data-secret=\"wriyX7K0Xn\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n<h3>More examples are coming<\/h3>\n<p>I have already put a few days\/weeks of effort already in compiling this article and creating necessary supporting artefacts like the cheat sheet, the flask application etc.<\/p>\n<p>I still feel there is more to cover in Ansible URI such as<\/p>\n<ul>\n<li>File upload with Ansible URI<\/li>\n<li>Authenticating with already stored Cookie<\/li>\n<li>More examples on API calls etc<\/li>\n<\/ul>\n<p>While am working on these items with necessary examples and supporting images\/videos. I am publishing this article to help those in need<\/p>\n<p>if you have any more requirements or ideas that can or should be covered in this article. let me know in the comments.<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577131\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"6507\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577131\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577131\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>Ansible has become a widely accepted automation platform not just for Infrastructure Automation but for various other use cases Some of them are Web and API automation, Monitoring Automation, Cloud Automation and Infrastructure as a code like Terraform In this article, we are going to see how to use Ansible[&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":9332,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Ansible URI module Examples - How to use Ansible URI | Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible URI module examples. How to use Ansible URI module in playbook. How to use Ansible with API and Webservices JSON, HTTP GET, PUT, POST examples.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Ansible URI module Examples - How to use Ansible URI | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible URI module examples. How to use Ansible URI module in playbook. How to use Ansible with API and Webservices JSON, HTTP GET, PUT, POST examples.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2022-11-20T09:05:23+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-11-20T19:14:08+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1690\" \/>\n\t<meta property=\"og:image:height\" content=\"1496\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/11\/ansible-uri-module-parameters.png\",\"width\":1690,\"height\":1496,\"caption\":\"Ansible URI examples\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/\",\"name\":\"Ansible URI module Examples - How to use Ansible URI | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#primaryimage\"},\"datePublished\":\"2022-11-20T09:05:23+00:00\",\"dateModified\":\"2022-11-20T19:14:08+00:00\",\"description\":\"Ansible URI module examples. How to use Ansible URI module in playbook. How to use Ansible with API and Webservices JSON, HTTP GET, PUT, POST examples.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"Ansible URI module Examples &#8211; How to use Ansible URI | Devops Junction\",\"datePublished\":\"2022-11-20T09:05:23+00:00\",\"dateModified\":\"2022-11-20T19:14:08+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-uri-examples\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6507"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=6507"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6507\/revisions"}],"predecessor-version":[{"id":9366,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/6507\/revisions\/9366"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/9332"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=6507"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=6507"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=6507"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}