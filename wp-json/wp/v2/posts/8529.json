{"id":8529,"date":"2022-05-29T11:32:03","date_gmt":"2022-05-29T06:02:03","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=8529"},"modified":"2022-06-17T08:56:27","modified_gmt":"2022-06-17T03:26:27","slug":"aws-lambda-terraform","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/","title":{"rendered":"Terraform Lambda Example Create and Deploy &#8211; AWS | Devops Junction"},"content":{"rendered":"<p>Serverless has become a new way to run software and applications over the cloud.<\/p>\n<p>Let&#8217;s suppose you have a python single file application and you want to make it available to your users.<\/p>\n<p>The days of Provisioning a Virtual machine installing necessary packages and managing the versions are all over.<\/p>\n<p>Serverless enables you to run your code on the cloud with not much effort needed from your end on the Infrastructure. Serverless handles it.<\/p>\n<p>It is a production grade and scalable Infrastructure. Built and Managed by Serverless.<\/p>\n<p>If you are new to AWS Lambda and wondering how to get started and deploy your code and make it a serverless application.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/lambda-alb-python-example\/\">Refer to our introduction to Lambda article here<\/a><\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda.png\"><img class=\"post-img alignnone wp-image-8566 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda.png\" alt=\"terraform lambda\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda.png 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda-300x213.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda-1024x726.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda-768x545.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda-1536x1090.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda-90x65.png 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<h2>The <span style=\"color: #e61275;\">Objective<\/span><\/h2>\n<p>You can think of this article as an extension <a href=\"https:\/\/www.middlewareinventory.com\/blog\/lambda-alb-python-example\/\">of the aforementioned article.\u00a0<\/a> where we create and deploy aws lambda manually.<\/p>\n<p>Now we are going to do all of them with Terraform with much efficiency.<\/p>\n<p>As part of this article, this is what we are going to do<\/p>\n<ul>\n<li>Creating AWS Access Key and Secret<\/li>\n<li>Installing AWS CLI<\/li>\n<li>Configuring AWS CLI<\/li>\n<li>Creating Terraform Manifest\/files necessary to create our resources<\/li>\n<li>Executing the Terraform Manifest and Create resourcs<\/li>\n<li>Final Validation<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h2><span id=\"Setup_your_Programmatic_Access_Create_Access_Key\" class=\"ez-toc-section\">Create <span style=\"color: #e61275;\">AWS Access Key<\/span> and <span style=\"color: #e61275;\">Secret<\/span><\/span><\/h2>\n<p>If you would like to create a new user in IAM along with the Access Key follow these steps.<\/p>\n<ol>\n<li>\n<div>Login to AWS Console<\/div>\n<\/li>\n<li>\n<div>In the services go to IAM<\/div>\n<\/li>\n<li>\n<div>Create a User and Click on the map of existing Policies<\/div>\n<\/li>\n<li>\n<div>Choose UserName and Select the Policy (Administrator Access Policy)<\/div>\n<\/li>\n<li>\n<div>Create user<\/div>\n<\/li>\n<li>\n<div>The final Stage would present the AccessKEY and Secret Access like given below.<\/div>\n<\/li>\n<\/ol>\n<figure id=\"attachment_3140\" class=\"wp-caption alignleft\"><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png\"><img class=\"size-full wp-image-3140 lazyautosizes lazyloaded\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png\" sizes=\"819px\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png 996w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM-300x116.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM-768x297.png 768w\" alt=\"\" width=\"996\" height=\"385\" data-src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png\" data-srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM.png 996w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM-300x116.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2019\/03\/Screen-Shot-2019-03-31-at-2.20.07-AM-768x297.png 768w\" data-sizes=\"auto\" \/><\/a><figcaption class=\"wp-caption-text\">API key creation Successful Message Banner<\/figcaption><\/figure>\n<p>&nbsp;<\/p>\n<p>If you would like to Choose the existing user and create an Access Key follow this<\/p>\n<ol>\n<li>Sign in to the AWS Management Console and open the IAM console at https:\/\/console.aws.amazon.com\/iam\/.<\/li>\n<li>In the navigation pane, choose Users.<\/li>\n<li>Choose the name of the user whose access keys you want to create, and then choose the Security credentials tab.<\/li>\n<li>In the Access keys section, choose to Create an access key.<\/li>\n<li>To view the new access key pair, choose Show. You will not have access to the secret access key again after this dialog box closes. ( Refer the image given above)<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h2 id=\"install-cli\"><span id=\"Install_AWS_CLI\" class=\"ez-toc-section\">Install\u00a0<span style=\"color: #e61275;\">AWS CLI<\/span><\/span><\/h2>\n<p>Based on your base machine the AWS CLI installation and command might vary.<\/p>\n<p>Amazon has given clear instructions on how to install AWS CLI on each platform. Choose any of the following links and get your AWS CLI installed and ready<\/p>\n<ul>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/install-cliv2-linux.html\" target=\"_blank\" rel=\"noopener noreferrer\">Installing AWS CLI version 2 on Linux or Unix<\/a><\/li>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/install-cliv2-macOS.html\" target=\"_blank\" rel=\"noopener noreferrer\">Installing AWS CLI version 2 on macOS<\/a><\/li>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/install-cliv2-windows.html\" target=\"_blank\" rel=\"noopener noreferrer\">Installing AWS CLI version 2 on Windows<\/a><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h2 id=\"configure-cli\"><span id=\"Configure_AWS_CLI\" class=\"ez-toc-section\"><span style=\"color: #e61275;\">Configure<\/span>\u00a0AWS CLI<\/span><\/h2>\n<p>I presume that you have installed the AWS CLI package and if everything went well.<\/p>\n<p>You should be able to see the version of the AWS CLI installed when entering the following command in your terminal or command prompt<\/p>\n<pre>aws &#8211; version<\/pre>\n<p>I am using the AWS CLI Version1 as CLI Version 2 is still on Beta.<\/p>\n<p>Now it is time to configure the AWS CLI, Just enter the following command and you would be prompted with a few questions about the Access Key and Passwords.<\/p>\n<pre>aws configure<\/pre>\n<p>it would look like this as you are setting it up.<\/p>\n<p>You enter your own\u00a0<code>AWS Access Key ID<\/code>\u00a0and\u00a0<code>Secret Access Key<\/code>\u00a0and the one is given below is not correct. Just a made up.<\/p>\n<pre>\u279c ~ aws configure\r\nAWS Access Key ID [None]: AKIAS790KQGK63WUK6T5\r\nAWS Secret Access Key [None]: kkQEiBjJSKrDkWBLO9G\/JJKQWIOKL\/CpHjMGyoiJWW\r\nDefault region name [None]: us-east-1\r\nDefault output format [None]:<\/pre>\n<p>Well done. You are ready with AWS CLI<\/p>\n<p>&nbsp;<\/p>\n<h2>New to Terraform &#8211; A Refresher<\/h2>\n<p>Before we begin we presume that you have completed the AWS CLI integration and configuration necessary for your Terraform to reach AWS<\/p>\n<p>We also presume that you have installed Terraform CLI in your local<\/p>\n<p>If you are new to Terraform. we would recommend you to read a Terraform AWS Beginner article here and come back to continue.<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"B0shjTjREF\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-aws-example-ec2\/\">Terraform AWS Example &#8211; Create EC2 instance with Terraform<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;Terraform AWS Example &#8211; Create EC2 instance with Terraform&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/terraform-aws-example-ec2\/embed\/#?secret=B0shjTjREF\" data-secret=\"B0shjTjREF\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n<p>We hope you are now ready with everything needed to continue with our Terraform lambda creation requirement.<\/p>\n<p>&nbsp;<\/p>\n<h2>Terraform <span style=\"color: #e61275;\">script<\/span> to create<span style=\"color: #e61275;\"> AWS Lambda<\/span> function<\/h2>\n<p>Terraform codes are written as configuration blocks and with an extension of <code>*.tf<\/code><\/p>\n<p>Now we are going to create a few files in our workspace, all of them have their distinguished purpose to serve.<\/p>\n<div>\n<div>\n<div>\n<p>Create a file named <strong>variables.tf<\/strong> to pass the required variables to the Terraform<\/p>\n<pre>variable \"aws_region\" {\r\n  default \u00a0 \u00a0 = \"us-east-1\"\r\n}<\/pre>\n<\/div>\n<p>Next,\u00a0 create another file named <strong>output.tf<\/strong> file to store the output of our Terraform execution<\/p>\n<div>\n<pre>output \"lambda\" {\r\n  value = aws_lambda_function.lambda.qualified_arn\r\n}<\/pre>\n<\/div>\n<\/div>\n<p>&nbsp;<\/p>\n<div>\n<p>Now we are going to create the mighty <strong>main.tf<\/strong>\u00a0file<\/p>\n<p>This file is our primary file where we define our requirements and what we are going to do with Terraform.<\/p>\n<p>Now create a new file named <code>main.tf<\/code> and copy the following code to it<\/p>\n<p>We will decode this file in detail shortly.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">provider \"aws\" {\r\n  region =var.aws_region\r\n}\r\nprovider \"archive\" {}\r\ndata \"archive_file\" \"zip\" {\r\n  type        = \"zip\"\r\n  source_file = \"welcome.py\"\r\n  output_path = \"welcome.zip\"\r\n}\r\n\r\ndata \"aws_iam_policy_document\" \"policy\" {\r\n  statement {\r\n    sid    = \"\"\r\n    effect = \"Allow\"\r\n    principals {\r\n      identifiers = [\"lambda.amazonaws.com\"]\r\n      type        = \"Service\"\r\n    }\r\n    actions = [\"sts:AssumeRole\"]\r\n  }\r\n}\r\n\r\nresource \"aws_iam_role\" \"iam_for_lambda\" {\r\n  name               = \"iam_for_lambda\"\r\n  assume_role_policy = data.aws_iam_policy_document.policy.json\r\n}\r\n\r\nresource \"aws_lambda_function\" \"lambda\" {\r\n  function_name = \"welcome\"\r\n  filename         = data.archive_file.zip.output_path\r\n  source_code_hash = data.archive_file.zip.output_base64sha256\r\n  role    = aws_iam_role.iam_for_lambda.arn\r\n  handler = \"welcome.lambda_handler\"\r\n  runtime = \"python3.6\"\r\n}<\/pre>\n<p>&nbsp;<\/p>\n<div>\n<div><\/div>\n<\/div>\n<p>Let us see what each block in our <code>main.tf<\/code> file does<\/p>\n<p>&nbsp;<\/p>\n<h3><strong>Provider block<\/strong><\/h3>\n<p>With this block, we are instructing terraform to use AWS as a provider<\/p>\n<pre>provider \"aws\" {\r\n  region = var.aws_region\r\n}<\/pre>\n<\/div>\n<\/div>\n<p>&nbsp;<\/p>\n<h3><strong>Archive block<\/strong><\/h3>\n<p>This block is to create a zip file of our source code (python) to deploy it into lambda.<\/p>\n<p>we can compress a list of files or a single file using <code>archive_file<\/code> directive<\/p>\n<pre>provider \"archive\" {}\r\ndata \"archive_file\" \"zip\" {\r\n  type \u00a0 \u00a0 \u00a0 \u00a0= \"zip\"\r\n  source_file = \"welcome.py\"\r\n  output_path = \"welcome.zip\"\r\n}<\/pre>\n<p>&nbsp;<\/p>\n<h3><strong>Creating iam_policy_document JSON<\/strong><\/h3>\n<p>With this block, we are creating an IAM Policy document as a JSON which would be later used to create an IAM Policy<\/p>\n<pre>data \"aws_iam_policy_document\" \"policy\" {\r\n  statement {\r\n  \u00a0 sid \u00a0 \u00a0= \"\"\r\n  \u00a0 effect = \"Allow\"\r\n  \u00a0 principals {\r\n  \u00a0 \u00a0 identifiers = [\"lambda.amazonaws.com\"]\r\n  \u00a0 \u00a0 type \u00a0 \u00a0 \u00a0 \u00a0= \"Service\"\r\n  \u00a0 }\r\n  \u00a0 actions = [\"sts:AssumeRole\"]\r\n  }\r\n}<\/pre>\n<p>&nbsp;<\/p>\n<h3><strong>Creating IAM Policy using the JSON\u00a0<\/strong><\/h3>\n<p>We are going to use the JSON output of the preceding data block aws_iam_policy_document.<\/p>\n<p>With in the <code>aws_iam_role<\/code> block we are referring to the output of the preceding block using the variable <strong>data.aws_iam_policy_document.policy.json\u00a0<\/strong><\/p>\n<pre>resource \"aws_iam_role\" \"iam_for_lambda\" {\r\n  name \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 = \"iam_for_lambda\"\r\n  assume_role_policy = data.aws_iam_policy_document.policy.json\r\n}\r\n<\/pre>\n<p>&nbsp;<\/p>\n<h3><strong>aws_lambda_function block<\/strong><\/h3>\n<p>As we have created all the necessary resources with different blocks.\u00a0 Now we can use them in our core aws_lambda_function creation block.<\/p>\n<p>we are going to create a lambda function named <code>welcome<\/code> using the zip file we have created earlier with <code>archive_file<\/code> block<\/p>\n<p>Also, we are using the role we have created with <strong>aws_iam_role<\/strong> and define our runtime which is needed for our python sourcecode to run properly.<\/p>\n<pre>resource \"aws_lambda_function\" \"lambda\" {\r\n  function_name = \"welcome\"\r\n  filename \u00a0 \u00a0 \u00a0 \u00a0 = data.archive_file.zip.output_path\r\n  source_code_hash = data.archive_file.zip.output_base64sha256\r\n  role \u00a0 \u00a0= aws_iam_role.iam_for_lambda.arn\r\n  handler = \"welcome.lambda_handler\"\r\n  runtime = \"python3.6\"\r\n}<\/pre>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<div>\n<div>\n<div>\n<h2><strong>Python &#8211; <span style=\"color: #e61275;\">Lambda<\/span> Function Sourcecode<\/strong><\/h2>\n<p>As we have created the Terraform code necessary to create the AWS Lambda function.<\/p>\n<p>Now we are going to create the python source code file named <strong>welcome.py<\/strong> which we have referred to on our terraform manifest earlier<\/p>\n<p>This python file has to be kept in the same directory (workspace) where your <strong>tf\u00a0<\/strong>files are kept<\/p>\n<p>Create a file named <span style=\"color: #003366;\"><strong>welcome.py<\/strong><\/span> and copy the following source code<\/p>\n<div>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">import json\r\nimport random\r\nimport string\r\nimport random\r\nimport string\r\nimport re\r\n\r\ndef lambda_handler(event, context):\r\n\r\n    max=8\r\n    password=''.join(random.choices(string.ascii_lowercase+string.ascii_uppercase, k=max))\r\n    mandatory=''.join(''.join(random.choices(choice)) for choice in [string.ascii_lowercase, string.ascii_uppercase, \"_@\", string.digits])\r\n    passwordlist=list(password+mandatory)\r\n    random.shuffle(passwordlist)\r\n    while re.match(\"^[0-9]|@|_\",''.join(list(passwordlist))) != None:\r\n        random.shuffle(passwordlist)\r\n        passwordlist=list(password+mandatory)\r\n\r\n    return {\r\n        'statusCode': 200,\r\n        'body': json.dumps(''.join(list(passwordlist)))\r\n    }<\/pre>\n<p>&nbsp;<\/p>\n<\/div>\n<\/div>\n<div>\n<h2>Create <span style=\"color: #e61275;\">Lambda Function<\/span> with Terraform<\/h2>\n<p>Now it is time to put our terraform script to use and create an aws lambda function with terraform.<\/p>\n<p>Initialize the terraform script by running the following command<\/p>\n<pre>terraform init<\/pre>\n<p>then run the following terraform command to plan,<\/p>\n<p>Plan is like a dry run and it shows what changes would be made upon running the terraform script\/manifest<\/p>\n<pre>terraform plan -out tfplan.out<\/pre>\n<\/div>\n<p>we are saving the plan as an output file <code>tfplan.out<\/code> this is recommended to make sure that no unintended changes are being made to the Infra.<\/p>\n<p>this <code>tfplan.out<\/code> file should be used during the terraform apply so only the changes you have seen in the plan would be made LIVE<\/p>\n<div>\n<p>After reviewing what changes would be made to the infrastructure.<\/p>\n<p>If you are happy with it. go ahead and apply the configuration and run the script with the following command<\/p>\n<pre>terraform apply tfplan.out<\/pre>\n<\/div>\n<\/div>\n<p>&nbsp;<\/p>\n<div>\n<h2>Testing the <span style=\"color: #e61275;\">Lambda<\/span> function<\/h2>\n<p>If all went well. you should now see your lambda function created in AWS console.<\/p>\n<p>Now, let&#8217;s test our lambda function to see its working:<\/p>\n<ul>\n<li>Click on the Test option on your lambda function page to set up a test event:<\/li>\n<\/ul>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_173310679.png\"><img class=\"post-img aligncenter wp-image-8554 size-full\" title=\"terraform lambda\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_173310679.png\" alt=\"\" width=\"1135\" height=\"459\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_173310679.png 1135w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_173310679-300x121.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_173310679-1024x414.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_173310679-768x311.png 768w\" sizes=\"(max-width: 1135px) 100vw, 1135px\" \/><\/a><\/p>\n<ul>\n<li>Enter your test event name and leave all other fields to default and save the test event.<\/li>\n<\/ul>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172101524.png\"><img class=\"post-img aligncenter wp-image-8551 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172101524.png\" alt=\"\" width=\"963\" height=\"746\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172101524.png 963w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172101524-300x232.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172101524-768x595.png 768w\" sizes=\"(max-width: 963px) 100vw, 963px\" \/><\/a><\/p>\n<ul>\n<li>Click on Test to execute the test event.<\/li>\n<\/ul>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172217135.png\"><img class=\"post-img aligncenter wp-image-8552 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172217135.png\" alt=\"\" width=\"1442\" height=\"557\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172217135.png 1442w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172217135-300x116.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172217135-1024x396.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172217135-768x297.png 768w\" sizes=\"(max-width: 1442px) 100vw, 1442px\" \/><\/a><\/p>\n<ul>\n<li>You will be able to see the output of your lambda function.<\/li>\n<\/ul>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172309483.png\"><img class=\"post-img aligncenter wp-image-8553 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172309483.png\" alt=\"\" width=\"1448\" height=\"372\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172309483.png 1448w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172309483-300x77.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172309483-1024x263.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/image_2022-05-26_172309483-768x197.png 768w\" sizes=\"(max-width: 1448px) 100vw, 1448px\" \/><\/a><\/p>\n<\/div>\n<\/div>\n<p>&nbsp;<\/p>\n<p>Since our sourcecode is designed to return some random password. You should see an output with a password something like the preceding screenshot.<\/p>\n<div>\n<div>\n<p>That&#8217;s it.<\/p>\n<p>You have successfully automated the deployment of your python code to a lambda function using Terraform and then validated using Lambda console.<\/p>\n<\/div>\n<p>If you have any product and Cloud \/ DevOps requirements, Please do contact us for free consulting at <a href=\"mailto:rumenlishkoff@gmail.com\">rumenlishkoff@gmail.com<\/a><\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Co Authored by<br \/>\nVishnu &amp; Rumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577400\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"8529\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577400\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577400\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Serverless has become a new way to run software and applications over the cloud. Let&#8217;s suppose you have a python single file application and you want to make it available to your users. The days of Provisioning a Virtual machine installing necessary packages and managing the versions are all over.[&#8230;]<\/p>\n","protected":false},"author":272,"featured_media":8566,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[234,451],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Terraform Lambda Example Create and Deploy - AWS | Devops Junction<\/title>\n<meta name=\"description\" content=\"Terraform Lambda Example. aws_lambda_funtion example Terraform. How to create AWS lambda function and deploy python code using Terraform.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Terraform Lambda Example Create and Deploy - AWS | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Terraform Lambda Example. aws_lambda_funtion example Terraform. How to create AWS lambda function and deploy python code using Terraform.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2022-05-29T06:02:03+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-06-17T03:26:27+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2022\/05\/terraform-aws-lambda.png\",\"width\":1748,\"height\":1240,\"caption\":\"terraform lambda\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/\",\"name\":\"Terraform Lambda Example Create and Deploy - AWS | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#primaryimage\"},\"datePublished\":\"2022-05-29T06:02:03+00:00\",\"dateModified\":\"2022-06-17T03:26:27+00:00\",\"description\":\"Terraform Lambda Example. aws_lambda_funtion example Terraform. How to create AWS lambda function and deploy python code using Terraform.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/241b2551eabd7453b914be32744fe6b8\"},\"headline\":\"Terraform Lambda Example Create and Deploy &#8211; AWS | Devops Junction\",\"datePublished\":\"2022-05-29T06:02:03+00:00\",\"dateModified\":\"2022-06-17T03:26:27+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#primaryimage\"},\"articleSection\":\"AWS,Serverless\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/aws-lambda-terraform\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/241b2551eabd7453b914be32744fe6b8\",\"name\":\"Vishnu S\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/02fe00895d488470a7b6e38963ba8d36?s=96&d=mm&r=g\",\"caption\":\"Vishnu S\"},\"sameAs\":[\"https:\/\/www.linkedin.com\/in\/vishnu-s-763644196\/\"]}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8529"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/272"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=8529"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8529\/revisions"}],"predecessor-version":[{"id":8665,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/8529\/revisions\/8665"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/8566"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=8529"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=8529"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=8529"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}