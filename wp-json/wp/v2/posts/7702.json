{"id":7702,"date":"2022-01-01T00:23:46","date_gmt":"2021-12-31T18:53:46","guid":{"rendered":"https:\/\/www.middlewareinventory.com\/?p=7702"},"modified":"2022-01-01T14:53:18","modified_gmt":"2022-01-01T09:23:18","slug":"ansible-aws_s3-example","status":"publish","type":"post","link":"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/","title":{"rendered":"How to use ansible with S3 &#8211; Ansible aws_s3 examples  | Devops Junction"},"content":{"rendered":"<p><script async src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js\"><\/script>\r\n<ins class=\"adsbygoogle\"\r\n     style=\"display:block; text-align:center;\"\r\n     data-ad-layout=\"in-article\"\r\n     data-ad-format=\"fluid\"\r\n     data-ad-client=\"ca-pub-3398911159151128\"\r\n     data-ad-slot=\"1946393371\"><\/ins>\r\n<script>\r\n     (adsbygoogle = window.adsbygoogle || []).push({});\r\n<\/script>S3 has become the cheap and best object storage and it is used widely across enterprises and products, to securely save and access data over the internet.<\/p>\n<p>We have various ways to interact with the S3 bucket,\u00a0 to upload, download and copy objects back and forth to S3.<\/p>\n<ul>\n<li>SDKs ( Boto, AWS SDK for Javascript etc)<\/li>\n<li>AWS CLI<\/li>\n<li>AWS Console<\/li>\n<\/ul>\n<p>We have written an article on how to use<a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-s3-cp-examples-how-to-copy-files-with-s3-cli-devops-junction\/\"> AWS CLI with S3<\/a><\/p>\n<p>How can we talk about infrastructure efficiency and cloud automation without Ansible?<\/p>\n<p>So, In this article, we are going to see how to use Ansible for managing objects in the S3 bucket<\/p>\n<p>We are going to see how to use Ansible to upload files to S3, Download files from S3 and copy files to S3 etc.<\/p>\n<p>With no further ado. lets go-ahead<\/p>\n<p>&nbsp;<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3.jpg\"><img class=\"post-img alignnone wp-image-7749 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3.jpg\" alt=\"Ansible S3\" width=\"1748\" height=\"1240\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3.jpg 1748w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3-300x213.jpg 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3-1024x726.jpg 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3-768x545.jpg 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3-1536x1090.jpg 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3-90x65.jpg 90w\" sizes=\"(max-width: 1748px) 100vw, 1748px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Things to know before moving on<\/h2>\n<ul>\n<li>We presume you have AWS CLI configured or have AWS ACCESS KEY\/SECRET<\/li>\n<li>PUT and Upload are the same<\/li>\n<li>GET and Download are the same<\/li>\n<\/ul>\n<p>There are various modes of operation available with Ansible S3.<\/p>\n<ul>\n<li><code>PUT<\/code>: upload<\/li>\n<li><code>GET<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: download<\/span><\/li>\n<li><code>geturl<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: return download URL<\/span><\/li>\n<li><code>getstr<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: download object as a string<\/span><\/li>\n<li><code>list<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: list keys \/ objects<\/span><\/li>\n<li><code>create<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: create bucket<\/span><\/li>\n<li><code>delete<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: delete bucket<\/span><\/li>\n<li><code>delobj<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: delete object<\/span><\/li>\n<li><code>copy<\/code><span style=\"color: #404040; font-size: 1.0625rem;\">: copy object that is already stored in another bucket<\/span><\/li>\n<\/ul>\n<p>For the <code>aws_s3<\/code> module to work you need to have certain package version requirements<\/p>\n<div id=\"requirements\" class=\"section\">\n<p>The below requirements are needed on the host that executes this module.<\/p>\n<ul>\n<li>python &gt;= 3.6<\/li>\n<li>boto3 &gt;= 1.15.0<\/li>\n<li>botocore &gt;= 1.18.0<\/li>\n<\/ul>\n<\/div>\n<p>you can check your these things using the following commands<\/p>\n<ul>\n<li><code>ansible &#8211; version<\/code> that shows the python interpreter version and ansible version<\/li>\n<li><code>pip list|grep boto<\/code> or <code>pip3 list|grep boto<\/code> shows the boot3 and botocore version<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h2>Ansible S3 List Examples<\/h2>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 List Objects in a Bucket<\/h3>\n<p>In S3 parlance the name of the object is known as a key.\u00a0 It is kept that way to align with the Object storage principle of S3.<\/p>\n<p>As you know Objects are created with Keys and values. Every object you store are referred to with their name also known as <code>key<\/code><\/p>\n<p>Here is the Ansible Playbook that lists bucket <code>devopsjunction<\/code> using <code>mode: list<\/code><\/p>\n<p>Since I have multiple <a href=\"https:\/\/docs.aws.amazon.com\/cli\/latest\/userguide\/cli-configure-profiles.html\">named profiles in AWS CLI.<\/a> I need to instruct Ansible to use the right profile by mentioning <code>profile: personal<\/code><\/p>\n<p>If no profile is specified, Ansible would choose the default AWS CLI profile<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: AWS S3 Bucket List - Ansible\r\n  hosts: localhost\r\n  tasks:\r\n  - name: List keys or Objects\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: list\r\n    register: listresult\r\n\r\n  - debug: msg={{listresult.s3_keys}}<\/pre>\n<p>here is the execution output of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM.png\"><img class=\"post-img alignnone wp-image-7708 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM.png\" alt=\"ansible s3 list example\" width=\"2720\" height=\"1852\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM.png 2720w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM-300x204.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM-1024x697.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM-768x523.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM-1536x1046.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-3.04.03-PM-2048x1394.png 2048w\" sizes=\"(max-width: 2720px) 100vw, 2720px\" \/><\/a><\/p>\n<p>This is how you can list the objects in the bucket.<\/p>\n<p>&nbsp;<\/p>\n<h3>Will it list the directories and subdirectories?<\/h3>\n<p><strong>Yes,<\/strong> By default, the list mode of Ansible would list the objects and their subdirectories if they are a directory.<\/p>\n<p>You can limit the number of keys\/objects to be returned using a value called <code>max_keys<\/code> which we will see later.<\/p>\n<p>Here is the output of the same playbook listing the directories and their content<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM.png\"><img class=\"post-img alignnone wp-image-7710 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM.png\" alt=\"ansible s3 list example\" width=\"2596\" height=\"1956\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM.png 2596w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM-300x226.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM-1024x772.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM-768x579.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM-1536x1157.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.34.20-PM-2048x1543.png 2048w\" sizes=\"(max-width: 2596px) 100vw, 2596px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 List Objects using the prefix<\/h3>\n<p>Now let us suppose we have so many files in our S3 buckets and categorized into directories and subdirectories like this<\/p>\n<p>Let&#8217;s say we are maintaining a directory for every single month for each year like this.<\/p>\n<p>What If we want to list only the files of\u00a0 <code>2021<\/code> and <code>12th<\/code> month<\/p>\n<p>Based on the directory convention we follow, we can use <code>2021\/12<\/code> as the prefix to display all the files of Dec 2021.<\/p>\n<p>&nbsp;<\/p>\n<h2><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.57.33-PM.png\"><img class=\"post-img alignnone wp-image-7711 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.57.33-PM.png\" alt=\"ansible s3 list prefix\" width=\"1288\" height=\"1262\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.57.33-PM.png 1288w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.57.33-PM-300x294.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.57.33-PM-1024x1003.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-6.57.33-PM-768x752.png 768w\" sizes=\"(max-width: 1288px) 100vw, 1288px\" \/><\/a><\/h2>\n<p>&nbsp;<\/p>\n<p>Here is the Playbook with the prefix<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: AWS S3 Bucket List - Ansible\r\n  hosts: localhost\r\n  tasks:\r\n  - name: List keys\/Objects\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: list\r\n      prefix: \"2021\/12\"\r\n    register: listresult\r\n\r\n  - debug: msg={{listresult.s3_keys}}<\/pre>\n<p>&nbsp;<\/p>\n<p>Here is the execution output of this playbook. you can see only the files matching the prefix are listed.<\/p>\n<p>It is more like using a wildcard as a prefix in <code>ls -lrt<\/code> command if you are familiar with linux<\/p>\n<p>&nbsp;<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix.png\"><img class=\"post-img alignnone wp-image-7715 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix.png\" alt=\"ansible s3 list\" width=\"2922\" height=\"1764\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix.png 2922w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix-300x181.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix-1024x618.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix-768x464.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix-1536x927.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/s3listprefix-2048x1236.png 2048w\" sizes=\"(max-width: 2922px) 100vw, 2922px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Control the No of objects returned with max_keys<\/h3>\n<p>As time goes on S3 objects and their subdirectories and files would become more complex and grow.<\/p>\n<p>Just imagine having a Million files and subdirectories under each directory.<\/p>\n<p>When you execute a list command on the bucket with millions and billions of objects. you need to set a limit on how many objects you can get as a result.<\/p>\n<p>By default this value is <code>1000<\/code>\u00a0 but not all the time we want 1000, right?<\/p>\n<p>so to limit it we can use the <code>max_keys<\/code> property with some numeric value<\/p>\n<p>Here is the playbook with the <code>max_keys<\/code> set to 400.\u00a0 It would restrict the number of returned objects to 400 despite there are more than 400<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: AWS S3 Bucket List - Ansible\r\n  hosts: localhost\r\n  tasks:\r\n  - name: List keys\/Objects\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: list\r\n      prefix: \"2021\/12\"\r\n      max_keys: 400\r\n    register: listresult\r\n\r\n  - debug: msg={{listresult.s3_keys}}<\/pre>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<h3>Specify where to start when listing objects with a marker<\/h3>\n<p>when you are listing objects, the objects are returned in ascending order based on their name.<\/p>\n<p>For example, consider this resultset.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">ok: [localhost] =&gt; {\r\n    \"msg\": [\r\n        \"2021\/12\/\",\r\n        \"2021\/12\/26\/\",\r\n        \"2021\/12\/26\/Screenshot 2021-12-26 at 2.43.55 PM.png\",\r\n        \"2021\/12\/26\/Screenshot 2021-12-26 at 2.58.51 PM.png\",\r\n        \"2021\/12\/26\/Screenshot 2021-12-26 at 3.04.03 PM.png\",\r\n        \"2021\/12\/26\/Screenshot 2021-12-26 at 6.34.20 PM.png\",\r\n        \"2021\/12\/26\/Screenshot 2021-12-26 at 6.57.33 PM.png\"\r\n    ]\r\n}<\/pre>\n<p>Now I want to list only the objects starting from the third one<\/p>\n<pre>2021\/12\/26\/Screenshot 2021-12-26 at 3.04.03 PM.png<\/pre>\n<p>That&#8217;s where the <code>marker<\/code> parameter comes into the picture.<\/p>\n<p>Here is the playbook with <code>marker<\/code><\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: AWS S3 Bucket List - Ansible\r\n  hosts: localhost\r\n  tasks:\r\n  - name: List keys\/Objects\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: list\r\n      prefix: \"2021\/12\"\r\n      marker: \"2021\/12\/26\/Screenshot 2021-12-26 at 3.04.03 PM.png\"\r\n    register: listresult\r\n\r\n  - debug: msg={{listresult.s3_keys}}<\/pre>\n<p>&nbsp;<\/p>\n<p>Here is the result of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM.png\"><img class=\"post-img alignnone wp-image-7716 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM.png\" alt=\"ansible s3 list marker\" width=\"2590\" height=\"1718\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM.png 2590w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM-300x199.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM-1024x679.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM-768x509.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM-1536x1019.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM-2048x1358.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM-120x80.png 120w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-26-at-8.31.33-PM-360x240.png 360w\" sizes=\"(max-width: 2590px) 100vw, 2590px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Ansible S3 Upload Examples<\/h2>\n<p>Before we proceed to. upload files to S3 there are some key points we need to be aware of.<\/p>\n<p><strong>An Amazon S3 bucket has no directory hierarchy<\/strong> such as you would find in a typical computer file system. You can, however, create a logical hierarchy by using object key names that imply a folder structure. For example, instead of naming an object\u00a0<code class=\"code\">sample.jpg<\/code>, you can name it\u00a0<code class=\"code\">photos\/2006\/February\/sample.jpg<\/code>.<\/p>\n<p>This would create the necessary directory structure if it is not already present. If it present, It would upload your file there.<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 Upload \/ PUT example<\/h3>\n<p>Uploading a file to S3 is technically known as PUT and we need to execute a PUT call to upload a file to S3.<\/p>\n<p>Now let us see how to use Ansible to upload a file using the PUT mode.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: AWS S3 Bucket Upload - Ansible\r\n  hosts: localhost\r\n  tasks:\r\n  - name: Upload\/PUT file to S3 bucket\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: put\r\n      object: \"2021\/12\/Screenshot 2021-12-26 at 8.31.33 PM.png\"\r\n      src: \"\/Users\/saravananthangaraj\/Desktop\/Screenshot 2021-12-26 at 8.31.33 PM.png\"\r\n    register: putresult\r\n\r\n  - debug: msg=\"{{ putresult.msg }} and the S3 Object URL is {{putresult.url}}\"\r\n    when: putresult.changed<\/pre>\n<p><span style=\"color: #e80e91;\">when you are uploading a file that is not present<\/span>, it would be created.<\/p>\n<p><span style=\"color: #e80e91;\">If it is already present and if the bucket versioning is enabled<\/span>, the old version of the file would be replaced with this new file you are uploading. you can optionally retrieve the old versions in case if you need them.<\/p>\n<p><span style=\"color: #107bc7;\"><span style=\"color: #e80e91;\">If the file is already present but the Versioning is not enabled<\/span>,<\/span> you would end up overwriting the data forever.\u00a0 Even if you have accidentally done it.<\/p>\n<p>So Enabling Bucket versioning is highly recommended if you are storing critical data and do not want to end up losing it.<\/p>\n<p>Enabling Bucket Versioning would also enforce MFA for delete actions so the files or the versions cannot be deleted easily.<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM.png\"><img class=\"post-img alignnone wp-image-7720 size-full\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM.png\" alt=\"ansible s3 upload\" width=\"3584\" height=\"1728\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM.png 3584w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM-300x145.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM-1024x494.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM-768x370.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM-1536x741.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-1.01.10-AM-2048x987.png 2048w\" sizes=\"(max-width: 3584px) 100vw, 3584px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 PUT \/ UPLOAD rendered template &#8211; Dynamic Content<\/h3>\n<p>At times we might want to generate a file with dynamic content using the Ansible Jinja2 template and then upload it to the S3 bucket.<\/p>\n<p>How can we do that?<\/p>\n<p>Well, let&#8217;s see a quick example.<\/p>\n<p>I am going to list my <code>Desktop<\/code> directory with <code>ls -lrt<\/code> command and save the results into a file and upload that file into S3.<\/p>\n<p>Here is the playbook and it does the following things<\/p>\n<ul>\n<li>Execute the command and store the result into <code>register<\/code> variable<\/li>\n<li>Using <code>set_fact<\/code> create a new fact variable and store the collected directory listing,\u00a0 the data type would be a list of files<\/li>\n<li>Display the fact variable we have created using <code>debug<\/code><\/li>\n<li>Using template and Jinja2, Iterate over the list of files and write into a file using <code>lookup<\/code><\/li>\n<li>Redirect the <code>lookup<\/code> output to the <code>content<\/code> stream of aws_s3 and create a new file and upload to S3<\/li>\n<\/ul>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: AWS S3 Bucket Upload - Ansible\r\n  hosts: localhost\r\n  tasks:\r\n  - name: List Desktop and save the output to register variable\r\n    shell: \"ls -lrt \/Users\/saravananthangaraj\/Desktop\"\r\n    register: dirlist\r\n  \r\n  - name: Save the output to Content varible\r\n    set_fact: \r\n      content: \"{{dirlist.stdout_lines}}\"\r\n    when: dirlist.changed\r\n  \r\n  - name: Display the Content before Writing\r\n    debug: msg=\"{{content}}\"\r\n\r\n  - name: Upload\/PUT file to S3 bucket\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: put\r\n      object: \"2021\/12\/27\/DesktopDirectoryListing.txt\"\r\n      content: \"{{ lookup('template', 'directorylist.yml.j2')}}\"\r\n    register: putresult<\/pre>\n<p>here is the template file we are using in the lookup<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">{% for line in content %}\r\n    {{line}}\r\n{% endfor %}<\/pre>\n<p>both these files are kept in the same directory so I am referring to just the file name with lookup and template.<\/p>\n<p>So the content would be placed into this file and then copied over to the S3 with the name <code>DesktopDirectoryListing.txt<\/code><\/p>\n<p>If you go to S3 and download the file and view it, you can see the directory listing.<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 PUT \/ UPLOAD with Custom Headers &amp; Metadata<\/h3>\n<p>S3 lets you control the access and versioning of the objects by specifying custom headers and metadata<\/p>\n<p>For example, you want to give permission to a user X for the object you are uploading right now, based on the email address of his AWS account.<\/p>\n<p>you can do that with the following headers<\/p>\n<pre>x-amz-grant-full-control: <code class=\"replaceable\">GrantFullControl<\/code> x-amz-grant-read: <code class=\"replaceable\">GrantRead<\/code><\/pre>\n<p>In fact, there are more Headers available for you to use while uploading the objects. Here is the list of headers taken from AWS Documentation<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">PUT \/Key+ HTTP\/1.1\r\nHost: Bucket.s3.amazonaws.com\r\nx-amz-acl: ACL\r\nCache-Control: CacheControl\r\nContent-Disposition: ContentDisposition\r\nContent-Encoding: ContentEncoding\r\nContent-Language: ContentLanguage\r\nContent-Length: ContentLength\r\nContent-MD5: ContentMD5\r\nContent-Type: ContentType\r\nExpires: Expires\r\nx-amz-grant-full-control: GrantFullControl\r\nx-amz-grant-read: GrantRead\r\nx-amz-grant-read-acp: GrantReadACP\r\nx-amz-grant-write-acp: GrantWriteACP\r\nx-amz-server-side-encryption: ServerSideEncryption\r\nx-amz-storage-class: StorageClass\r\nx-amz-website-redirect-location: WebsiteRedirectLocation\r\nx-amz-server-side-encryption-customer-algorithm: SSECustomerAlgorithm\r\nx-amz-server-side-encryption-customer-key: SSECustomerKey\r\nx-amz-server-side-encryption-customer-key-MD5: SSECustomerKeyMD5\r\nx-amz-server-side-encryption-aws-kms-key-id: SSEKMSKeyId\r\nx-amz-server-side-encryption-context: SSEKMSEncryptionContext\r\nx-amz-server-side-encryption-bucket-key-enabled: BucketKeyEnabled\r\nx-amz-request-payer: RequestPayer\r\nx-amz-tagging: Tagging\r\nx-amz-object-lock-mode: ObjectLockMode\r\nx-amz-object-lock-retain-until-date: ObjectLockRetainUntilDate\r\nx-amz-object-lock-legal-hold: ObjectLockLegalHoldStatus\r\nx-amz-expected-bucket-owner: ExpectedBucketOwner\r\n\r\nBody<\/pre>\n<p>You can read more about them here<\/p>\n<ul>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/API\/API_PutObject.html#API_PutObject_RequestSyntax\">PUT Object headers<\/a><\/li>\n<li><a href=\"https:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/userguide\/UsingMetadata.html\">Object metadata<\/a><\/li>\n<\/ul>\n<p>Here is the Ansible Playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: AWS S3 Bucket Upload - Ansible with Metadata and headers\r\n  hosts: localhost\r\n  tasks:\r\n  - name: Upload\/PUT file to S3 bucket\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: put\r\n      object: \"2021\/12\/27\/Screenshot 2021-12-27 at 1.10.19 AM.png\"\r\n      src: \"\/Users\/saravananthangaraj\/Desktop\/Screenshot 2021-12-27 at 1.10.19 AM.png\"\r\n      headers: 'x-amz-grant-full-control=emailAddress=rumenlishkoff@gmail.com'\r\n      metadata: 'Content-Encoding=gzip,Cache-Control=no-cache'\r\n    register: putresult\r\n\r\n  - debug: \r\n      msg=\"{{ putresult.msg }} and the S3 Object URL is {{putresult.url}}\" \r\n    when: putresult.changed<\/pre>\n<p>&nbsp;<\/p>\n<h2>Ansible S3 Download \/ GET Examples<\/h2>\n<p>In this section, we are going to see a few examples of how to use Ansible to download objects from S3.<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 GET \/ Download Object\u00a0 &#8211; Single File<\/h3>\n<p>To download or GET the object from the S3 bucket we are using the <code>get<\/code> mode of ansible <code>aws_s3<\/code> module<\/p>\n<p>Here is the example playbook that downloads a single file from S3 to local<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"generic\">---\r\n- name: Download object from AWS S3 bucket using Ansible\r\n  hosts: localhost\r\n  tasks:\r\n  - name: GET\/DOWNLOAD file from S3 bucket\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: get\r\n      object: \"2021\/12\/27\/Screenshot 2021-12-27 at 1.10.19 AM.png\"\r\n      dest: \"\/Users\/saravananthangaraj\/Downloads\/Screenshot 2021-12-27 at 1.10.19 AM.png\"\r\n    register: getresult\r\n\r\n  - debug: \r\n      msg=\"{{ getresult.msg }}\" \r\n    when: getresult.changed<\/pre>\n<p>The result of this playbook would be like this<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM.png\"><img class=\"alignnone size-full wp-image-7733\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM.png\" alt=\"ansible s3 download\" width=\"2868\" height=\"1932\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM.png 2868w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM-300x202.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM-1024x690.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM-768x517.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM-1536x1035.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM-2048x1380.png 2048w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-27-at-10.31.47-PM-120x80.png 120w\" sizes=\"(max-width: 2868px) 100vw, 2868px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 GET \/ Download Object\u00a0 &#8211; How to download Directory recursively<\/h3>\n<p>To download a directory with its content from S3.\u00a0 There is no available option in the S3 console as you may know<\/p>\n<p>the only option we have is <code>recursive<\/code> option in <a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-s3-cp-examples-how-to-copy-files-with-s3-cli-devops-junction\/#How_to_Recursively_upload_or_download_copy_files_with_AWS_S3_CP_command\">AWS CLI S3<\/a> as we have covered<a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-s3-cp-examples-how-to-copy-files-with-s3-cli-devops-junction\"> in our other article <\/a><\/p>\n<p>But in Ansible there is no such <code>recursive<\/code> option as we have checked. so we created a workaround the obvious way<\/p>\n<p>Get a list of Directories and Files and save it in a list and try to download one by one by iterating over the <code>directories<\/code> and <code>files<\/code><\/p>\n<p>We are using some Advanced Ansible concepts like <code>map<\/code> filter and <code>Jinja2<\/code> expressions in this.<\/p>\n<p>If you are new to these items please refer our other exclusive articles on those topics<\/p>\n<ul>\n<li><a href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-map\/\">Ansible Map Introduction and Examples<\/a><\/li>\n<li><a href=\"https:\/\/jinja.palletsprojects.com\/en\/3.0.x\/templates\/\">Jinja3 Designer Documentation<\/a><\/li>\n<\/ul>\n<p>Here is the playbook<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Download object from AWS S3 bucket using Ansible\r\n  hosts: localhost\r\n  vars: \r\n    - directories: []\r\n    - files: []\r\n    - destlocation: \"\/Users\/saravananthangaraj\/Downloads\"\r\n\r\n  tasks:\r\n\r\n  - name: Get the list of files first\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: list\r\n      prefix: \"2021\/12\/\"\r\n    register: listresult\r\n\r\n  - name: Get the list of Directories\r\n    set_fact: \r\n      directories: '{%if item is not none %}{{ directories }} + [ \"{{ item }}\" ] {% else %}{{directories}}{% endif %}'\r\n    with_items: \"{{ listresult.s3_keys | map('regex_search', '^.+\\\/$') }}\"\r\n\r\n  - name: Get the list of Files\r\n    set_fact: \r\n      files: '{%if item is not none %}{{ files }} + [ \"{{ item }}\" ] {% else %}{{files}}{% endif %}'\r\n    with_items: \"{{ listresult.s3_keys | map('regex_search', '^.+[^\\\/]$') }}\"\r\n    \r\n  - name: Create the directories first\r\n    shell: |\r\n      mkdir -p {{item}}\r\n    args:\r\n      chdir: \"{{destlocation}}\"\r\n    with_items: \"{{directories}}\"\r\n  \r\n  - name: GET\/DOWNLOAD file from S3 bucket\r\n    amazon.aws.aws_s3:\r\n      profile: personal\r\n      bucket: devopsjunction\r\n      mode: get\r\n      object: \"{{item}}\"\r\n      dest: \"{{destlocation}}\/{{item}}\"\r\n    register: getresult\r\n    with_items: \"{{files}}\"\r\n\r\n  - debug: \r\n      msg=\"{{ getresult.msg }}\" \r\n    when: getresult.changed<\/pre>\n<p>I guess it would be better to explain this over the video. here you go.<\/p>\n<div data-nosnippet=\"true\"><div class=\"lyte-wrapper\" style=\"width:640px;max-width:100%;margin:5px;\"><div class=\"lyMe\" id=\"WYL_GpVPt3Iom7Y\"><div id=\"lyte_GpVPt3Iom7Y\" data-src=\"\/\/i.ytimg.com\/vi\/GpVPt3Iom7Y\/hqdefault.jpg\" class=\"pL\"><div class=\"tC\"><div class=\"tT\"><\/div><\/div><div class=\"play\"><\/div><div class=\"ctrl\"><div class=\"Lctrl\"><\/div><div class=\"Rctrl\"><\/div><\/div><\/div><noscript><a href=\"https:\/\/youtu.be\/GpVPt3Iom7Y\"><img src=\"https:\/\/i.ytimg.com\/vi\/GpVPt3Iom7Y\/0.jpg\" alt=\"\" width=\"640\" height=\"340\" \/><br \/>Watch this video on YouTube<\/a><\/noscript><\/div><\/div><div class=\"lL\" style=\"max-width:100%;width:640px;margin:5px;\"><\/div><\/div>\n<p>Hope the video clarifies if you have any doubt, with that let&#8217;s move to another example<\/p>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 GET \/ Download Specific version of Object<\/h3>\n<p>If your S3 bucket is production standard then you might be having Bucket Versioning enabled.<\/p>\n<p>When the bucket versioning is enabled. When you upload an object which is already present in S3. it would not be completely overwritten rather replaced with the latest and the old version can still be accessed<\/p>\n<p>You can list the available versions of each object in S3 management console on the <code>versions<\/code> tab<\/p>\n<p>If you know the version ID you can pass it while trying to download the object using the <code>version<\/code> parameter<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">- name: Get a specific version of an object.\r\n  amazon.aws.aws_s3:\r\n    bucket: devopsjunction\r\n    object: 2021\/12\/26\/Screenshot 2021-12-26 at 2.43.55 PM.png\r\n    version: 48c9ee5131af7a716edc22df9772aa6f\r\n    dest: \/home\/sarav\/Downloads\/Screenshot 2021-12-26 at 2.43.55 PM.png\r\n    mode: get<\/pre>\n<p>&nbsp;<\/p>\n<h3>Ansible S3 GET \/ Download Only when the Checksum does not match<\/h3>\n<p>There is a parameter in the s3 module named <code>overwrite<\/code> which adds control over the overwriting behaviour of the Upload(PUT) or download( GET) tasks<\/p>\n<p>By default, it is set to <code>always<\/code> overwrite if the object exists either upload\/download.<\/p>\n<p>Besides <code>always<\/code> overwrite accepts two more values<\/p>\n<ul>\n<li>never\u00a0 &#8211; Do not overwrite<\/li>\n<li>different &#8211; Overwrite when the checksum is different<\/li>\n<\/ul>\n<p>If you do not want to overwrite either while uploading or downloading. you can set this parameter to <code>never<\/code><\/p>\n<p>the <code>different<\/code> value is to validate the checksum of the objects before performing the action.<\/p>\n<p>If the Checksum is different, then perform the action. Can either be upload or download<\/p>\n<p>Here is the playbook that downloads the object from S3 when checksums are different<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Download object from AWS S3 bucket using Ansible\r\n  hosts: localhost\r\n\r\n  tasks:\r\n  \r\n  - name: GET an object but don't download if the file checksums match. New in 2.0\r\n    amazon.aws.aws_s3:\r\n      bucket: devopsjunction\r\n      profile: personal\r\n      object: \"2021\/12\/26\/Screenshot 2021-12-26 at 2.43.55 PM.png\"\r\n      dest: \"\/Users\/saravananthangaraj\/Downloads\/2021\/12\/26\/Screenshot 2021-12-26 at 2.43.55 PM.png\"\r\n      mode: get\r\n      overwrite: different\r\n    register: getresult\r\n\r\n  - debug: msg=\"{{ getresult.msg }}\"<\/pre>\n<p>&nbsp;<\/p>\n<p>If the checksums are matching you would see a message like this and the task would be <code>OK<\/code>and not <code>CHANGED<\/code><\/p>\n<pre>Local and remote object are identical, ignoring. Use overwrite=always parameter to force.<\/pre>\n<p>Here is the output<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM.png\"><img class=\"alignnone size-full wp-image-7745\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM.png\" alt=\"ansible s3 download checksum\" width=\"3114\" height=\"2004\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM.png 3114w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM-300x193.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM-1024x659.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM-768x494.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM-1536x988.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.01.51-AM-2048x1318.png 2048w\" sizes=\"(max-width: 3114px) 100vw, 3114px\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<h2>Ansible S3 Delete Objects example<\/h2>\n<p>In this section, we are going to see how to Delete Objects from S3 using Ansible.<\/p>\n<p>to delete objects you need to use the <code>mode: delobj<\/code> in your task<\/p>\n<p>Here is the playbook to delete an object from the S3 bucket using ansible<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Delete object from AWS S3 bucket using Ansible\r\n  hosts: localhost\r\n\r\n  tasks:\r\n  \r\n  - name: Delete Objects from S3 bucket\r\n    amazon.aws.aws_s3:\r\n      bucket: devopsjunction\r\n      profile: personal\r\n      object: \"2021\/12\/26\/Screenshot 2021-12-26 at 2.43.55 PM.png\"\r\n      mode: delobj\r\n    register: delresult\r\n\r\n  - debug: msg=\"{{ delresult.msg }}\"<\/pre>\n<p>Here is the execution output of this playbook<\/p>\n<p><a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM.png\"><img class=\"alignnone size-full wp-image-7746\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM.png\" alt=\"ansible s3 delete object\" width=\"2952\" height=\"1882\" srcset=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM.png 2952w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM-300x191.png 300w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM-1024x653.png 1024w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM-768x490.png 768w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM-1536x979.png 1536w, https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Screenshot-2021-12-29-at-12.26.57-AM-2048x1306.png 2048w\" sizes=\"(max-width: 2952px) 100vw, 2952px\" \/><\/a><\/p>\n<p>There are a few things I have noticed with Ansible S3 Delete, I thought you should be aware of this<\/p>\n<p><span style=\"color: #003366;\"><strong>Quick caveats<\/strong><\/span><\/p>\n<ul>\n<li>Ansible Delete Object does not check if the object is actually present or not.\u00a0 Even if the object is not present it returns the Successful message <em>Object deleted from bucket<\/em><\/li>\n<li>You Can delete the directories using <code>delobj<\/code> ansible s3 delete only when the directory is empty. otherwise, it would give a Successful message but not the deletion does not happen<\/li>\n<li>The successful message comes despite the deletion status of the file. Which seems buggy.<\/li>\n<\/ul>\n<p>So make sure to inspect twice if the object is really deleted in these cases.<\/p>\n<p>( These caveats are made based on the observation made as of 29 Dec 2021. If its fixed we will try to keep this updated (or) please let us know in comments )<\/p>\n<p>&nbsp;<\/p>\n<h2>Ansible S3 Copy Objects example &#8211; Copying between S3 buckets<\/h2>\n<p>In this section, we are going to see how to copy objects between two s3 buckets using ansible<\/p>\n<p>Here is the playbook that performs the transfer between two S3 buckets or copies objects from one bucket to another.<\/p>\n<p>Truth be told, we have not been able to test this Copy module successfully and this playbook was created as per the Ansible documentation.<\/p>\n<p>We have created an issue to Ansible <a href=\"https:\/\/github.com\/ansible-collections\/amazon.aws\/issues\/602\">https:\/\/github.com\/ansible-collections\/amazon.aws\/issues\/602<\/a><\/p>\n<p>We will keep this article updated as soon we get more info on this one.<\/p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"yaml\" data-enlighter-theme=\"bootstrap4\" data-enlighter-linenumbers=\"false\">---\r\n- name: Copy objects from one S3 bucket to another bucket using Ansible\r\n  hosts: localhost\r\n\r\n  tasks:\r\n  - name: Copy Objects from one S3 bucket to another\r\n    amazon.aws.aws_s3:\r\n      bucket: gritfy.io\r\n      profile: personal\r\n      object: sqscli-mac.zip\r\n      mode: copy\r\n      copy_src: \r\n        bucket: devopsjunction\r\n        object: sqscli-mac.zip\r\n    register: copyresult\r\n\r\n  - debug: msg=\"{{ delresult.msg }}\"\r\n\r\n<\/pre>\n<p>&nbsp;<\/p>\n<p>Meanwhile, you can use the AWS CLI S3 CP command to perform this task.<\/p>\n<p>We have a dedicated article for the same<\/p>\n<blockquote class=\"wp-embedded-content\" data-secret=\"XsXelGcIQQ\"><p><a href=\"https:\/\/www.middlewareinventory.com\/blog\/aws-s3-cp-examples-how-to-copy-files-with-s3-cli-devops-junction\/\">AWS S3 CP Examples &#8211; How to Copy Files with S3 CLI  | Devops Junction<\/a><\/p><\/blockquote>\n<p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" style=\"position: absolute; clip: rect(1px, 1px, 1px, 1px);\" title=\"&#8220;AWS S3 CP Examples &#8211; How to Copy Files with S3 CLI  | Devops Junction&#8221; &#8212; Middleware Inventory\" src=\"https:\/\/www.middlewareinventory.com\/blog\/aws-s3-cp-examples-how-to-copy-files-with-s3-cli-devops-junction\/embed\/#?secret=XsXelGcIQQ\" data-secret=\"XsXelGcIQQ\" width=\"600\" height=\"338\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"><\/iframe><\/p>\n<p>&nbsp;<\/p>\n<h2>Conclusion<\/h2>\n<p>In this detailed article, I have tried to cover as many as examples possible for the Ansible aws_s3 module usage<\/p>\n<ul>\n<li>How to list S3 objects using Ansible using prefix and max_keys etc<\/li>\n<li>Upload S3 Objects using Ansible with template and metadata<\/li>\n<li>Download S3 objects using Ansible recursively and based on checksum etc<\/li>\n<li>How to Delete the Objects from S3 using Ansible<\/li>\n<li>How to Copy objects between two S3 buckets<\/li>\n<\/ul>\n<p>Hope you found all the examples helpful. we have tested each playbook as always and we have mentioned if we have noticed any issue as a caveat.<\/p>\n<p>If you have any feedback or questions. please use the comments section.<\/p>\n<a href=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\"><img class=\"post-img\" src=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/09\/DaaS.svg\" alt=\"gritfy\" width=\"1047\" height=\"415\" class=\"alignnone size-full wp-image-6623\" \/><\/a>\n<p>&nbsp;<\/p>\n<p>Cheers<br \/>\nRumen Lishkov<\/p>\n<div id=\"postfollow\">\r\n<a href='https:\/\/ko-fi.com\/O4O51FG7C' target='_blank'><img height='46' style='border:0px;height:46px;width: 186px' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi3.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\r\n<p>Follow us on<a href=\"http:\/\/www.facebook.com\/middlewareinventory\">Facebook<\/a> or<a href=\"http:\/\/www.twitter.com\/mwinventory\">Twitter<\/a>\r\n<\/br>\r\nFor more practical videos and tutorials. <a href=\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw?sub_confirmation=1\">Subscribe to our channel<\/a>\r\n<\/br>\r\nFollow me on Linkedin <a href=\"https:\/\/www.linkedin.com\/comm\/mynetwork\/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=saravakmwinventory\">My Profile<\/a>\r\n<\/br>\r\n<\/i>For any Consultation or to hire us <a href=\"mailto:rumenlishkoff@gmail.com\"> rumenlishkoff@gmail.com<\/a>\r\n<\/br>\r\nIf you like this article. Show your Support! <a href=\"https:\/\/ko-fi.com\/middlewareinventory\">Buy me a Coffee.<\/a>\r\n<\/br>\r\n<\/p>\r\n<p style=\"color: palevioletred !important;\">Signup for Exclusive \"Subscriber-only\" Content<\/p>\r\n\n\t\t<div class=\"emaillist\">\n\t\t\t<form action=\"#\" method=\"post\" class=\"es_subscription_form es_shortcode_form\" id=\"es_subscription_form_1670577443\" data-source=\"ig-es\">\n\t\t\t\t\t\t\t\t<div class=\"es-field-wrap\"><label>Name*<br \/><input type=\"text\" name=\"name\" class=\"ig_es_form_field_name\" placeholder=\"\" value=\"\" required=\"required\" \/><\/label><\/div><div class=\"es-field-wrap\"><label>Email*<br \/><input class=\"es_required_field es_txt_email ig_es_form_field_email\" type=\"email\" name=\"email\" value=\"\" placeholder=\"\" required=\"required\" \/><\/label><\/div><input type=\"hidden\" name=\"lists[]\" value=\"1\" \/><input type=\"hidden\" name=\"form_id\" value=\"3\" \/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page\" value=\"7702\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es_email_page_url\" value=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"status\" value=\"Unconfirmed\"\/>\n\t\t\t\t<input type=\"hidden\" name=\"es-subscribe\" id=\"es-subscribe\" value=\"7aebfb1a9b\"\/>\n\t\t\t\t<label style=\"position:absolute;top:-99999px;left:-99999px;z-index:-99;\"><input type=\"email\" name=\"es_hp_email\" class=\"es_required_field\" tabindex=\"-1\" autocomplete=\"-1\" value=\"\"\/><\/label>\n\t\t\t\t\t\t\t\t<input type=\"submit\" name=\"submit\" class=\"es_subscription_form_submit es_submit_button es_textbox_button\" id=\"es_subscription_form_submit_1670577443\" value=\"Subscribe\"\/>\n\n\t\t\t\t\n\t\t\t\t<span class=\"es_spinner_image\" id=\"spinner-image\"><img src=\"https:\/\/www.middlewareinventory.com\/wp-content\/plugins\/email-subscribers\/lite\/public\/images\/spinner.gif\" alt=\"Loading\"\/><\/span>\n\n\t\t\t<\/form>\n\n\t\t\t<span class=\"es_subscription_message\" id=\"es_subscription_message_1670577443\"><\/span>\n\t\t<\/div>\n\n\t\t\r\n<\/div>\r\n<hr>\n","protected":false},"excerpt":{"rendered":"<p>S3 has become the cheap and best object storage and it is used widely across enterprises and products, to securely save and access data over the internet. We have various ways to interact with the S3 bucket,\u00a0 to upload, download and copy objects back and forth to S3. SDKs ([&#8230;]<\/p>\n","protected":false},"author":1,"featured_media":7749,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":{"_et_pb_use_builder":"","_et_pb_old_content":"","_et_gb_content_width":""},"categories":[98],"tags":[],"yoast_head":"<!-- This site is optimized with the Yoast SEO plugin v14.9 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>How to use ansible with S3 - Ansible aws_s3 examples | Devops Junction<\/title>\n<meta name=\"description\" content=\"Ansible S3 examples and how to use ansible aws_s3 module to copy, upload, download and list objects in S3. Ansible S3 list example, Ansible S3 Upload example, Ansible S3 Download example.\" \/>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"How to use ansible with S3 - Ansible aws_s3 examples | Devops Junction\" \/>\n<meta property=\"og:description\" content=\"Ansible S3 examples and how to use ansible aws_s3 module to copy, upload, download and list objects in S3. Ansible S3 list example, Ansible S3 Upload example, Ansible S3 Download example.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/\" \/>\n<meta property=\"og:site_name\" content=\"Middleware Inventory\" \/>\n<meta property=\"article:publisher\" content=\"http:\/\/www.facebook.com\/devopsjunc\" \/>\n<meta property=\"article:published_time\" content=\"2021-12-31T18:53:46+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-01-01T09:23:18+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1748\" \/>\n\t<meta property=\"og:image:height\" content=\"1240\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@mwinventory\" \/>\n<meta name=\"twitter:site\" content=\"@mwinventory\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"Organization\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\",\"name\":\"Middleware Inventory\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"sameAs\":[\"http:\/\/www.facebook.com\/devopsjunc\",\"https:\/\/www.youtube.com\/channel\/UCRuqBFM6ioWwviNJkgOjeWw\",\"https:\/\/twitter.com\/mwinventory\"],\"logo\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2020\/09\/Screenshot-2020-09-18-at-3.49.40-AM.jpg\",\"width\":300,\"height\":107,\"caption\":\"Middleware Inventory\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#logo\"}},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\",\"url\":\"https:\/\/www.middlewareinventory.com\/\",\"name\":\"Devops Junction\",\"description\":\"An inventory of [i]nformation, Middleware and much more.\",\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":\"https:\/\/www.middlewareinventory.com\/?s={search_term_string}\",\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-US\"},{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#primaryimage\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/www.middlewareinventory.com\/wp-content\/uploads\/2021\/12\/Ansible-S3.jpg\",\"width\":1748,\"height\":1240,\"caption\":\"Ansible S3\"},{\"@type\":\"WebPage\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#webpage\",\"url\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/\",\"name\":\"How to use ansible with S3 - Ansible aws_s3 examples | Devops Junction\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#website\"},\"primaryImageOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#primaryimage\"},\"datePublished\":\"2021-12-31T18:53:46+00:00\",\"dateModified\":\"2022-01-01T09:23:18+00:00\",\"description\":\"Ansible S3 examples and how to use ansible aws_s3 module to copy, upload, download and list objects in S3. Ansible S3 list example, Ansible S3 Upload example, Ansible S3 Download example.\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/\"]}]},{\"@type\":\"Article\",\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#article\",\"isPartOf\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#webpage\"},\"author\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\"},\"headline\":\"How to use ansible with S3 &#8211; Ansible aws_s3 examples | Devops Junction\",\"datePublished\":\"2021-12-31T18:53:46+00:00\",\"dateModified\":\"2022-01-01T09:23:18+00:00\",\"mainEntityOfPage\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#webpage\"},\"commentCount\":0,\"publisher\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/#organization\"},\"image\":{\"@id\":\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#primaryimage\"},\"articleSection\":\"Ansible\",\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"CommentAction\",\"name\":\"Comment\",\"target\":[\"https:\/\/www.middlewareinventory.com\/blog\/ansible-aws_s3-example\/#respond\"]}]},{\"@type\":\"Person\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#\/schema\/person\/050bf13e27b309d29d1bda45c4eb3147\",\"name\":\"Rumen Lishkov\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https:\/\/www.middlewareinventory.com\/#personlogo\",\"inLanguage\":\"en-US\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/c22e4a54d67750291a9892531f94ffb3?s=96&d=mm&r=g\",\"caption\":\"Rumen Lishkov\"}}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->","_links":{"self":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7702"}],"collection":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/comments?post=7702"}],"version-history":[{"count":5,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7702\/revisions"}],"predecessor-version":[{"id":7778,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/posts\/7702\/revisions\/7778"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media\/7749"}],"wp:attachment":[{"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/media?parent=7702"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/categories?post=7702"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.middlewareinventory.com\/wp-json\/wp\/v2\/tags?post=7702"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}